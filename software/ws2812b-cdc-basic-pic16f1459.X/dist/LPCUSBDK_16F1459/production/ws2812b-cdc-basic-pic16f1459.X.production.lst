

Microchip Technology PIC PRO Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jun 27 19:18:50 2020

Microchip Technology Omniscient Code Generator v2.00 (PRO mode) build 20180527130849
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    22                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    23                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    26                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    27                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    29                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    30                           	psect	text2,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext1,local,class=CONST,delta=2
    33                           	psect	swtext2,local,class=CONST,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	swtext3,local,class=CONST,delta=2
    40                           	psect	swtext4,local,class=CONST,delta=2
    41                           	psect	swtext5,local,class=CONST,delta=2
    42                           	psect	swtext6,local,class=CONST,delta=2
    43                           	psect	text40,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext7,local,class=CONST,delta=2
    45                           	psect	swtext8,local,class=CONST,delta=2
    46                           	psect	swtext9,local,class=CONST,delta=2
    47                           	psect	text51,local,class=CODE,merge=1,delta=2
    48                           	psect	pa_nodes0,global,class=CODE,delta=2
    49                           	dabs	1,0x20,48,_BDT
    50                           	dabs	1,0x58,8,_CtrlTrfData
    51                           	dabs	1,0x50,8,_SetupPkt
    52                           	dabs	1,0xA0,64,_cdc_data_tx
    53                           	dabs	1,0x120,64,_cdc_data_rx
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.00
    57                           ; Generated 27/05/2018 GMT
    58                           ; 
    59                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1459 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  0111                     	;# 
   137  0112                     	;# 
   138  0113                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0117                     	;# 
   143  0118                     	;# 
   144  0119                     	;# 
   145  011D                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  018E                     	;# 
   149  0191                     	;# 
   150  0191                     	;# 
   151  0192                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0197                     	;# 
   158  0199                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020D                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0391                     	;# 
   184  0392                     	;# 
   185  0393                     	;# 
   186  0394                     	;# 
   187  0395                     	;# 
   188  0396                     	;# 
   189  039A                     	;# 
   190  039B                     	;# 
   191  0611                     	;# 
   192  0612                     	;# 
   193  0613                     	;# 
   194  0613                     	;# 
   195  0614                     	;# 
   196  0615                     	;# 
   197  0616                     	;# 
   198  0616                     	;# 
   199  0691                     	;# 
   200  0692                     	;# 
   201  0693                     	;# 
   202  0694                     	;# 
   203  0695                     	;# 
   204  0E8E                     	;# 
   205  0E8F                     	;# 
   206  0E90                     	;# 
   207  0E91                     	;# 
   208  0E92                     	;# 
   209  0E93                     	;# 
   210  0E94                     	;# 
   211  0E94                     	;# 
   212  0E95                     	;# 
   213  0E96                     	;# 
   214  0E97                     	;# 
   215  0E98                     	;# 
   216  0E99                     	;# 
   217  0E9A                     	;# 
   218  0E9B                     	;# 
   219  0E9C                     	;# 
   220  0E9D                     	;# 
   221  0E9E                     	;# 
   222  0E9F                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0113                     	;# 
   283  0114                     	;# 
   284  0115                     	;# 
   285  0116                     	;# 
   286  0117                     	;# 
   287  0118                     	;# 
   288  0119                     	;# 
   289  011D                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  018E                     	;# 
   293  0191                     	;# 
   294  0191                     	;# 
   295  0192                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0197                     	;# 
   302  0199                     	;# 
   303  019A                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019C                     	;# 
   307  019D                     	;# 
   308  019E                     	;# 
   309  019F                     	;# 
   310  020C                     	;# 
   311  020D                     	;# 
   312  0211                     	;# 
   313  0211                     	;# 
   314  0212                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0213                     	;# 
   318  0214                     	;# 
   319  0214                     	;# 
   320  0215                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0216                     	;# 
   324  0216                     	;# 
   325  0217                     	;# 
   326  0217                     	;# 
   327  0391                     	;# 
   328  0392                     	;# 
   329  0393                     	;# 
   330  0394                     	;# 
   331  0395                     	;# 
   332  0396                     	;# 
   333  039A                     	;# 
   334  039B                     	;# 
   335  0611                     	;# 
   336  0612                     	;# 
   337  0613                     	;# 
   338  0613                     	;# 
   339  0614                     	;# 
   340  0615                     	;# 
   341  0616                     	;# 
   342  0616                     	;# 
   343  0691                     	;# 
   344  0692                     	;# 
   345  0693                     	;# 
   346  0694                     	;# 
   347  0695                     	;# 
   348  0E8E                     	;# 
   349  0E8F                     	;# 
   350  0E90                     	;# 
   351  0E91                     	;# 
   352  0E92                     	;# 
   353  0E93                     	;# 
   354  0E94                     	;# 
   355  0E94                     	;# 
   356  0E95                     	;# 
   357  0E96                     	;# 
   358  0E97                     	;# 
   359  0E98                     	;# 
   360  0E99                     	;# 
   361  0E9A                     	;# 
   362  0E9B                     	;# 
   363  0E9C                     	;# 
   364  0E9D                     	;# 
   365  0E9E                     	;# 
   366  0E9F                     	;# 
   367  0FE4                     	;# 
   368  0FE5                     	;# 
   369  0FE6                     	;# 
   370  0FE7                     	;# 
   371  0FE8                     	;# 
   372  0FE9                     	;# 
   373  0FEA                     	;# 
   374  0FEB                     	;# 
   375  0FED                     	;# 
   376  0FEE                     	;# 
   377  0FEF                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  008E                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0095                     	;# 
   410  0096                     	;# 
   411  0097                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009A                     	;# 
   415  009B                     	;# 
   416  009B                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  0111                     	;# 
   425  0112                     	;# 
   426  0113                     	;# 
   427  0114                     	;# 
   428  0115                     	;# 
   429  0116                     	;# 
   430  0117                     	;# 
   431  0118                     	;# 
   432  0119                     	;# 
   433  011D                     	;# 
   434  018C                     	;# 
   435  018D                     	;# 
   436  018E                     	;# 
   437  0191                     	;# 
   438  0191                     	;# 
   439  0192                     	;# 
   440  0193                     	;# 
   441  0193                     	;# 
   442  0194                     	;# 
   443  0195                     	;# 
   444  0196                     	;# 
   445  0197                     	;# 
   446  0199                     	;# 
   447  019A                     	;# 
   448  019B                     	;# 
   449  019B                     	;# 
   450  019C                     	;# 
   451  019D                     	;# 
   452  019E                     	;# 
   453  019F                     	;# 
   454  020C                     	;# 
   455  020D                     	;# 
   456  0211                     	;# 
   457  0211                     	;# 
   458  0212                     	;# 
   459  0212                     	;# 
   460  0213                     	;# 
   461  0213                     	;# 
   462  0214                     	;# 
   463  0214                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0215                     	;# 
   467  0216                     	;# 
   468  0216                     	;# 
   469  0217                     	;# 
   470  0217                     	;# 
   471  0391                     	;# 
   472  0392                     	;# 
   473  0393                     	;# 
   474  0394                     	;# 
   475  0395                     	;# 
   476  0396                     	;# 
   477  039A                     	;# 
   478  039B                     	;# 
   479  0611                     	;# 
   480  0612                     	;# 
   481  0613                     	;# 
   482  0613                     	;# 
   483  0614                     	;# 
   484  0615                     	;# 
   485  0616                     	;# 
   486  0616                     	;# 
   487  0691                     	;# 
   488  0692                     	;# 
   489  0693                     	;# 
   490  0694                     	;# 
   491  0695                     	;# 
   492  0E8E                     	;# 
   493  0E8F                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E93                     	;# 
   498  0E94                     	;# 
   499  0E94                     	;# 
   500  0E95                     	;# 
   501  0E96                     	;# 
   502  0E97                     	;# 
   503  0E98                     	;# 
   504  0E99                     	;# 
   505  0E9A                     	;# 
   506  0E9B                     	;# 
   507  0E9C                     	;# 
   508  0E9D                     	;# 
   509  0E9E                     	;# 
   510  0E9F                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000D                     	;# 
   536  000E                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  008C                     	;# 
   549  008D                     	;# 
   550  008E                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0095                     	;# 
   554  0096                     	;# 
   555  0097                     	;# 
   556  0098                     	;# 
   557  0099                     	;# 
   558  009A                     	;# 
   559  009B                     	;# 
   560  009B                     	;# 
   561  009C                     	;# 
   562  009D                     	;# 
   563  009E                     	;# 
   564  009F                     	;# 
   565  010C                     	;# 
   566  010D                     	;# 
   567  010E                     	;# 
   568  0111                     	;# 
   569  0112                     	;# 
   570  0113                     	;# 
   571  0114                     	;# 
   572  0115                     	;# 
   573  0116                     	;# 
   574  0117                     	;# 
   575  0118                     	;# 
   576  0119                     	;# 
   577  011D                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0197                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019F                     	;# 
   598  020C                     	;# 
   599  020D                     	;# 
   600  0211                     	;# 
   601  0211                     	;# 
   602  0212                     	;# 
   603  0212                     	;# 
   604  0213                     	;# 
   605  0213                     	;# 
   606  0214                     	;# 
   607  0214                     	;# 
   608  0215                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0216                     	;# 
   612  0216                     	;# 
   613  0217                     	;# 
   614  0217                     	;# 
   615  0391                     	;# 
   616  0392                     	;# 
   617  0393                     	;# 
   618  0394                     	;# 
   619  0395                     	;# 
   620  0396                     	;# 
   621  039A                     	;# 
   622  039B                     	;# 
   623  0611                     	;# 
   624  0612                     	;# 
   625  0613                     	;# 
   626  0613                     	;# 
   627  0614                     	;# 
   628  0615                     	;# 
   629  0616                     	;# 
   630  0616                     	;# 
   631  0691                     	;# 
   632  0692                     	;# 
   633  0693                     	;# 
   634  0694                     	;# 
   635  0695                     	;# 
   636  0E8E                     	;# 
   637  0E8F                     	;# 
   638  0E90                     	;# 
   639  0E91                     	;# 
   640  0E92                     	;# 
   641  0E93                     	;# 
   642  0E94                     	;# 
   643  0E94                     	;# 
   644  0E95                     	;# 
   645  0E96                     	;# 
   646  0E97                     	;# 
   647  0E98                     	;# 
   648  0E99                     	;# 
   649  0E9A                     	;# 
   650  0E9B                     	;# 
   651  0E9C                     	;# 
   652  0E9D                     	;# 
   653  0E9E                     	;# 
   654  0E9F                     	;# 
   655  0FE4                     	;# 
   656  0FE5                     	;# 
   657  0FE6                     	;# 
   658  0FE7                     	;# 
   659  0FE8                     	;# 
   660  0FE9                     	;# 
   661  0FEA                     	;# 
   662  0FEB                     	;# 
   663  0FED                     	;# 
   664  0FEE                     	;# 
   665  0FEF                     	;# 
   666  0000                     	;# 
   667  0001                     	;# 
   668  0002                     	;# 
   669  0003                     	;# 
   670  0004                     	;# 
   671  0005                     	;# 
   672  0006                     	;# 
   673  0007                     	;# 
   674  0008                     	;# 
   675  0009                     	;# 
   676  000A                     	;# 
   677  000B                     	;# 
   678  000C                     	;# 
   679  000D                     	;# 
   680  000E                     	;# 
   681  0011                     	;# 
   682  0012                     	;# 
   683  0015                     	;# 
   684  0016                     	;# 
   685  0016                     	;# 
   686  0017                     	;# 
   687  0018                     	;# 
   688  0019                     	;# 
   689  001A                     	;# 
   690  001B                     	;# 
   691  001C                     	;# 
   692  008C                     	;# 
   693  008D                     	;# 
   694  008E                     	;# 
   695  0091                     	;# 
   696  0092                     	;# 
   697  0095                     	;# 
   698  0096                     	;# 
   699  0097                     	;# 
   700  0098                     	;# 
   701  0099                     	;# 
   702  009A                     	;# 
   703  009B                     	;# 
   704  009B                     	;# 
   705  009C                     	;# 
   706  009D                     	;# 
   707  009E                     	;# 
   708  009F                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  0111                     	;# 
   713  0112                     	;# 
   714  0113                     	;# 
   715  0114                     	;# 
   716  0115                     	;# 
   717  0116                     	;# 
   718  0117                     	;# 
   719  0118                     	;# 
   720  0119                     	;# 
   721  011D                     	;# 
   722  018C                     	;# 
   723  018D                     	;# 
   724  018E                     	;# 
   725  0191                     	;# 
   726  0191                     	;# 
   727  0192                     	;# 
   728  0193                     	;# 
   729  0193                     	;# 
   730  0194                     	;# 
   731  0195                     	;# 
   732  0196                     	;# 
   733  0197                     	;# 
   734  0199                     	;# 
   735  019A                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019C                     	;# 
   739  019D                     	;# 
   740  019E                     	;# 
   741  019F                     	;# 
   742  020C                     	;# 
   743  020D                     	;# 
   744  0211                     	;# 
   745  0211                     	;# 
   746  0212                     	;# 
   747  0212                     	;# 
   748  0213                     	;# 
   749  0213                     	;# 
   750  0214                     	;# 
   751  0214                     	;# 
   752  0215                     	;# 
   753  0215                     	;# 
   754  0215                     	;# 
   755  0216                     	;# 
   756  0216                     	;# 
   757  0217                     	;# 
   758  0217                     	;# 
   759  0391                     	;# 
   760  0392                     	;# 
   761  0393                     	;# 
   762  0394                     	;# 
   763  0395                     	;# 
   764  0396                     	;# 
   765  039A                     	;# 
   766  039B                     	;# 
   767  0611                     	;# 
   768  0612                     	;# 
   769  0613                     	;# 
   770  0613                     	;# 
   771  0614                     	;# 
   772  0615                     	;# 
   773  0616                     	;# 
   774  0616                     	;# 
   775  0691                     	;# 
   776  0692                     	;# 
   777  0693                     	;# 
   778  0694                     	;# 
   779  0695                     	;# 
   780  0E8E                     	;# 
   781  0E8F                     	;# 
   782  0E90                     	;# 
   783  0E91                     	;# 
   784  0E92                     	;# 
   785  0E93                     	;# 
   786  0E94                     	;# 
   787  0E94                     	;# 
   788  0E95                     	;# 
   789  0E96                     	;# 
   790  0E97                     	;# 
   791  0E98                     	;# 
   792  0E99                     	;# 
   793  0E9A                     	;# 
   794  0E9B                     	;# 
   795  0E9C                     	;# 
   796  0E9D                     	;# 
   797  0E9E                     	;# 
   798  0E9F                     	;# 
   799  0FE4                     	;# 
   800  0FE5                     	;# 
   801  0FE6                     	;# 
   802  0FE7                     	;# 
   803  0FE8                     	;# 
   804  0FE9                     	;# 
   805  0FEA                     	;# 
   806  0FEB                     	;# 
   807  0FED                     	;# 
   808  0FEE                     	;# 
   809  0FEF                     	;# 
   810  0000                     	;# 
   811  0001                     	;# 
   812  0002                     	;# 
   813  0003                     	;# 
   814  0004                     	;# 
   815  0005                     	;# 
   816  0006                     	;# 
   817  0007                     	;# 
   818  0008                     	;# 
   819  0009                     	;# 
   820  000A                     	;# 
   821  000B                     	;# 
   822  000C                     	;# 
   823  000D                     	;# 
   824  000E                     	;# 
   825  0011                     	;# 
   826  0012                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  001A                     	;# 
   834  001B                     	;# 
   835  001C                     	;# 
   836  008C                     	;# 
   837  008D                     	;# 
   838  008E                     	;# 
   839  0091                     	;# 
   840  0092                     	;# 
   841  0095                     	;# 
   842  0096                     	;# 
   843  0097                     	;# 
   844  0098                     	;# 
   845  0099                     	;# 
   846  009A                     	;# 
   847  009B                     	;# 
   848  009B                     	;# 
   849  009C                     	;# 
   850  009D                     	;# 
   851  009E                     	;# 
   852  009F                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  0111                     	;# 
   857  0112                     	;# 
   858  0113                     	;# 
   859  0114                     	;# 
   860  0115                     	;# 
   861  0116                     	;# 
   862  0117                     	;# 
   863  0118                     	;# 
   864  0119                     	;# 
   865  011D                     	;# 
   866  018C                     	;# 
   867  018D                     	;# 
   868  018E                     	;# 
   869  0191                     	;# 
   870  0191                     	;# 
   871  0192                     	;# 
   872  0193                     	;# 
   873  0193                     	;# 
   874  0194                     	;# 
   875  0195                     	;# 
   876  0196                     	;# 
   877  0197                     	;# 
   878  0199                     	;# 
   879  019A                     	;# 
   880  019B                     	;# 
   881  019B                     	;# 
   882  019C                     	;# 
   883  019D                     	;# 
   884  019E                     	;# 
   885  019F                     	;# 
   886  020C                     	;# 
   887  020D                     	;# 
   888  0211                     	;# 
   889  0211                     	;# 
   890  0212                     	;# 
   891  0212                     	;# 
   892  0213                     	;# 
   893  0213                     	;# 
   894  0214                     	;# 
   895  0214                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0216                     	;# 
   900  0216                     	;# 
   901  0217                     	;# 
   902  0217                     	;# 
   903  0391                     	;# 
   904  0392                     	;# 
   905  0393                     	;# 
   906  0394                     	;# 
   907  0395                     	;# 
   908  0396                     	;# 
   909  039A                     	;# 
   910  039B                     	;# 
   911  0611                     	;# 
   912  0612                     	;# 
   913  0613                     	;# 
   914  0613                     	;# 
   915  0614                     	;# 
   916  0615                     	;# 
   917  0616                     	;# 
   918  0616                     	;# 
   919  0691                     	;# 
   920  0692                     	;# 
   921  0693                     	;# 
   922  0694                     	;# 
   923  0695                     	;# 
   924  0E8E                     	;# 
   925  0E8F                     	;# 
   926  0E90                     	;# 
   927  0E91                     	;# 
   928  0E92                     	;# 
   929  0E93                     	;# 
   930  0E94                     	;# 
   931  0E94                     	;# 
   932  0E95                     	;# 
   933  0E96                     	;# 
   934  0E97                     	;# 
   935  0E98                     	;# 
   936  0E99                     	;# 
   937  0E9A                     	;# 
   938  0E9B                     	;# 
   939  0E9C                     	;# 
   940  0E9D                     	;# 
   941  0E9E                     	;# 
   942  0E9F                     	;# 
   943  0FE4                     	;# 
   944  0FE5                     	;# 
   945  0FE6                     	;# 
   946  0FE7                     	;# 
   947  0FE8                     	;# 
   948  0FE9                     	;# 
   949  0FEA                     	;# 
   950  0FEB                     	;# 
   951  0FED                     	;# 
   952  0FEE                     	;# 
   953  0FEF                     	;# 
   954  0000                     	;# 
   955  0001                     	;# 
   956  0002                     	;# 
   957  0003                     	;# 
   958  0004                     	;# 
   959  0005                     	;# 
   960  0006                     	;# 
   961  0007                     	;# 
   962  0008                     	;# 
   963  0009                     	;# 
   964  000A                     	;# 
   965  000B                     	;# 
   966  000C                     	;# 
   967  000D                     	;# 
   968  000E                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0015                     	;# 
   972  0016                     	;# 
   973  0016                     	;# 
   974  0017                     	;# 
   975  0018                     	;# 
   976  0019                     	;# 
   977  001A                     	;# 
   978  001B                     	;# 
   979  001C                     	;# 
   980  008C                     	;# 
   981  008D                     	;# 
   982  008E                     	;# 
   983  0091                     	;# 
   984  0092                     	;# 
   985  0095                     	;# 
   986  0096                     	;# 
   987  0097                     	;# 
   988  0098                     	;# 
   989  0099                     	;# 
   990  009A                     	;# 
   991  009B                     	;# 
   992  009B                     	;# 
   993  009C                     	;# 
   994  009D                     	;# 
   995  009E                     	;# 
   996  009F                     	;# 
   997  010C                     	;# 
   998  010D                     	;# 
   999  010E                     	;# 
  1000  0111                     	;# 
  1001  0112                     	;# 
  1002  0113                     	;# 
  1003  0114                     	;# 
  1004  0115                     	;# 
  1005  0116                     	;# 
  1006  0117                     	;# 
  1007  0118                     	;# 
  1008  0119                     	;# 
  1009  011D                     	;# 
  1010  018C                     	;# 
  1011  018D                     	;# 
  1012  018E                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0194                     	;# 
  1019  0195                     	;# 
  1020  0196                     	;# 
  1021  0197                     	;# 
  1022  0199                     	;# 
  1023  019A                     	;# 
  1024  019B                     	;# 
  1025  019B                     	;# 
  1026  019C                     	;# 
  1027  019D                     	;# 
  1028  019E                     	;# 
  1029  019F                     	;# 
  1030  020C                     	;# 
  1031  020D                     	;# 
  1032  0211                     	;# 
  1033  0211                     	;# 
  1034  0212                     	;# 
  1035  0212                     	;# 
  1036  0213                     	;# 
  1037  0213                     	;# 
  1038  0214                     	;# 
  1039  0214                     	;# 
  1040  0215                     	;# 
  1041  0215                     	;# 
  1042  0215                     	;# 
  1043  0216                     	;# 
  1044  0216                     	;# 
  1045  0217                     	;# 
  1046  0217                     	;# 
  1047  0391                     	;# 
  1048  0392                     	;# 
  1049  0393                     	;# 
  1050  0394                     	;# 
  1051  0395                     	;# 
  1052  0396                     	;# 
  1053  039A                     	;# 
  1054  039B                     	;# 
  1055  0611                     	;# 
  1056  0612                     	;# 
  1057  0613                     	;# 
  1058  0613                     	;# 
  1059  0614                     	;# 
  1060  0615                     	;# 
  1061  0616                     	;# 
  1062  0616                     	;# 
  1063  0691                     	;# 
  1064  0692                     	;# 
  1065  0693                     	;# 
  1066  0694                     	;# 
  1067  0695                     	;# 
  1068  0E8E                     	;# 
  1069  0E8F                     	;# 
  1070  0E90                     	;# 
  1071  0E91                     	;# 
  1072  0E92                     	;# 
  1073  0E93                     	;# 
  1074  0E94                     	;# 
  1075  0E94                     	;# 
  1076  0E95                     	;# 
  1077  0E96                     	;# 
  1078  0E97                     	;# 
  1079  0E98                     	;# 
  1080  0E99                     	;# 
  1081  0E9A                     	;# 
  1082  0E9B                     	;# 
  1083  0E9C                     	;# 
  1084  0E9D                     	;# 
  1085  0E9E                     	;# 
  1086  0E9F                     	;# 
  1087  0FE4                     	;# 
  1088  0FE5                     	;# 
  1089  0FE6                     	;# 
  1090  0FE7                     	;# 
  1091  0FE8                     	;# 
  1092  0FE9                     	;# 
  1093  0FEA                     	;# 
  1094  0FEB                     	;# 
  1095  0FED                     	;# 
  1096  0FEE                     	;# 
  1097  0FEF                     	;# 
  1098  0000                     	;# 
  1099  0001                     	;# 
  1100  0002                     	;# 
  1101  0003                     	;# 
  1102  0004                     	;# 
  1103  0005                     	;# 
  1104  0006                     	;# 
  1105  0007                     	;# 
  1106  0008                     	;# 
  1107  0009                     	;# 
  1108  000A                     	;# 
  1109  000B                     	;# 
  1110  000C                     	;# 
  1111  000D                     	;# 
  1112  000E                     	;# 
  1113  0011                     	;# 
  1114  0012                     	;# 
  1115  0015                     	;# 
  1116  0016                     	;# 
  1117  0016                     	;# 
  1118  0017                     	;# 
  1119  0018                     	;# 
  1120  0019                     	;# 
  1121  001A                     	;# 
  1122  001B                     	;# 
  1123  001C                     	;# 
  1124  008C                     	;# 
  1125  008D                     	;# 
  1126  008E                     	;# 
  1127  0091                     	;# 
  1128  0092                     	;# 
  1129  0095                     	;# 
  1130  0096                     	;# 
  1131  0097                     	;# 
  1132  0098                     	;# 
  1133  0099                     	;# 
  1134  009A                     	;# 
  1135  009B                     	;# 
  1136  009B                     	;# 
  1137  009C                     	;# 
  1138  009D                     	;# 
  1139  009E                     	;# 
  1140  009F                     	;# 
  1141  010C                     	;# 
  1142  010D                     	;# 
  1143  010E                     	;# 
  1144  0111                     	;# 
  1145  0112                     	;# 
  1146  0113                     	;# 
  1147  0114                     	;# 
  1148  0115                     	;# 
  1149  0116                     	;# 
  1150  0117                     	;# 
  1151  0118                     	;# 
  1152  0119                     	;# 
  1153  011D                     	;# 
  1154  018C                     	;# 
  1155  018D                     	;# 
  1156  018E                     	;# 
  1157  0191                     	;# 
  1158  0191                     	;# 
  1159  0192                     	;# 
  1160  0193                     	;# 
  1161  0193                     	;# 
  1162  0194                     	;# 
  1163  0195                     	;# 
  1164  0196                     	;# 
  1165  0197                     	;# 
  1166  0199                     	;# 
  1167  019A                     	;# 
  1168  019B                     	;# 
  1169  019B                     	;# 
  1170  019C                     	;# 
  1171  019D                     	;# 
  1172  019E                     	;# 
  1173  019F                     	;# 
  1174  020C                     	;# 
  1175  020D                     	;# 
  1176  0211                     	;# 
  1177  0211                     	;# 
  1178  0212                     	;# 
  1179  0212                     	;# 
  1180  0213                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0214                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0215                     	;# 
  1187  0216                     	;# 
  1188  0216                     	;# 
  1189  0217                     	;# 
  1190  0217                     	;# 
  1191  0391                     	;# 
  1192  0392                     	;# 
  1193  0393                     	;# 
  1194  0394                     	;# 
  1195  0395                     	;# 
  1196  0396                     	;# 
  1197  039A                     	;# 
  1198  039B                     	;# 
  1199  0611                     	;# 
  1200  0612                     	;# 
  1201  0613                     	;# 
  1202  0613                     	;# 
  1203  0614                     	;# 
  1204  0615                     	;# 
  1205  0616                     	;# 
  1206  0616                     	;# 
  1207  0691                     	;# 
  1208  0692                     	;# 
  1209  0693                     	;# 
  1210  0694                     	;# 
  1211  0695                     	;# 
  1212  0E8E                     	;# 
  1213  0E8F                     	;# 
  1214  0E90                     	;# 
  1215  0E91                     	;# 
  1216  0E92                     	;# 
  1217  0E93                     	;# 
  1218  0E94                     	;# 
  1219  0E94                     	;# 
  1220  0E95                     	;# 
  1221  0E96                     	;# 
  1222  0E97                     	;# 
  1223  0E98                     	;# 
  1224  0E99                     	;# 
  1225  0E9A                     	;# 
  1226  0E9B                     	;# 
  1227  0E9C                     	;# 
  1228  0E9D                     	;# 
  1229  0E9E                     	;# 
  1230  0E9F                     	;# 
  1231  0FE4                     	;# 
  1232  0FE5                     	;# 
  1233  0FE6                     	;# 
  1234  0FE7                     	;# 
  1235  0FE8                     	;# 
  1236  0FE9                     	;# 
  1237  0FEA                     	;# 
  1238  0FEB                     	;# 
  1239  0FED                     	;# 
  1240  0FEE                     	;# 
  1241  0FEF                     	;# 
  1242  0000                     	;# 
  1243  0001                     	;# 
  1244  0002                     	;# 
  1245  0003                     	;# 
  1246  0004                     	;# 
  1247  0005                     	;# 
  1248  0006                     	;# 
  1249  0007                     	;# 
  1250  0008                     	;# 
  1251  0009                     	;# 
  1252  000A                     	;# 
  1253  000B                     	;# 
  1254  000C                     	;# 
  1255  000D                     	;# 
  1256  000E                     	;# 
  1257  0011                     	;# 
  1258  0012                     	;# 
  1259  0015                     	;# 
  1260  0016                     	;# 
  1261  0016                     	;# 
  1262  0017                     	;# 
  1263  0018                     	;# 
  1264  0019                     	;# 
  1265  001A                     	;# 
  1266  001B                     	;# 
  1267  001C                     	;# 
  1268  008C                     	;# 
  1269  008D                     	;# 
  1270  008E                     	;# 
  1271  0091                     	;# 
  1272  0092                     	;# 
  1273  0095                     	;# 
  1274  0096                     	;# 
  1275  0097                     	;# 
  1276  0098                     	;# 
  1277  0099                     	;# 
  1278  009A                     	;# 
  1279  009B                     	;# 
  1280  009B                     	;# 
  1281  009C                     	;# 
  1282  009D                     	;# 
  1283  009E                     	;# 
  1284  009F                     	;# 
  1285  010C                     	;# 
  1286  010D                     	;# 
  1287  010E                     	;# 
  1288  0111                     	;# 
  1289  0112                     	;# 
  1290  0113                     	;# 
  1291  0114                     	;# 
  1292  0115                     	;# 
  1293  0116                     	;# 
  1294  0117                     	;# 
  1295  0118                     	;# 
  1296  0119                     	;# 
  1297  011D                     	;# 
  1298  018C                     	;# 
  1299  018D                     	;# 
  1300  018E                     	;# 
  1301  0191                     	;# 
  1302  0191                     	;# 
  1303  0192                     	;# 
  1304  0193                     	;# 
  1305  0193                     	;# 
  1306  0194                     	;# 
  1307  0195                     	;# 
  1308  0196                     	;# 
  1309  0197                     	;# 
  1310  0199                     	;# 
  1311  019A                     	;# 
  1312  019B                     	;# 
  1313  019B                     	;# 
  1314  019C                     	;# 
  1315  019D                     	;# 
  1316  019E                     	;# 
  1317  019F                     	;# 
  1318  020C                     	;# 
  1319  020D                     	;# 
  1320  0211                     	;# 
  1321  0211                     	;# 
  1322  0212                     	;# 
  1323  0212                     	;# 
  1324  0213                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0214                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0216                     	;# 
  1332  0216                     	;# 
  1333  0217                     	;# 
  1334  0217                     	;# 
  1335  0391                     	;# 
  1336  0392                     	;# 
  1337  0393                     	;# 
  1338  0394                     	;# 
  1339  0395                     	;# 
  1340  0396                     	;# 
  1341  039A                     	;# 
  1342  039B                     	;# 
  1343  0611                     	;# 
  1344  0612                     	;# 
  1345  0613                     	;# 
  1346  0613                     	;# 
  1347  0614                     	;# 
  1348  0615                     	;# 
  1349  0616                     	;# 
  1350  0616                     	;# 
  1351  0691                     	;# 
  1352  0692                     	;# 
  1353  0693                     	;# 
  1354  0694                     	;# 
  1355  0695                     	;# 
  1356  0E8E                     	;# 
  1357  0E8F                     	;# 
  1358  0E90                     	;# 
  1359  0E91                     	;# 
  1360  0E92                     	;# 
  1361  0E93                     	;# 
  1362  0E94                     	;# 
  1363  0E94                     	;# 
  1364  0E95                     	;# 
  1365  0E96                     	;# 
  1366  0E97                     	;# 
  1367  0E98                     	;# 
  1368  0E99                     	;# 
  1369  0E9A                     	;# 
  1370  0E9B                     	;# 
  1371  0E9C                     	;# 
  1372  0E9D                     	;# 
  1373  0E9E                     	;# 
  1374  0E9F                     	;# 
  1375  0FE4                     	;# 
  1376  0FE5                     	;# 
  1377  0FE6                     	;# 
  1378  0FE7                     	;# 
  1379  0FE8                     	;# 
  1380  0FE9                     	;# 
  1381  0FEA                     	;# 
  1382  0FEB                     	;# 
  1383  0FED                     	;# 
  1384  0FEE                     	;# 
  1385  0FEF                     	;# 
  1386  0000                     	;# 
  1387  0001                     	;# 
  1388  0002                     	;# 
  1389  0003                     	;# 
  1390  0004                     	;# 
  1391  0005                     	;# 
  1392  0006                     	;# 
  1393  0007                     	;# 
  1394  0008                     	;# 
  1395  0009                     	;# 
  1396  000A                     	;# 
  1397  000B                     	;# 
  1398  000C                     	;# 
  1399  000D                     	;# 
  1400  000E                     	;# 
  1401  0011                     	;# 
  1402  0012                     	;# 
  1403  0015                     	;# 
  1404  0016                     	;# 
  1405  0016                     	;# 
  1406  0017                     	;# 
  1407  0018                     	;# 
  1408  0019                     	;# 
  1409  001A                     	;# 
  1410  001B                     	;# 
  1411  001C                     	;# 
  1412  008C                     	;# 
  1413  008D                     	;# 
  1414  008E                     	;# 
  1415  0091                     	;# 
  1416  0092                     	;# 
  1417  0095                     	;# 
  1418  0096                     	;# 
  1419  0097                     	;# 
  1420  0098                     	;# 
  1421  0099                     	;# 
  1422  009A                     	;# 
  1423  009B                     	;# 
  1424  009B                     	;# 
  1425  009C                     	;# 
  1426  009D                     	;# 
  1427  009E                     	;# 
  1428  009F                     	;# 
  1429  010C                     	;# 
  1430  010D                     	;# 
  1431  010E                     	;# 
  1432  0111                     	;# 
  1433  0112                     	;# 
  1434  0113                     	;# 
  1435  0114                     	;# 
  1436  0115                     	;# 
  1437  0116                     	;# 
  1438  0117                     	;# 
  1439  0118                     	;# 
  1440  0119                     	;# 
  1441  011D                     	;# 
  1442  018C                     	;# 
  1443  018D                     	;# 
  1444  018E                     	;# 
  1445  0191                     	;# 
  1446  0191                     	;# 
  1447  0192                     	;# 
  1448  0193                     	;# 
  1449  0193                     	;# 
  1450  0194                     	;# 
  1451  0195                     	;# 
  1452  0196                     	;# 
  1453  0197                     	;# 
  1454  0199                     	;# 
  1455  019A                     	;# 
  1456  019B                     	;# 
  1457  019B                     	;# 
  1458  019C                     	;# 
  1459  019D                     	;# 
  1460  019E                     	;# 
  1461  019F                     	;# 
  1462  020C                     	;# 
  1463  020D                     	;# 
  1464  0211                     	;# 
  1465  0211                     	;# 
  1466  0212                     	;# 
  1467  0212                     	;# 
  1468  0213                     	;# 
  1469  0213                     	;# 
  1470  0214                     	;# 
  1471  0214                     	;# 
  1472  0215                     	;# 
  1473  0215                     	;# 
  1474  0215                     	;# 
  1475  0216                     	;# 
  1476  0216                     	;# 
  1477  0217                     	;# 
  1478  0217                     	;# 
  1479  0391                     	;# 
  1480  0392                     	;# 
  1481  0393                     	;# 
  1482  0394                     	;# 
  1483  0395                     	;# 
  1484  0396                     	;# 
  1485  039A                     	;# 
  1486  039B                     	;# 
  1487  0611                     	;# 
  1488  0612                     	;# 
  1489  0613                     	;# 
  1490  0613                     	;# 
  1491  0614                     	;# 
  1492  0615                     	;# 
  1493  0616                     	;# 
  1494  0616                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  0695                     	;# 
  1500  0E8E                     	;# 
  1501  0E8F                     	;# 
  1502  0E90                     	;# 
  1503  0E91                     	;# 
  1504  0E92                     	;# 
  1505  0E93                     	;# 
  1506  0E94                     	;# 
  1507  0E94                     	;# 
  1508  0E95                     	;# 
  1509  0E96                     	;# 
  1510  0E97                     	;# 
  1511  0E98                     	;# 
  1512  0E99                     	;# 
  1513  0E9A                     	;# 
  1514  0E9B                     	;# 
  1515  0E9C                     	;# 
  1516  0E9D                     	;# 
  1517  0E9E                     	;# 
  1518  0E9F                     	;# 
  1519  0FE4                     	;# 
  1520  0FE5                     	;# 
  1521  0FE6                     	;# 
  1522  0FE7                     	;# 
  1523  0FE8                     	;# 
  1524  0FE9                     	;# 
  1525  0FEA                     	;# 
  1526  0FEB                     	;# 
  1527  0FED                     	;# 
  1528  0FEE                     	;# 
  1529  0FEF                     	;# 
  1530  0000                     	;# 
  1531  0001                     	;# 
  1532  0002                     	;# 
  1533  0003                     	;# 
  1534  0004                     	;# 
  1535  0005                     	;# 
  1536  0006                     	;# 
  1537  0007                     	;# 
  1538  0008                     	;# 
  1539  0009                     	;# 
  1540  000A                     	;# 
  1541  000B                     	;# 
  1542  000C                     	;# 
  1543  000D                     	;# 
  1544  000E                     	;# 
  1545  0011                     	;# 
  1546  0012                     	;# 
  1547  0015                     	;# 
  1548  0016                     	;# 
  1549  0016                     	;# 
  1550  0017                     	;# 
  1551  0018                     	;# 
  1552  0019                     	;# 
  1553  001A                     	;# 
  1554  001B                     	;# 
  1555  001C                     	;# 
  1556  008C                     	;# 
  1557  008D                     	;# 
  1558  008E                     	;# 
  1559  0091                     	;# 
  1560  0092                     	;# 
  1561  0095                     	;# 
  1562  0096                     	;# 
  1563  0097                     	;# 
  1564  0098                     	;# 
  1565  0099                     	;# 
  1566  009A                     	;# 
  1567  009B                     	;# 
  1568  009B                     	;# 
  1569  009C                     	;# 
  1570  009D                     	;# 
  1571  009E                     	;# 
  1572  009F                     	;# 
  1573  010C                     	;# 
  1574  010D                     	;# 
  1575  010E                     	;# 
  1576  0111                     	;# 
  1577  0112                     	;# 
  1578  0113                     	;# 
  1579  0114                     	;# 
  1580  0115                     	;# 
  1581  0116                     	;# 
  1582  0117                     	;# 
  1583  0118                     	;# 
  1584  0119                     	;# 
  1585  011D                     	;# 
  1586  018C                     	;# 
  1587  018D                     	;# 
  1588  018E                     	;# 
  1589  0191                     	;# 
  1590  0191                     	;# 
  1591  0192                     	;# 
  1592  0193                     	;# 
  1593  0193                     	;# 
  1594  0194                     	;# 
  1595  0195                     	;# 
  1596  0196                     	;# 
  1597  0197                     	;# 
  1598  0199                     	;# 
  1599  019A                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019C                     	;# 
  1603  019D                     	;# 
  1604  019E                     	;# 
  1605  019F                     	;# 
  1606  020C                     	;# 
  1607  020D                     	;# 
  1608  0211                     	;# 
  1609  0211                     	;# 
  1610  0212                     	;# 
  1611  0212                     	;# 
  1612  0213                     	;# 
  1613  0213                     	;# 
  1614  0214                     	;# 
  1615  0214                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0216                     	;# 
  1620  0216                     	;# 
  1621  0217                     	;# 
  1622  0217                     	;# 
  1623  0391                     	;# 
  1624  0392                     	;# 
  1625  0393                     	;# 
  1626  0394                     	;# 
  1627  0395                     	;# 
  1628  0396                     	;# 
  1629  039A                     	;# 
  1630  039B                     	;# 
  1631  0611                     	;# 
  1632  0612                     	;# 
  1633  0613                     	;# 
  1634  0613                     	;# 
  1635  0614                     	;# 
  1636  0615                     	;# 
  1637  0616                     	;# 
  1638  0616                     	;# 
  1639  0691                     	;# 
  1640  0692                     	;# 
  1641  0693                     	;# 
  1642  0694                     	;# 
  1643  0695                     	;# 
  1644  0E8E                     	;# 
  1645  0E8F                     	;# 
  1646  0E90                     	;# 
  1647  0E91                     	;# 
  1648  0E92                     	;# 
  1649  0E93                     	;# 
  1650  0E94                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E96                     	;# 
  1654  0E97                     	;# 
  1655  0E98                     	;# 
  1656  0E99                     	;# 
  1657  0E9A                     	;# 
  1658  0E9B                     	;# 
  1659  0E9C                     	;# 
  1660  0E9D                     	;# 
  1661  0E9E                     	;# 
  1662  0E9F                     	;# 
  1663  0FE4                     	;# 
  1664  0FE5                     	;# 
  1665  0FE6                     	;# 
  1666  0FE7                     	;# 
  1667  0FE8                     	;# 
  1668  0FE9                     	;# 
  1669  0FEA                     	;# 
  1670  0FEB                     	;# 
  1671  0FED                     	;# 
  1672  0FEE                     	;# 
  1673  0FEF                     	;# 
  1674  0000                     	;# 
  1675  0001                     	;# 
  1676  0002                     	;# 
  1677  0003                     	;# 
  1678  0004                     	;# 
  1679  0005                     	;# 
  1680  0006                     	;# 
  1681  0007                     	;# 
  1682  0008                     	;# 
  1683  0009                     	;# 
  1684  000A                     	;# 
  1685  000B                     	;# 
  1686  000C                     	;# 
  1687  000D                     	;# 
  1688  000E                     	;# 
  1689  0011                     	;# 
  1690  0012                     	;# 
  1691  0015                     	;# 
  1692  0016                     	;# 
  1693  0016                     	;# 
  1694  0017                     	;# 
  1695  0018                     	;# 
  1696  0019                     	;# 
  1697  001A                     	;# 
  1698  001B                     	;# 
  1699  001C                     	;# 
  1700  008C                     	;# 
  1701  008D                     	;# 
  1702  008E                     	;# 
  1703  0091                     	;# 
  1704  0092                     	;# 
  1705  0095                     	;# 
  1706  0096                     	;# 
  1707  0097                     	;# 
  1708  0098                     	;# 
  1709  0099                     	;# 
  1710  009A                     	;# 
  1711  009B                     	;# 
  1712  009B                     	;# 
  1713  009C                     	;# 
  1714  009D                     	;# 
  1715  009E                     	;# 
  1716  009F                     	;# 
  1717  010C                     	;# 
  1718  010D                     	;# 
  1719  010E                     	;# 
  1720  0111                     	;# 
  1721  0112                     	;# 
  1722  0113                     	;# 
  1723  0114                     	;# 
  1724  0115                     	;# 
  1725  0116                     	;# 
  1726  0117                     	;# 
  1727  0118                     	;# 
  1728  0119                     	;# 
  1729  011D                     	;# 
  1730  018C                     	;# 
  1731  018D                     	;# 
  1732  018E                     	;# 
  1733  0191                     	;# 
  1734  0191                     	;# 
  1735  0192                     	;# 
  1736  0193                     	;# 
  1737  0193                     	;# 
  1738  0194                     	;# 
  1739  0195                     	;# 
  1740  0196                     	;# 
  1741  0197                     	;# 
  1742  0199                     	;# 
  1743  019A                     	;# 
  1744  019B                     	;# 
  1745  019B                     	;# 
  1746  019C                     	;# 
  1747  019D                     	;# 
  1748  019E                     	;# 
  1749  019F                     	;# 
  1750  020C                     	;# 
  1751  020D                     	;# 
  1752  0211                     	;# 
  1753  0211                     	;# 
  1754  0212                     	;# 
  1755  0212                     	;# 
  1756  0213                     	;# 
  1757  0213                     	;# 
  1758  0214                     	;# 
  1759  0214                     	;# 
  1760  0215                     	;# 
  1761  0215                     	;# 
  1762  0215                     	;# 
  1763  0216                     	;# 
  1764  0216                     	;# 
  1765  0217                     	;# 
  1766  0217                     	;# 
  1767  0391                     	;# 
  1768  0392                     	;# 
  1769  0393                     	;# 
  1770  0394                     	;# 
  1771  0395                     	;# 
  1772  0396                     	;# 
  1773  039A                     	;# 
  1774  039B                     	;# 
  1775  0611                     	;# 
  1776  0612                     	;# 
  1777  0613                     	;# 
  1778  0613                     	;# 
  1779  0614                     	;# 
  1780  0615                     	;# 
  1781  0616                     	;# 
  1782  0616                     	;# 
  1783  0691                     	;# 
  1784  0692                     	;# 
  1785  0693                     	;# 
  1786  0694                     	;# 
  1787  0695                     	;# 
  1788  0E8E                     	;# 
  1789  0E8F                     	;# 
  1790  0E90                     	;# 
  1791  0E91                     	;# 
  1792  0E92                     	;# 
  1793  0E93                     	;# 
  1794  0E94                     	;# 
  1795  0E94                     	;# 
  1796  0E95                     	;# 
  1797  0E96                     	;# 
  1798  0E97                     	;# 
  1799  0E98                     	;# 
  1800  0E99                     	;# 
  1801  0E9A                     	;# 
  1802  0E9B                     	;# 
  1803  0E9C                     	;# 
  1804  0E9D                     	;# 
  1805  0E9E                     	;# 
  1806  0E9F                     	;# 
  1807  0FE4                     	;# 
  1808  0FE5                     	;# 
  1809  0FE6                     	;# 
  1810  0FE7                     	;# 
  1811  0FE8                     	;# 
  1812  0FE9                     	;# 
  1813  0FEA                     	;# 
  1814  0FEB                     	;# 
  1815  0FED                     	;# 
  1816  0FEE                     	;# 
  1817  0FEF                     	;# 
  1818  0000                     	;# 
  1819  0001                     	;# 
  1820  0002                     	;# 
  1821  0003                     	;# 
  1822  0004                     	;# 
  1823  0005                     	;# 
  1824  0006                     	;# 
  1825  0007                     	;# 
  1826  0008                     	;# 
  1827  0009                     	;# 
  1828  000A                     	;# 
  1829  000B                     	;# 
  1830  000C                     	;# 
  1831  000D                     	;# 
  1832  000E                     	;# 
  1833  0011                     	;# 
  1834  0012                     	;# 
  1835  0015                     	;# 
  1836  0016                     	;# 
  1837  0016                     	;# 
  1838  0017                     	;# 
  1839  0018                     	;# 
  1840  0019                     	;# 
  1841  001A                     	;# 
  1842  001B                     	;# 
  1843  001C                     	;# 
  1844  008C                     	;# 
  1845  008D                     	;# 
  1846  008E                     	;# 
  1847  0091                     	;# 
  1848  0092                     	;# 
  1849  0095                     	;# 
  1850  0096                     	;# 
  1851  0097                     	;# 
  1852  0098                     	;# 
  1853  0099                     	;# 
  1854  009A                     	;# 
  1855  009B                     	;# 
  1856  009B                     	;# 
  1857  009C                     	;# 
  1858  009D                     	;# 
  1859  009E                     	;# 
  1860  009F                     	;# 
  1861  010C                     	;# 
  1862  010D                     	;# 
  1863  010E                     	;# 
  1864  0111                     	;# 
  1865  0112                     	;# 
  1866  0113                     	;# 
  1867  0114                     	;# 
  1868  0115                     	;# 
  1869  0116                     	;# 
  1870  0117                     	;# 
  1871  0118                     	;# 
  1872  0119                     	;# 
  1873  011D                     	;# 
  1874  018C                     	;# 
  1875  018D                     	;# 
  1876  018E                     	;# 
  1877  0191                     	;# 
  1878  0191                     	;# 
  1879  0192                     	;# 
  1880  0193                     	;# 
  1881  0193                     	;# 
  1882  0194                     	;# 
  1883  0195                     	;# 
  1884  0196                     	;# 
  1885  0197                     	;# 
  1886  0199                     	;# 
  1887  019A                     	;# 
  1888  019B                     	;# 
  1889  019B                     	;# 
  1890  019C                     	;# 
  1891  019D                     	;# 
  1892  019E                     	;# 
  1893  019F                     	;# 
  1894  020C                     	;# 
  1895  020D                     	;# 
  1896  0211                     	;# 
  1897  0211                     	;# 
  1898  0212                     	;# 
  1899  0212                     	;# 
  1900  0213                     	;# 
  1901  0213                     	;# 
  1902  0214                     	;# 
  1903  0214                     	;# 
  1904  0215                     	;# 
  1905  0215                     	;# 
  1906  0215                     	;# 
  1907  0216                     	;# 
  1908  0216                     	;# 
  1909  0217                     	;# 
  1910  0217                     	;# 
  1911  0391                     	;# 
  1912  0392                     	;# 
  1913  0393                     	;# 
  1914  0394                     	;# 
  1915  0395                     	;# 
  1916  0396                     	;# 
  1917  039A                     	;# 
  1918  039B                     	;# 
  1919  0611                     	;# 
  1920  0612                     	;# 
  1921  0613                     	;# 
  1922  0613                     	;# 
  1923  0614                     	;# 
  1924  0615                     	;# 
  1925  0616                     	;# 
  1926  0616                     	;# 
  1927  0691                     	;# 
  1928  0692                     	;# 
  1929  0693                     	;# 
  1930  0694                     	;# 
  1931  0695                     	;# 
  1932  0E8E                     	;# 
  1933  0E8F                     	;# 
  1934  0E90                     	;# 
  1935  0E91                     	;# 
  1936  0E92                     	;# 
  1937  0E93                     	;# 
  1938  0E94                     	;# 
  1939  0E94                     	;# 
  1940  0E95                     	;# 
  1941  0E96                     	;# 
  1942  0E97                     	;# 
  1943  0E98                     	;# 
  1944  0E99                     	;# 
  1945  0E9A                     	;# 
  1946  0E9B                     	;# 
  1947  0E9C                     	;# 
  1948  0E9D                     	;# 
  1949  0E9E                     	;# 
  1950  0E9F                     	;# 
  1951  0FE4                     	;# 
  1952  0FE5                     	;# 
  1953  0FE6                     	;# 
  1954  0FE7                     	;# 
  1955  0FE8                     	;# 
  1956  0FE9                     	;# 
  1957  0FEA                     	;# 
  1958  0FEB                     	;# 
  1959  0FED                     	;# 
  1960  0FEE                     	;# 
  1961  0FEF                     	;# 
  1962                           
  1963                           	psect	idataBANK3
  1964  0000                     __pidataBANK3:	
  1965                           
  1966                           	psect	stringtext1
  1967  1000                     __pstringtext1:	
  1968  1000                     _gamma8:	
  1969  1000  3400               	retlw	0
  1970  1001  3400               	retlw	0
  1971  1002  3400               	retlw	0
  1972  1003  3400               	retlw	0
  1973  1004  3400               	retlw	0
  1974  1005  3400               	retlw	0
  1975  1006  3400               	retlw	0
  1976  1007  3400               	retlw	0
  1977  1008  3400               	retlw	0
  1978  1009  3400               	retlw	0
  1979  100A  3400               	retlw	0
  1980  100B  3400               	retlw	0
  1981  100C  3400               	retlw	0
  1982  100D  3400               	retlw	0
  1983  100E  3400               	retlw	0
  1984  100F  3400               	retlw	0
  1985  1010  3400               	retlw	0
  1986  1011  3400               	retlw	0
  1987  1012  3400               	retlw	0
  1988  1013  3400               	retlw	0
  1989  1014  3400               	retlw	0
  1990  1015  3400               	retlw	0
  1991  1016  3400               	retlw	0
  1992  1017  3400               	retlw	0
  1993  1018  3400               	retlw	0
  1994  1019  3400               	retlw	0
  1995  101A  3400               	retlw	0
  1996  101B  3400               	retlw	0
  1997  101C  3401               	retlw	1
  1998  101D  3401               	retlw	1
  1999  101E  3401               	retlw	1
  2000  101F  3401               	retlw	1
  2001  1020  3401               	retlw	1
  2002  1021  3401               	retlw	1
  2003  1022  3401               	retlw	1
  2004  1023  3401               	retlw	1
  2005  1024  3401               	retlw	1
  2006  1025  3401               	retlw	1
  2007  1026  3401               	retlw	1
  2008  1027  3401               	retlw	1
  2009  1028  3401               	retlw	1
  2010  1029  3402               	retlw	2
  2011  102A  3402               	retlw	2
  2012  102B  3402               	retlw	2
  2013  102C  3402               	retlw	2
  2014  102D  3402               	retlw	2
  2015  102E  3402               	retlw	2
  2016  102F  3402               	retlw	2
  2017  1030  3402               	retlw	2
  2018  1031  3403               	retlw	3
  2019  1032  3403               	retlw	3
  2020  1033  3403               	retlw	3
  2021  1034  3403               	retlw	3
  2022  1035  3403               	retlw	3
  2023  1036  3403               	retlw	3
  2024  1037  3403               	retlw	3
  2025  1038  3404               	retlw	4
  2026  1039  3404               	retlw	4
  2027  103A  3404               	retlw	4
  2028  103B  3404               	retlw	4
  2029  103C  3404               	retlw	4
  2030  103D  3405               	retlw	5
  2031  103E  3405               	retlw	5
  2032  103F  3405               	retlw	5
  2033  1040  3405               	retlw	5
  2034  1041  3406               	retlw	6
  2035  1042  3406               	retlw	6
  2036  1043  3406               	retlw	6
  2037  1044  3406               	retlw	6
  2038  1045  3407               	retlw	7
  2039  1046  3407               	retlw	7
  2040  1047  3407               	retlw	7
  2041  1048  3407               	retlw	7
  2042  1049  3408               	retlw	8
  2043  104A  3408               	retlw	8
  2044  104B  3408               	retlw	8
  2045  104C  3409               	retlw	9
  2046  104D  3409               	retlw	9
  2047  104E  3409               	retlw	9
  2048  104F  340A               	retlw	10
  2049  1050  340A               	retlw	10
  2050  1051  340A               	retlw	10
  2051  1052  340B               	retlw	11
  2052  1053  340B               	retlw	11
  2053  1054  340B               	retlw	11
  2054  1055  340C               	retlw	12
  2055  1056  340C               	retlw	12
  2056  1057  340D               	retlw	13
  2057  1058  340D               	retlw	13
  2058  1059  340D               	retlw	13
  2059  105A  340E               	retlw	14
  2060  105B  340E               	retlw	14
  2061  105C  340F               	retlw	15
  2062  105D  340F               	retlw	15
  2063  105E  3410               	retlw	16
  2064  105F  3410               	retlw	16
  2065  1060  3411               	retlw	17
  2066  1061  3411               	retlw	17
  2067  1062  3412               	retlw	18
  2068  1063  3412               	retlw	18
  2069  1064  3413               	retlw	19
  2070  1065  3413               	retlw	19
  2071  1066  3414               	retlw	20
  2072  1067  3414               	retlw	20
  2073  1068  3415               	retlw	21
  2074  1069  3415               	retlw	21
  2075  106A  3416               	retlw	22
  2076  106B  3416               	retlw	22
  2077  106C  3417               	retlw	23
  2078  106D  3418               	retlw	24
  2079  106E  3418               	retlw	24
  2080  106F  3419               	retlw	25
  2081  1070  3419               	retlw	25
  2082  1071  341A               	retlw	26
  2083  1072  341B               	retlw	27
  2084  1073  341B               	retlw	27
  2085  1074  341C               	retlw	28
  2086  1075  341D               	retlw	29
  2087  1076  341D               	retlw	29
  2088  1077  341E               	retlw	30
  2089  1078  341F               	retlw	31
  2090  1079  3420               	retlw	32
  2091  107A  3420               	retlw	32
  2092  107B  3421               	retlw	33
  2093  107C  3422               	retlw	34
  2094  107D  3423               	retlw	35
  2095  107E  3423               	retlw	35
  2096  107F  3424               	retlw	36
  2097  1080  3425               	retlw	37
  2098  1081  3426               	retlw	38
  2099  1082  3427               	retlw	39
  2100  1083  3427               	retlw	39
  2101  1084  3428               	retlw	40
  2102  1085  3429               	retlw	41
  2103  1086  342A               	retlw	42
  2104  1087  342B               	retlw	43
  2105  1088  342C               	retlw	44
  2106  1089  342D               	retlw	45
  2107  108A  342E               	retlw	46
  2108  108B  342F               	retlw	47
  2109  108C  3430               	retlw	48
  2110  108D  3431               	retlw	49
  2111  108E  3432               	retlw	50
  2112  108F  3432               	retlw	50
  2113  1090  3433               	retlw	51
  2114  1091  3434               	retlw	52
  2115  1092  3436               	retlw	54
  2116  1093  3437               	retlw	55
  2117  1094  3438               	retlw	56
  2118  1095  3439               	retlw	57
  2119  1096  343A               	retlw	58
  2120  1097  343B               	retlw	59
  2121  1098  343C               	retlw	60
  2122  1099  343D               	retlw	61
  2123  109A  343E               	retlw	62
  2124  109B  343F               	retlw	63
  2125  109C  3440               	retlw	64
  2126  109D  3442               	retlw	66
  2127  109E  3443               	retlw	67
  2128  109F  3444               	retlw	68
  2129  10A0  3445               	retlw	69
  2130  10A1  3446               	retlw	70
  2131  10A2  3448               	retlw	72
  2132  10A3  3449               	retlw	73
  2133  10A4  344A               	retlw	74
  2134  10A5  344B               	retlw	75
  2135  10A6  344D               	retlw	77
  2136  10A7  344E               	retlw	78
  2137  10A8  344F               	retlw	79
  2138  10A9  3451               	retlw	81
  2139  10AA  3452               	retlw	82
  2140  10AB  3453               	retlw	83
  2141  10AC  3455               	retlw	85
  2142  10AD  3456               	retlw	86
  2143  10AE  3457               	retlw	87
  2144  10AF  3459               	retlw	89
  2145  10B0  345A               	retlw	90
  2146  10B1  345C               	retlw	92
  2147  10B2  345D               	retlw	93
  2148  10B3  345F               	retlw	95
  2149  10B4  3460               	retlw	96
  2150  10B5  3462               	retlw	98
  2151  10B6  3463               	retlw	99
  2152  10B7  3465               	retlw	101
  2153  10B8  3466               	retlw	102
  2154  10B9  3468               	retlw	104
  2155  10BA  3469               	retlw	105
  2156  10BB  346B               	retlw	107
  2157  10BC  346D               	retlw	109
  2158  10BD  346E               	retlw	110
  2159  10BE  3470               	retlw	112
  2160  10BF  3472               	retlw	114
  2161  10C0  3473               	retlw	115
  2162  10C1  3475               	retlw	117
  2163  10C2  3477               	retlw	119
  2164  10C3  3478               	retlw	120
  2165  10C4  347A               	retlw	122
  2166  10C5  347C               	retlw	124
  2167  10C6  347E               	retlw	126
  2168  10C7  347F               	retlw	127
  2169  10C8  3481               	retlw	129
  2170  10C9  3483               	retlw	131
  2171  10CA  3485               	retlw	133
  2172  10CB  3487               	retlw	135
  2173  10CC  3489               	retlw	137
  2174  10CD  348A               	retlw	138
  2175  10CE  348C               	retlw	140
  2176  10CF  348E               	retlw	142
  2177  10D0  3490               	retlw	144
  2178  10D1  3492               	retlw	146
  2179  10D2  3494               	retlw	148
  2180  10D3  3496               	retlw	150
  2181  10D4  3498               	retlw	152
  2182  10D5  349A               	retlw	154
  2183  10D6  349C               	retlw	156
  2184  10D7  349E               	retlw	158
  2185  10D8  34A0               	retlw	160
  2186  10D9  34A2               	retlw	162
  2187  10DA  34A4               	retlw	164
  2188  10DB  34A7               	retlw	167
  2189  10DC  34A9               	retlw	169
  2190  10DD  34AB               	retlw	171
  2191  10DE  34AD               	retlw	173
  2192  10DF  34AF               	retlw	175
  2193  10E0  34B1               	retlw	177
  2194  10E1  34B4               	retlw	180
  2195  10E2  34B6               	retlw	182
  2196  10E3  34B8               	retlw	184
  2197  10E4  34BA               	retlw	186
  2198  10E5  34BD               	retlw	189
  2199  10E6  34BF               	retlw	191
  2200  10E7  34C1               	retlw	193
  2201  10E8  34C4               	retlw	196
  2202  10E9  34C6               	retlw	198
  2203  10EA  34C8               	retlw	200
  2204  10EB  34CB               	retlw	203
  2205  10EC  34CD               	retlw	205
  2206  10ED  34D0               	retlw	208
  2207  10EE  34D2               	retlw	210
  2208  10EF  34D5               	retlw	213
  2209  10F0  34D7               	retlw	215
  2210  10F1  34DA               	retlw	218
  2211  10F2  34DC               	retlw	220
  2212  10F3  34DF               	retlw	223
  2213  10F4  34E1               	retlw	225
  2214  10F5  34E4               	retlw	228
  2215  10F6  34E7               	retlw	231
  2216  10F7  34E9               	retlw	233
  2217  10F8  34EC               	retlw	236
  2218  10F9  34EF               	retlw	239
  2219  10FA  34F1               	retlw	241
  2220  10FB  34F4               	retlw	244
  2221  10FC  34F7               	retlw	247
  2222  10FD  34F9               	retlw	249
  2223  10FE  34FC               	retlw	252
  2224  10FF  34FF               	retlw	255
  2225  1100                     __end_of_gamma8:	
  2226                           
  2227                           	psect	stringtext2
  2228  18D3                     __pstringtext2:	
  2229  18D3                     _tohex:	
  2230  18D3  3430               	retlw	48
  2231  18D4  3431               	retlw	49
  2232  18D5  3432               	retlw	50
  2233  18D6  3433               	retlw	51
  2234  18D7  3434               	retlw	52
  2235  18D8  3435               	retlw	53
  2236  18D9  3436               	retlw	54
  2237  18DA  3437               	retlw	55
  2238  18DB  3438               	retlw	56
  2239  18DC  3439               	retlw	57
  2240  18DD  3461               	retlw	97
  2241  18DE  3462               	retlw	98
  2242  18DF  3463               	retlw	99
  2243  18E0  3464               	retlw	100
  2244  18E1  3465               	retlw	101
  2245  18E2  3466               	retlw	102
  2246  18E3  3400               	retlw	0
  2247  18E4                     __end_of_tohex:	
  2248                           
  2249                           	psect	stringtext3
  2250  18E4                     __pstringtext3:	
  2251  18E4                     _USB_SD_Ptr:	
  2252  18E4  34F0               	retlw	low (_sd000| (0+32768))
  2253  18E5  3498               	retlw	high (_sd000| (0+32768))
  2254  18E6  3477               	retlw	low (_sd001| (0+32768))
  2255  18E7  3498               	retlw	high (_sd001| (0+32768))
  2256  18E8  3443               	retlw	low (_sd002| (0+32768))
  2257  18E9  3498               	retlw	high (_sd002| (0+32768))
  2258  18EA                     __end_of_USB_SD_Ptr:	
  2259                           
  2260                           	psect	stringtext4
  2261  18F4                     __pstringtext4:	
  2262  18F4                     _USB_CD_Ptr:	
  2263  18F4  3400               	retlw	low (_configDescriptor1| (0+32768))
  2264  18F5  3498               	retlw	high (_configDescriptor1| (0+32768))
  2265  18F6                     __end_of_USB_CD_Ptr:	
  2266                           
  2267                           	psect	stringtext5
  2268  1800                     __pstringtext5:	
  2269  1800                     _configDescriptor1:	
  2270  1800  3409               	retlw	9
  2271  1801  3402               	retlw	2
  2272  1802  3443               	retlw	67
  2273  1803  3400               	retlw	0
  2274  1804  3402               	retlw	2
  2275  1805  3401               	retlw	1
  2276  1806  3400               	retlw	0
  2277  1807  34C0               	retlw	192
  2278  1808  3432               	retlw	50
  2279  1809  3409               	retlw	9
  2280  180A  3404               	retlw	4
  2281  180B  3400               	retlw	0
  2282  180C  3400               	retlw	0
  2283  180D  3401               	retlw	1
  2284  180E  3402               	retlw	2
  2285  180F  3402               	retlw	2
  2286  1810  3401               	retlw	1
  2287  1811  3400               	retlw	0
  2288  1812  3405               	retlw	5
  2289  1813  3424               	retlw	36
  2290  1814  3400               	retlw	0
  2291  1815  3410               	retlw	16
  2292  1816  3401               	retlw	1
  2293  1817  3404               	retlw	4
  2294  1818  3424               	retlw	36
  2295  1819  3402               	retlw	2
  2296  181A  3402               	retlw	2
  2297  181B  3405               	retlw	5
  2298  181C  3424               	retlw	36
  2299  181D  3406               	retlw	6
  2300  181E  3400               	retlw	0
  2301  181F  3401               	retlw	1
  2302  1820  3405               	retlw	5
  2303  1821  3424               	retlw	36
  2304  1822  3401               	retlw	1
  2305  1823  3400               	retlw	0
  2306  1824  3401               	retlw	1
  2307  1825  3407               	retlw	7
  2308  1826  3405               	retlw	5
  2309  1827  3481               	retlw	129
  2310  1828  3403               	retlw	3
  2311  1829  3408               	retlw	8
  2312  182A  3400               	retlw	0
  2313  182B  3402               	retlw	2
  2314  182C  3409               	retlw	9
  2315  182D  3404               	retlw	4
  2316  182E  3401               	retlw	1
  2317  182F  3400               	retlw	0
  2318  1830  3402               	retlw	2
  2319  1831  340A               	retlw	10
  2320  1832  3400               	retlw	0
  2321  1833  3400               	retlw	0
  2322  1834  3400               	retlw	0
  2323  1835  3407               	retlw	7
  2324  1836  3405               	retlw	5
  2325  1837  3402               	retlw	2
  2326  1838  3402               	retlw	2
  2327  1839  3440               	retlw	64
  2328  183A  3400               	retlw	0
  2329  183B  3400               	retlw	0
  2330  183C  3407               	retlw	7
  2331  183D  3405               	retlw	5
  2332  183E  3482               	retlw	130
  2333  183F  3402               	retlw	2
  2334  1840  3440               	retlw	64
  2335  1841  3400               	retlw	0
  2336  1842  3400               	retlw	0
  2337  1843                     __end_of_configDescriptor1:	
  2338                           
  2339                           	psect	stringtext6
  2340  1843                     __pstringtext6:	
  2341  1843                     _sd002:	
  2342  1843  3434               	retlw	52
  2343  1844  3403               	retlw	3
  2344  1845  3443               	retlw	67
  2345  1846  3400               	retlw	0
  2346  1847  3444               	retlw	68
  2347  1848  3400               	retlw	0
  2348  1849  3443               	retlw	67
  2349  184A  3400               	retlw	0
  2350  184B  3420               	retlw	32
  2351  184C  3400               	retlw	0
  2352  184D  3452               	retlw	82
  2353  184E  3400               	retlw	0
  2354  184F  3453               	retlw	83
  2355  1850  3400               	retlw	0
  2356  1851  342D               	retlw	45
  2357  1852  3400               	retlw	0
  2358  1853  3432               	retlw	50
  2359  1854  3400               	retlw	0
  2360  1855  3433               	retlw	51
  2361  1856  3400               	retlw	0
  2362  1857  3432               	retlw	50
  2363  1858  3400               	retlw	0
  2364  1859  3420               	retlw	32
  2365  185A  3400               	retlw	0
  2366  185B  3445               	retlw	69
  2367  185C  3400               	retlw	0
  2368  185D  346D               	retlw	109
  2369  185E  3400               	retlw	0
  2370  185F  3475               	retlw	117
  2371  1860  3400               	retlw	0
  2372  1861  346C               	retlw	108
  2373  1862  3400               	retlw	0
  2374  1863  3461               	retlw	97
  2375  1864  3400               	retlw	0
  2376  1865  3474               	retlw	116
  2377  1866  3400               	retlw	0
  2378  1867  3469               	retlw	105
  2379  1868  3400               	retlw	0
  2380  1869  346F               	retlw	111
  2381  186A  3400               	retlw	0
  2382  186B  346E               	retlw	110
  2383  186C  3400               	retlw	0
  2384  186D  3420               	retlw	32
  2385  186E  3400               	retlw	0
  2386  186F  3444               	retlw	68
  2387  1870  3400               	retlw	0
  2388  1871  3465               	retlw	101
  2389  1872  3400               	retlw	0
  2390  1873  346D               	retlw	109
  2391  1874  3400               	retlw	0
  2392  1875  346F               	retlw	111
  2393  1876  3400               	retlw	0
  2394  1877                     __end_of_sd002:	
  2395                           
  2396                           	psect	stringtext7
  2397  1877                     __pstringtext7:	
  2398  1877                     _sd001:	
  2399  1877  3434               	retlw	52
  2400  1878  3403               	retlw	3
  2401  1879  344D               	retlw	77
  2402  187A  3400               	retlw	0
  2403  187B  3469               	retlw	105
  2404  187C  3400               	retlw	0
  2405  187D  3463               	retlw	99
  2406  187E  3400               	retlw	0
  2407  187F  3472               	retlw	114
  2408  1880  3400               	retlw	0
  2409  1881  346F               	retlw	111
  2410  1882  3400               	retlw	0
  2411  1883  3463               	retlw	99
  2412  1884  3400               	retlw	0
  2413  1885  3468               	retlw	104
  2414  1886  3400               	retlw	0
  2415  1887  3469               	retlw	105
  2416  1888  3400               	retlw	0
  2417  1889  3470               	retlw	112
  2418  188A  3400               	retlw	0
  2419  188B  3420               	retlw	32
  2420  188C  3400               	retlw	0
  2421  188D  3454               	retlw	84
  2422  188E  3400               	retlw	0
  2423  188F  3465               	retlw	101
  2424  1890  3400               	retlw	0
  2425  1891  3463               	retlw	99
  2426  1892  3400               	retlw	0
  2427  1893  3468               	retlw	104
  2428  1894  3400               	retlw	0
  2429  1895  346E               	retlw	110
  2430  1896  3400               	retlw	0
  2431  1897  346F               	retlw	111
  2432  1898  3400               	retlw	0
  2433  1899  346C               	retlw	108
  2434  189A  3400               	retlw	0
  2435  189B  346F               	retlw	111
  2436  189C  3400               	retlw	0
  2437  189D  3467               	retlw	103
  2438  189E  3400               	retlw	0
  2439  189F  3479               	retlw	121
  2440  18A0  3400               	retlw	0
  2441  18A1  3420               	retlw	32
  2442  18A2  3400               	retlw	0
  2443  18A3  3449               	retlw	73
  2444  18A4  3400               	retlw	0
  2445  18A5  346E               	retlw	110
  2446  18A6  3400               	retlw	0
  2447  18A7  3463               	retlw	99
  2448  18A8  3400               	retlw	0
  2449  18A9  342E               	retlw	46
  2450  18AA  3400               	retlw	0
  2451  18AB                     __end_of_sd001:	
  2452                           
  2453                           	psect	stringtext8
  2454  18AB                     __pstringtext8:	
  2455  18AB                     _helloWorld:	
  2456  18AB  340A               	retlw	10
  2457  18AC  340D               	retlw	13
  2458  18AD  340A               	retlw	10
  2459  18AE  340D               	retlw	13
  2460  18AF  3448               	retlw	72
  2461  18B0  3465               	retlw	101
  2462  18B1  346C               	retlw	108
  2463  18B2  346C               	retlw	108
  2464  18B3  346F               	retlw	111
  2465  18B4  342C               	retlw	44
  2466  18B5  3420               	retlw	32
  2467  18B6  3477               	retlw	119
  2468  18B7  346F               	retlw	111
  2469  18B8  3472               	retlw	114
  2470  18B9  346C               	retlw	108
  2471  18BA  3464               	retlw	100
  2472  18BB  3421               	retlw	33
  2473  18BC  340A               	retlw	10
  2474  18BD  340D               	retlw	13
  2475  18BE  340A               	retlw	10
  2476  18BF  340D               	retlw	13
  2477  18C0  3400               	retlw	0
  2478  18C1                     __end_of_helloWorld:	
  2479                           
  2480                           	psect	stringtext9
  2481  18C1                     __pstringtext9:	
  2482  18C1                     _device_dsc:	
  2483  18C1  3412               	retlw	18
  2484  18C2  3401               	retlw	1
  2485  18C3  3400               	retlw	0
  2486  18C4  3402               	retlw	2
  2487  18C5  3402               	retlw	2
  2488  18C6  3400               	retlw	0
  2489  18C7  3400               	retlw	0
  2490  18C8  3408               	retlw	8
  2491  18C9  34D8               	retlw	216
  2492  18CA  3404               	retlw	4
  2493  18CB  340A               	retlw	10
  2494  18CC  3400               	retlw	0
  2495  18CD  3400               	retlw	0
  2496  18CE  3401               	retlw	1
  2497  18CF  3401               	retlw	1
  2498  18D0  3402               	retlw	2
  2499  18D1  3400               	retlw	0
  2500  18D2  3401               	retlw	1
  2501  18D3                     __end_of_device_dsc:	
  2502                           
  2503                           	psect	stringtext10
  2504  18EA                     __pstringtext10:	
  2505  18EA                     _cmd_prompt:	
  2506  18EA  3443               	retlw	67
  2507  18EB  344D               	retlw	77
  2508  18EC  3444               	retlw	68
  2509  18ED  343E               	retlw	62
  2510  18EE  3420               	retlw	32
  2511  18EF  3400               	retlw	0
  2512  18F0                     __end_of_cmd_prompt:	
  2513                           
  2514                           	psect	stringtext11
  2515  18F0                     __pstringtext11:	
  2516  18F0                     _sd000:	
  2517  18F0  3404               	retlw	4
  2518  18F1  3403               	retlw	3
  2519  18F2  3409               	retlw	9
  2520  18F3  3404               	retlw	4
  2521  18F4                     __end_of_sd000:	
  2522  000B                     _INTCONbits	set	11
  2523  0012                     _PIR2bits	set	18
  2524  000D                     _PORTBbits	set	13
  2525  0099                     _OSCCON	set	153
  2526  0092                     _PIE2bits	set	146
  2527  008D                     _TRISBbits	set	141
  2528  008E                     _TRISCbits	set	142
  2529  010E                     _LATCbits	set	270
  2530  018D                     _ANSELBbits	set	397
  2531  020D                     _WPUBbits	set	525
  2532  039B                     _ACTCON	set	923
  2533  0E98                     _UEP0bits	set	3736
  2534  0E8E                     _UCON	set	3726
  2535  0E8F                     _USTAT	set	3727
  2536  0E92                     _UIEbits	set	3730
  2537  0E90                     _UIRbits	set	3728
  2538  0E96                     _UADDR	set	3734
  2539  0E8E                     _UCONbits	set	3726
  2540  0E92                     _UIE	set	3730
  2541  0E97                     _UEIE	set	3735
  2542  0E91                     _UCFG	set	3729
  2543  0E90                     _UIR	set	3728
  2544  0E93                     _UEIR	set	3731
  2545  0E99                     _UEP1	set	3737
  2546  0E98                     _UEP0	set	3736
  2547                           
  2548                           ; #config settings
  2549  0000                     
  2550                           	psect	cinit
  2551  000C                     start_initialization:	
  2552  000C                     __initialization:	
  2553                           
  2554                           ; Initialize objects allocated to BANK3
  2555  000C  0023               	movlb	3	; select bank3
  2556                           
  2557                           ;initializer for app_device_cdc_basic@timer
  2558  000D  30FF               	movlw	255
  2559  000E  00EC               	movwf	__pdataBANK3& (0+127)
  2560                           
  2561                           ;initializer for _first
  2562  000F  3001               	movlw	1
  2563  0010  00ED               	movwf	(__pdataBANK3+1)& (0+127)
  2564                           
  2565                           ; Clear objects allocated to BANK0
  2566  0011  0020               	movlb	0	; select bank0
  2567  0012  30A0               	movlw	low __pbssBANK3
  2568  0013  01EF               	clrf	__pbssBANK0& (0+127)
  2569                           
  2570                           ; Clear objects allocated to BANK3
  2571  0014  0084               	movwf	4
  2572  0015  3001               	movlw	high __pbssBANK3
  2573  0016  0085               	movwf	5
  2574  0017  304C               	movlw	76
  2575  0018  3186  26F9  3180   	fcall	clear_ram0
  2576                           
  2577                           ; Clear objects allocated to BANK4
  2578  001B  3020               	movlw	low __pbssBANK4
  2579  001C  0084               	movwf	4
  2580  001D  3002               	movlw	high __pbssBANK4
  2581  001E  0085               	movwf	5
  2582  001F  3013               	movlw	19
  2583  0020  3186  26F9  3180   	fcall	clear_ram0
  2584                           
  2585                           ; Clear objects allocated to BANK5
  2586  0023  30A0               	movlw	low __pbssBANK5
  2587  0024  0084               	movwf	4
  2588  0025  3002               	movlw	high __pbssBANK5
  2589  0026  0085               	movwf	5
  2590  0027  3040               	movlw	64
  2591  0028  3186  26F9  3180   	fcall	clear_ram0
  2592                           
  2593                           ; Clear objects allocated to BANK6
  2594  002B  3020               	movlw	low __pbssBANK6
  2595  002C  0084               	movwf	4
  2596  002D  3003               	movlw	high __pbssBANK6
  2597  002E  0085               	movwf	5
  2598  002F  3048               	movlw	72
  2599  0030  3186  26F9  3180   	fcall	clear_ram0
  2600                           
  2601                           ; Clear objects allocated to BANK7
  2602  0033  30A0               	movlw	low __pbssBANK7
  2603  0034  0084               	movwf	4
  2604  0035  3003               	movlw	high __pbssBANK7
  2605  0036  0085               	movwf	5
  2606  0037  3040               	movlw	64
  2607  0038  3186  26F9  3180   	fcall	clear_ram0
  2608  003B                     end_of_initialization:	
  2609                           ;End of C runtime variable initialization code
  2610                           
  2611  003B                     __end_of__initialization:	
  2612  003B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2613  003C  0020               	movlb	0
  2614  003D  283E               	ljmp	_main	;jump to C main() function
  2615  003E                     __pmaintext:	
  2616 ;;
  2617 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2618 ;;
  2619 ;; *************** function _main *****************
  2620 ;; Defined at:
  2621 ;;		line 50 in file "demo_src/main.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : B1F/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels required when called:   13
  2641 ;; This function calls:
  2642 ;;		_APP_DeviceCDCBasicDemoTasks
  2643 ;;		_SYSTEM_Initialize
  2644 ;;		_USBDeviceAttach
  2645 ;;		_USBDeviceInit
  2646 ;;		_WS2812b_Init
  2647 ;;		_WS2812b_Write
  2648 ;; This function is called by:
  2649 ;;		Startup code after reset
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _main
  2655  003E                     _main:	
  2656                           
  2657                           ;main.c: 52: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2661  003E  3000               	movlw	0
  2662  003F  23C3  3180         	fcall	_SYSTEM_Initialize
  2663                           
  2664                           ;main.c: 54: WS2812b_Init ();
  2665  0041  2400  3180         	fcall	_WS2812b_Init
  2666                           
  2667                           ;main.c: 56: _delay((unsigned long)((100)*(48000000/4000000.0)));
  2668  0043  30F0               	movlw	240
  2669  0044                     u4257:	
  2670  0044  3200               	nop2
  2671  0045  0B89               	decfsz	9,f
  2672  0046  2844               	goto	u4257
  2673                           
  2674                           ;main.c: 58: ledData[0] = 0;
  2675  0047  0023               	movlb	3	; select bank3
  2676  0048  01B8               	clrf	_ledData^(0+384)
  2677                           
  2678                           ;main.c: 59: ledData[1] = 0;
  2679  0049  01B9               	clrf	(_ledData^(0+384)+1)
  2680                           
  2681                           ;main.c: 60: ledData[2] = 0;
  2682  004A  01BA               	clrf	(_ledData^(0+384)+2)
  2683                           
  2684                           ;main.c: 62: WS2812b_Write ();
  2685  004B  2054               	fcall	_WS2812b_Write
  2686                           
  2687                           ;main.c: 64: USBDeviceInit();
  2688  004C  3197  2781  3180   	fcall	_USBDeviceInit
  2689                           
  2690                           ;main.c: 65: USBDeviceAttach();
  2691  004F  23E7  3180         	fcall	_USBDeviceAttach
  2692  0051                     l5117:	
  2693                           
  2694                           ;main.c: 72: {;main.c: 73: ;;main.c: 92: APP_DeviceCDCBasicDemoTasks();
  2695  0051  213A  3180         	fcall	_APP_DeviceCDCBasicDemoTasks
  2696  0053  2851               	goto	l5117
  2697  0054                     __end_of_main:	
  2698  0054                     __ptext15:	
  2699 ;; *************** function _WS2812b_Write *****************
  2700 ;; Defined at:
  2701 ;;		line 35 in file "bsp/ws2812b.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  a               1    1[BANK1 ] unsigned char 
  2706 ;;  i               1    0[BANK1 ] unsigned char 
  2707 ;;  j               1    0        unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  2712 ;; Tracked objects:
  2713 ;;		On entry : 1F/3
  2714 ;;		On exit  : 1F/1
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2720 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2721 ;;Total ram usage:        2 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:   10
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_ProcessCommand
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _WS2812b_Write
  2734  0054                     _WS2812b_Write:	
  2735                           
  2736                           ;ws2812b.c: 37: uint8_t i, j, a;;ws2812b.c: 42: for (i = 0; i < (3*1); i++) {
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in _WS2812b_Write: [wreg-fsr1h+status,2+status,0+pclath]
  2740  0054  0021               	movlb	1	; select bank1
  2741  0055  01E0               	clrf	WS2812b_Write@i^(0+128)
  2742  0056                     l4363:	
  2743                           
  2744                           ;ws2812b.c: 43: a = gamma8[ledData[i]];
  2745  0056  0860               	movf	WS2812b_Write@i^(0+128),w
  2746  0057  3EB8               	addlw	(low (_ledData| (0+256)))& (0+255)
  2747  0058  0086               	movwf	6
  2748  0059  3001               	movlw	1	; select bank3/4
  2749  005A  0087               	movwf	7
  2750  005B  0801               	movf	1,w
  2751  005C  3E00               	addlw	low (_gamma8| (0+32768))
  2752  005D  0084               	movwf	4
  2753  005E  3090               	movlw	high (_gamma8| (0+32768))
  2754  005F  1803               	skipnc
  2755  0060  3E01               	addlw	1
  2756  0061  0085               	movwf	5
  2757  0062  0800               	movf	0,w	;code access
  2758  0063  00E1               	movwf	WS2812b_Write@a^(0+128)
  2759                           
  2760                           ;ws2812b.c: 46: if (a & 0x80) {
  2761  0064  1FE1               	btfss	WS2812b_Write@a^(0+128),7
  2762  0065  2872               	goto	l956
  2763                           
  2764                           ;ws2812b.c: 47: LATCbits.LATC2 = 1;
  2765  0066  0022               	movlb	2	; select bank2
  2766  0067  150E               	bsf	14,2	;volatile
  2767                           
  2768                           ;ws2812b.c: 48: __nop();
  2769  0068  0000               	nop
  2770                           
  2771                           ;ws2812b.c: 49: __nop();
  2772  0069  0000               	nop
  2773                           
  2774                           ;ws2812b.c: 50: __nop();
  2775  006A  0000               	nop
  2776                           
  2777                           ;ws2812b.c: 51: __nop();
  2778  006B  0000               	nop
  2779                           
  2780                           ;ws2812b.c: 52: __nop();
  2781  006C  0000               	nop
  2782                           
  2783                           ;ws2812b.c: 53: __nop();
  2784  006D  0000               	nop
  2785                           
  2786                           ;ws2812b.c: 54: __nop();
  2787  006E  0000               	nop
  2788                           
  2789                           ;ws2812b.c: 55: LATCbits.LATC2 = 0;
  2790  006F  0022               	movlb	2	; select bank2
  2791  0070  110E               	bcf	14,2	;volatile
  2792                           
  2793                           ;ws2812b.c: 56: } else {
  2794  0071  287D               	goto	l957
  2795  0072                     l956:	
  2796                           
  2797                           ;ws2812b.c: 57: LATCbits.LATC2 = 1;
  2798  0072  0022               	movlb	2	; select bank2
  2799  0073  150E               	bsf	14,2	;volatile
  2800                           
  2801                           ;ws2812b.c: 58: __nop();
  2802  0074  0000               	nop
  2803                           
  2804                           ;ws2812b.c: 59: __nop();
  2805  0075  0000               	nop
  2806                           
  2807                           ;ws2812b.c: 60: __nop();
  2808  0076  0000               	nop
  2809                           
  2810                           ;ws2812b.c: 61: LATCbits.LATC2 = 0;
  2811  0077  0022               	movlb	2	; select bank2
  2812  0078  110E               	bcf	14,2	;volatile
  2813                           
  2814                           ;ws2812b.c: 62: __nop();
  2815  0079  0000               	nop
  2816                           
  2817                           ;ws2812b.c: 63: __nop();
  2818  007A  0000               	nop
  2819                           
  2820                           ;ws2812b.c: 64: __nop();
  2821  007B  0000               	nop
  2822                           
  2823                           ;ws2812b.c: 65: __nop();
  2824  007C  0000               	nop
  2825  007D                     l957:	
  2826                           
  2827                           ;ws2812b.c: 66: };ws2812b.c: 69: if (a & 0x40) {
  2828  007D  0021               	movlb	1	; select bank1
  2829  007E  1F61               	btfss	WS2812b_Write@a^(0+128),6
  2830  007F  288C               	goto	l958
  2831                           
  2832                           ;ws2812b.c: 70: LATCbits.LATC2 = 1;
  2833  0080  0022               	movlb	2	; select bank2
  2834  0081  150E               	bsf	14,2	;volatile
  2835                           
  2836                           ;ws2812b.c: 71: __nop();
  2837  0082  0000               	nop
  2838                           
  2839                           ;ws2812b.c: 72: __nop();
  2840  0083  0000               	nop
  2841                           
  2842                           ;ws2812b.c: 73: __nop();
  2843  0084  0000               	nop
  2844                           
  2845                           ;ws2812b.c: 74: __nop();
  2846  0085  0000               	nop
  2847                           
  2848                           ;ws2812b.c: 75: __nop();
  2849  0086  0000               	nop
  2850                           
  2851                           ;ws2812b.c: 76: __nop();
  2852  0087  0000               	nop
  2853                           
  2854                           ;ws2812b.c: 77: __nop();
  2855  0088  0000               	nop
  2856                           
  2857                           ;ws2812b.c: 78: LATCbits.LATC2 = 0;
  2858  0089  0022               	movlb	2	; select bank2
  2859  008A  110E               	bcf	14,2	;volatile
  2860                           
  2861                           ;ws2812b.c: 79: } else {
  2862  008B  2897               	goto	l959
  2863  008C                     l958:	
  2864                           
  2865                           ;ws2812b.c: 80: LATCbits.LATC2 = 1;
  2866  008C  0022               	movlb	2	; select bank2
  2867  008D  150E               	bsf	14,2	;volatile
  2868                           
  2869                           ;ws2812b.c: 81: __nop();
  2870  008E  0000               	nop
  2871                           
  2872                           ;ws2812b.c: 82: __nop();
  2873  008F  0000               	nop
  2874                           
  2875                           ;ws2812b.c: 83: __nop();
  2876  0090  0000               	nop
  2877                           
  2878                           ;ws2812b.c: 84: LATCbits.LATC2 = 0;
  2879  0091  0022               	movlb	2	; select bank2
  2880  0092  110E               	bcf	14,2	;volatile
  2881                           
  2882                           ;ws2812b.c: 85: __nop();
  2883  0093  0000               	nop
  2884                           
  2885                           ;ws2812b.c: 86: __nop();
  2886  0094  0000               	nop
  2887                           
  2888                           ;ws2812b.c: 87: __nop();
  2889  0095  0000               	nop
  2890                           
  2891                           ;ws2812b.c: 88: __nop();
  2892  0096  0000               	nop
  2893  0097                     l959:	
  2894                           
  2895                           ;ws2812b.c: 89: };ws2812b.c: 92: if (a & 0x20) {
  2896  0097  0021               	movlb	1	; select bank1
  2897  0098  1EE1               	btfss	WS2812b_Write@a^(0+128),5
  2898  0099  28A6               	goto	l960
  2899                           
  2900                           ;ws2812b.c: 93: LATCbits.LATC2 = 1;
  2901  009A  0022               	movlb	2	; select bank2
  2902  009B  150E               	bsf	14,2	;volatile
  2903                           
  2904                           ;ws2812b.c: 94: __nop();
  2905  009C  0000               	nop
  2906                           
  2907                           ;ws2812b.c: 95: __nop();
  2908  009D  0000               	nop
  2909                           
  2910                           ;ws2812b.c: 96: __nop();
  2911  009E  0000               	nop
  2912                           
  2913                           ;ws2812b.c: 97: __nop();
  2914  009F  0000               	nop
  2915                           
  2916                           ;ws2812b.c: 98: __nop();
  2917  00A0  0000               	nop
  2918                           
  2919                           ;ws2812b.c: 99: __nop();
  2920  00A1  0000               	nop
  2921                           
  2922                           ;ws2812b.c: 100: __nop();
  2923  00A2  0000               	nop
  2924                           
  2925                           ;ws2812b.c: 101: LATCbits.LATC2 = 0;
  2926  00A3  0022               	movlb	2	; select bank2
  2927  00A4  110E               	bcf	14,2	;volatile
  2928                           
  2929                           ;ws2812b.c: 102: } else {
  2930  00A5  28B1               	goto	l961
  2931  00A6                     l960:	
  2932                           
  2933                           ;ws2812b.c: 103: LATCbits.LATC2 = 1;
  2934  00A6  0022               	movlb	2	; select bank2
  2935  00A7  150E               	bsf	14,2	;volatile
  2936                           
  2937                           ;ws2812b.c: 104: __nop();
  2938  00A8  0000               	nop
  2939                           
  2940                           ;ws2812b.c: 105: __nop();
  2941  00A9  0000               	nop
  2942                           
  2943                           ;ws2812b.c: 106: __nop();
  2944  00AA  0000               	nop
  2945                           
  2946                           ;ws2812b.c: 107: LATCbits.LATC2 = 0;
  2947  00AB  0022               	movlb	2	; select bank2
  2948  00AC  110E               	bcf	14,2	;volatile
  2949                           
  2950                           ;ws2812b.c: 108: __nop();
  2951  00AD  0000               	nop
  2952                           
  2953                           ;ws2812b.c: 109: __nop();
  2954  00AE  0000               	nop
  2955                           
  2956                           ;ws2812b.c: 110: __nop();
  2957  00AF  0000               	nop
  2958                           
  2959                           ;ws2812b.c: 111: __nop();
  2960  00B0  0000               	nop
  2961  00B1                     l961:	
  2962                           
  2963                           ;ws2812b.c: 112: };ws2812b.c: 115: if (a & 0x10) {
  2964  00B1  0021               	movlb	1	; select bank1
  2965  00B2  1E61               	btfss	WS2812b_Write@a^(0+128),4
  2966  00B3  28C0               	goto	l962
  2967                           
  2968                           ;ws2812b.c: 116: LATCbits.LATC2 = 1;
  2969  00B4  0022               	movlb	2	; select bank2
  2970  00B5  150E               	bsf	14,2	;volatile
  2971                           
  2972                           ;ws2812b.c: 117: __nop();
  2973  00B6  0000               	nop
  2974                           
  2975                           ;ws2812b.c: 118: __nop();
  2976  00B7  0000               	nop
  2977                           
  2978                           ;ws2812b.c: 119: __nop();
  2979  00B8  0000               	nop
  2980                           
  2981                           ;ws2812b.c: 120: __nop();
  2982  00B9  0000               	nop
  2983                           
  2984                           ;ws2812b.c: 121: __nop();
  2985  00BA  0000               	nop
  2986                           
  2987                           ;ws2812b.c: 122: __nop();
  2988  00BB  0000               	nop
  2989                           
  2990                           ;ws2812b.c: 123: __nop();
  2991  00BC  0000               	nop
  2992                           
  2993                           ;ws2812b.c: 124: LATCbits.LATC2 = 0;
  2994  00BD  0022               	movlb	2	; select bank2
  2995  00BE  110E               	bcf	14,2	;volatile
  2996                           
  2997                           ;ws2812b.c: 125: } else {
  2998  00BF  28CB               	goto	l963
  2999  00C0                     l962:	
  3000                           
  3001                           ;ws2812b.c: 126: LATCbits.LATC2 = 1;
  3002  00C0  0022               	movlb	2	; select bank2
  3003  00C1  150E               	bsf	14,2	;volatile
  3004                           
  3005                           ;ws2812b.c: 127: __nop();
  3006  00C2  0000               	nop
  3007                           
  3008                           ;ws2812b.c: 128: __nop();
  3009  00C3  0000               	nop
  3010                           
  3011                           ;ws2812b.c: 129: __nop();
  3012  00C4  0000               	nop
  3013                           
  3014                           ;ws2812b.c: 130: LATCbits.LATC2 = 0;
  3015  00C5  0022               	movlb	2	; select bank2
  3016  00C6  110E               	bcf	14,2	;volatile
  3017                           
  3018                           ;ws2812b.c: 131: __nop();
  3019  00C7  0000               	nop
  3020                           
  3021                           ;ws2812b.c: 132: __nop();
  3022  00C8  0000               	nop
  3023                           
  3024                           ;ws2812b.c: 133: __nop();
  3025  00C9  0000               	nop
  3026                           
  3027                           ;ws2812b.c: 134: __nop();
  3028  00CA  0000               	nop
  3029  00CB                     l963:	
  3030                           
  3031                           ;ws2812b.c: 135: };ws2812b.c: 138: if (a & 0x08) {
  3032  00CB  0021               	movlb	1	; select bank1
  3033  00CC  1DE1               	btfss	WS2812b_Write@a^(0+128),3
  3034  00CD  28DA               	goto	l964
  3035                           
  3036                           ;ws2812b.c: 139: LATCbits.LATC2 = 1;
  3037  00CE  0022               	movlb	2	; select bank2
  3038  00CF  150E               	bsf	14,2	;volatile
  3039                           
  3040                           ;ws2812b.c: 140: __nop();
  3041  00D0  0000               	nop
  3042                           
  3043                           ;ws2812b.c: 141: __nop();
  3044  00D1  0000               	nop
  3045                           
  3046                           ;ws2812b.c: 142: __nop();
  3047  00D2  0000               	nop
  3048                           
  3049                           ;ws2812b.c: 143: __nop();
  3050  00D3  0000               	nop
  3051                           
  3052                           ;ws2812b.c: 144: __nop();
  3053  00D4  0000               	nop
  3054                           
  3055                           ;ws2812b.c: 145: __nop();
  3056  00D5  0000               	nop
  3057                           
  3058                           ;ws2812b.c: 146: __nop();
  3059  00D6  0000               	nop
  3060                           
  3061                           ;ws2812b.c: 147: LATCbits.LATC2 = 0;
  3062  00D7  0022               	movlb	2	; select bank2
  3063  00D8  110E               	bcf	14,2	;volatile
  3064                           
  3065                           ;ws2812b.c: 148: } else {
  3066  00D9  28E5               	goto	l965
  3067  00DA                     l964:	
  3068                           
  3069                           ;ws2812b.c: 149: LATCbits.LATC2 = 1;
  3070  00DA  0022               	movlb	2	; select bank2
  3071  00DB  150E               	bsf	14,2	;volatile
  3072                           
  3073                           ;ws2812b.c: 150: __nop();
  3074  00DC  0000               	nop
  3075                           
  3076                           ;ws2812b.c: 151: __nop();
  3077  00DD  0000               	nop
  3078                           
  3079                           ;ws2812b.c: 152: __nop();
  3080  00DE  0000               	nop
  3081                           
  3082                           ;ws2812b.c: 153: LATCbits.LATC2 = 0;
  3083  00DF  0022               	movlb	2	; select bank2
  3084  00E0  110E               	bcf	14,2	;volatile
  3085                           
  3086                           ;ws2812b.c: 154: __nop();
  3087  00E1  0000               	nop
  3088                           
  3089                           ;ws2812b.c: 155: __nop();
  3090  00E2  0000               	nop
  3091                           
  3092                           ;ws2812b.c: 156: __nop();
  3093  00E3  0000               	nop
  3094                           
  3095                           ;ws2812b.c: 157: __nop();
  3096  00E4  0000               	nop
  3097  00E5                     l965:	
  3098                           
  3099                           ;ws2812b.c: 158: };ws2812b.c: 161: if (a & 0x04) {
  3100  00E5  0021               	movlb	1	; select bank1
  3101  00E6  1D61               	btfss	WS2812b_Write@a^(0+128),2
  3102  00E7  28F4               	goto	l966
  3103                           
  3104                           ;ws2812b.c: 162: LATCbits.LATC2 = 1;
  3105  00E8  0022               	movlb	2	; select bank2
  3106  00E9  150E               	bsf	14,2	;volatile
  3107                           
  3108                           ;ws2812b.c: 163: __nop();
  3109  00EA  0000               	nop
  3110                           
  3111                           ;ws2812b.c: 164: __nop();
  3112  00EB  0000               	nop
  3113                           
  3114                           ;ws2812b.c: 165: __nop();
  3115  00EC  0000               	nop
  3116                           
  3117                           ;ws2812b.c: 166: __nop();
  3118  00ED  0000               	nop
  3119                           
  3120                           ;ws2812b.c: 167: __nop();
  3121  00EE  0000               	nop
  3122                           
  3123                           ;ws2812b.c: 168: __nop();
  3124  00EF  0000               	nop
  3125                           
  3126                           ;ws2812b.c: 169: __nop();
  3127  00F0  0000               	nop
  3128                           
  3129                           ;ws2812b.c: 170: LATCbits.LATC2 = 0;
  3130  00F1  0022               	movlb	2	; select bank2
  3131  00F2  110E               	bcf	14,2	;volatile
  3132                           
  3133                           ;ws2812b.c: 171: } else {
  3134  00F3  28FF               	goto	l967
  3135  00F4                     l966:	
  3136                           
  3137                           ;ws2812b.c: 172: LATCbits.LATC2 = 1;
  3138  00F4  0022               	movlb	2	; select bank2
  3139  00F5  150E               	bsf	14,2	;volatile
  3140                           
  3141                           ;ws2812b.c: 173: __nop();
  3142  00F6  0000               	nop
  3143                           
  3144                           ;ws2812b.c: 174: __nop();
  3145  00F7  0000               	nop
  3146                           
  3147                           ;ws2812b.c: 175: __nop();
  3148  00F8  0000               	nop
  3149                           
  3150                           ;ws2812b.c: 176: LATCbits.LATC2 = 0;
  3151  00F9  0022               	movlb	2	; select bank2
  3152  00FA  110E               	bcf	14,2	;volatile
  3153                           
  3154                           ;ws2812b.c: 177: __nop();
  3155  00FB  0000               	nop
  3156                           
  3157                           ;ws2812b.c: 178: __nop();
  3158  00FC  0000               	nop
  3159                           
  3160                           ;ws2812b.c: 179: __nop();
  3161  00FD  0000               	nop
  3162                           
  3163                           ;ws2812b.c: 180: __nop();
  3164  00FE  0000               	nop
  3165  00FF                     l967:	
  3166                           
  3167                           ;ws2812b.c: 181: };ws2812b.c: 184: if (a & 0x02) {
  3168  00FF  0021               	movlb	1	; select bank1
  3169  0100  1CE1               	btfss	WS2812b_Write@a^(0+128),1
  3170  0101  290E               	goto	l968
  3171                           
  3172                           ;ws2812b.c: 185: LATCbits.LATC2 = 1;
  3173  0102  0022               	movlb	2	; select bank2
  3174  0103  150E               	bsf	14,2	;volatile
  3175                           
  3176                           ;ws2812b.c: 186: __nop();
  3177  0104  0000               	nop
  3178                           
  3179                           ;ws2812b.c: 187: __nop();
  3180  0105  0000               	nop
  3181                           
  3182                           ;ws2812b.c: 188: __nop();
  3183  0106  0000               	nop
  3184                           
  3185                           ;ws2812b.c: 189: __nop();
  3186  0107  0000               	nop
  3187                           
  3188                           ;ws2812b.c: 190: __nop();
  3189  0108  0000               	nop
  3190                           
  3191                           ;ws2812b.c: 191: __nop();
  3192  0109  0000               	nop
  3193                           
  3194                           ;ws2812b.c: 192: __nop();
  3195  010A  0000               	nop
  3196                           
  3197                           ;ws2812b.c: 193: LATCbits.LATC2 = 0;
  3198  010B  0022               	movlb	2	; select bank2
  3199  010C  110E               	bcf	14,2	;volatile
  3200                           
  3201                           ;ws2812b.c: 194: } else {
  3202  010D  2919               	goto	l969
  3203  010E                     l968:	
  3204                           
  3205                           ;ws2812b.c: 195: LATCbits.LATC2 = 1;
  3206  010E  0022               	movlb	2	; select bank2
  3207  010F  150E               	bsf	14,2	;volatile
  3208                           
  3209                           ;ws2812b.c: 196: __nop();
  3210  0110  0000               	nop
  3211                           
  3212                           ;ws2812b.c: 197: __nop();
  3213  0111  0000               	nop
  3214                           
  3215                           ;ws2812b.c: 198: __nop();
  3216  0112  0000               	nop
  3217                           
  3218                           ;ws2812b.c: 199: LATCbits.LATC2 = 0;
  3219  0113  0022               	movlb	2	; select bank2
  3220  0114  110E               	bcf	14,2	;volatile
  3221                           
  3222                           ;ws2812b.c: 200: __nop();
  3223  0115  0000               	nop
  3224                           
  3225                           ;ws2812b.c: 201: __nop();
  3226  0116  0000               	nop
  3227                           
  3228                           ;ws2812b.c: 202: __nop();
  3229  0117  0000               	nop
  3230                           
  3231                           ;ws2812b.c: 203: __nop();
  3232  0118  0000               	nop
  3233  0119                     l969:	
  3234                           
  3235                           ;ws2812b.c: 204: };ws2812b.c: 207: if (a & 0x01) {
  3236  0119  0021               	movlb	1	; select bank1
  3237  011A  1C61               	btfss	WS2812b_Write@a^(0+128),0
  3238  011B  2928               	goto	l970
  3239                           
  3240                           ;ws2812b.c: 208: LATCbits.LATC2 = 1;
  3241  011C  0022               	movlb	2	; select bank2
  3242  011D  150E               	bsf	14,2	;volatile
  3243                           
  3244                           ;ws2812b.c: 209: __nop();
  3245  011E  0000               	nop
  3246                           
  3247                           ;ws2812b.c: 210: __nop();
  3248  011F  0000               	nop
  3249                           
  3250                           ;ws2812b.c: 211: __nop();
  3251  0120  0000               	nop
  3252                           
  3253                           ;ws2812b.c: 212: __nop();
  3254  0121  0000               	nop
  3255                           
  3256                           ;ws2812b.c: 213: __nop();
  3257  0122  0000               	nop
  3258                           
  3259                           ;ws2812b.c: 214: __nop();
  3260  0123  0000               	nop
  3261                           
  3262                           ;ws2812b.c: 215: __nop();
  3263  0124  0000               	nop
  3264                           
  3265                           ;ws2812b.c: 216: LATCbits.LATC2 = 0;
  3266  0125  0022               	movlb	2	; select bank2
  3267  0126  110E               	bcf	14,2	;volatile
  3268                           
  3269                           ;ws2812b.c: 217: } else {
  3270  0127  2933               	goto	l4383
  3271  0128                     l970:	
  3272                           
  3273                           ;ws2812b.c: 218: LATCbits.LATC2 = 1;
  3274  0128  0022               	movlb	2	; select bank2
  3275  0129  150E               	bsf	14,2	;volatile
  3276                           
  3277                           ;ws2812b.c: 219: __nop();
  3278  012A  0000               	nop
  3279                           
  3280                           ;ws2812b.c: 220: __nop();
  3281  012B  0000               	nop
  3282                           
  3283                           ;ws2812b.c: 221: __nop();
  3284  012C  0000               	nop
  3285                           
  3286                           ;ws2812b.c: 222: LATCbits.LATC2 = 0;
  3287  012D  0022               	movlb	2	; select bank2
  3288  012E  110E               	bcf	14,2	;volatile
  3289                           
  3290                           ;ws2812b.c: 223: __nop();
  3291  012F  0000               	nop
  3292                           
  3293                           ;ws2812b.c: 224: __nop();
  3294  0130  0000               	nop
  3295                           
  3296                           ;ws2812b.c: 225: __nop();
  3297  0131  0000               	nop
  3298                           
  3299                           ;ws2812b.c: 226: __nop();
  3300  0132  0000               	nop
  3301  0133                     l4383:	
  3302  0133  0021               	movlb	1	; select bank1
  3303  0134  3003               	movlw	3
  3304  0135  0AE0               	incf	WS2812b_Write@i^(0+128),f
  3305  0136  0260               	subwf	WS2812b_Write@i^(0+128),w
  3306  0137  1803               	btfsc	3,0
  3307  0138  0008               	return
  3308  0139  2856               	goto	l4363
  3309  013A                     __end_of_WS2812b_Write:	
  3310  013A                     __ptext8:	
  3311 ;; *************** function _APP_DeviceCDCBasicDemoTasks *****************
  3312 ;; Defined at:
  3313 ;;		line 101 in file "demo_src/app_device_cdc_basic.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  ch              1    1[BANK3 ] unsigned char 
  3318 ;;  numBytesRead    1    0[BANK3 ] unsigned char 
  3319 ;;  i               1    0        unsigned char 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Locals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0
  3333 ;;Total ram usage:        2 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:   12
  3336 ;; This function calls:
  3337 ;;		_CDCTxService
  3338 ;;		_ProcessCommand
  3339 ;;		_getsUSBUSART
  3340 ;;		_putUSBUSART
  3341 ;;		_putrsUSBUSART
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           
  3348                           ;psect for function _APP_DeviceCDCBasicDemoTasks
  3349  013A                     _APP_DeviceCDCBasicDemoTasks:	
  3350                           
  3351                           ;app_device_cdc_basic.c: 106: if (USBDeviceState < CONFIGURED_STATE)
  3352                           
  3353                           ;incstack = 0
  3354                           ; Regs used in _APP_DeviceCDCBasicDemoTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3355  013A  3020               	movlw	32
  3356  013B  0020               	movlb	0	; select bank0
  3357  013C  026F               	subwf	_USBDeviceState,w	;volatile
  3358  013D  1C03               	btfss	3,0
  3359  013E  0008               	return
  3360                           
  3361                           ;app_device_cdc_basic.c: 109: };app_device_cdc_basic.c: 115: if (UCONbits.SUSPND == 1)
  3362  013F  003D               	movlb	29	; select bank29
  3363  0140  188E               	btfsc	14,1	;volatile
  3364  0141  0008               	return
  3365                           
  3366                           ;app_device_cdc_basic.c: 121: uint8_t i, ch;;app_device_cdc_basic.c: 123: numBytesWrite 
      +                          = 0;
  3367  0142  0023               	movlb	3	; select bank3
  3368  0143  01D4               	clrf	_numBytesWrite^(0+384)
  3369                           
  3370                           ;app_device_cdc_basic.c: 125: if (first) {
  3371  0144  086D               	movf	_first^(0+384),w
  3372  0145  1903               	btfsc	3,2
  3373  0146  2956               	goto	l4989
  3374                           
  3375                           ;app_device_cdc_basic.c: 126: if (timer == 0) {
  3376  0147  086C               	movf	app_device_cdc_basic@timer^(0+384),w
  3377  0148  1D03               	btfss	3,2
  3378  0149  0008               	return
  3379                           
  3380                           ;app_device_cdc_basic.c: 127: if ((cdc_trf_state == 0) == 1) {
  3381  014A  0857               	movf	_cdc_trf_state^(0+384),w
  3382  014B  1D03               	btfss	3,2
  3383  014C  2956               	goto	l4989
  3384                           
  3385                           ;app_device_cdc_basic.c: 128: putrsUSBUSART (helloWorld);
  3386  014D  30AB               	movlw	low (_helloWorld| (0+32768))
  3387  014E  0021               	movlb	1	; select bank1
  3388  014F  00E0               	movwf	putrsUSBUSART@data^(0+128)
  3389  0150  3098               	movlw	high (_helloWorld| (0+32768))
  3390  0151  00E1               	movwf	(putrsUSBUSART@data^(0+128)+1)
  3391  0152  2220  3180         	fcall	_putrsUSBUSART
  3392                           
  3393                           ;app_device_cdc_basic.c: 129: first = 0;
  3394  0154  0023               	movlb	3	; select bank3
  3395  0155  01ED               	clrf	_first^(0+384)
  3396  0156                     l4989:	
  3397                           
  3398                           ;app_device_cdc_basic.c: 133: };app_device_cdc_basic.c: 134: };app_device_cdc_basic.c: 1
      +                          36: if (cmd_state == 0) {
  3399  0156  0852               	movf	_cmd_state^(0+384),w
  3400  0157  1D03               	btfss	3,2
  3401  0158  296C               	goto	l5001
  3402                           
  3403                           ;app_device_cdc_basic.c: 137: if ((cdc_trf_state == 0) == 1) {
  3404  0159  0857               	movf	_cdc_trf_state^(0+384),w
  3405  015A  1D03               	btfss	3,2
  3406  015B  2A15               	goto	l5089
  3407                           
  3408                           ;app_device_cdc_basic.c: 138: cmd_length = 0;
  3409  015C  01D3               	clrf	_cmd_length^(0+384)
  3410                           
  3411                           ;app_device_cdc_basic.c: 139: cmd_buffer[cmd_length] = 0;
  3412  015D  0853               	movf	_cmd_length^(0+384),w
  3413  015E  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  3414  015F  0086               	movwf	6
  3415  0160  3003               	movlw	3	; select bank6/7
  3416  0161  0087               	movwf	7
  3417  0162  30EA               	movlw	low (_cmd_prompt| (0+32768))
  3418  0163  0181               	clrf	1
  3419                           
  3420                           ;app_device_cdc_basic.c: 140: putrsUSBUSART (cmd_prompt);
  3421  0164  0021               	movlb	1	; select bank1
  3422  0165  00E0               	movwf	putrsUSBUSART@data^(0+128)
  3423  0166  3098               	movlw	high (_cmd_prompt| (0+32768))
  3424  0167  00E1               	movwf	(putrsUSBUSART@data^(0+128)+1)
  3425  0168  2220  3180         	fcall	_putrsUSBUSART
  3426                           
  3427                           ;app_device_cdc_basic.c: 141: cmd_state++;
  3428  016A  0023               	movlb	3	; select bank3
  3429  016B  2995               	goto	L1
  3430  016C                     l5001:	
  3431  016C  0B52               	decfsz	_cmd_state^(0+384),w
  3432  016D  29D7               	goto	l5055
  3433                           
  3434                           ;app_device_cdc_basic.c: 144: if ((cdc_trf_state == 0) == 1) {
  3435  016E  0857               	movf	_cdc_trf_state^(0+384),w
  3436  016F  1D03               	btfss	3,2
  3437  0170  2A15               	goto	l5089
  3438  0171                     l5005:	
  3439                           
  3440                           ;app_device_cdc_basic.c: 148: if (numBytesWrite >= (64 - 4)) {
  3441  0171  303C               	movlw	60
  3442  0172  0254               	subwf	_numBytesWrite^(0+384),w
  3443  0173  1803               	btfsc	3,0
  3444  0174  2A15               	goto	l5089
  3445                           
  3446                           ;app_device_cdc_basic.c: 150: };app_device_cdc_basic.c: 153: numBytesRead = getsUSBUSART
      +                          (readBuffer, 1);
  3447  0175  0021               	movlb	1	; select bank1
  3448  0176  30A0               	movlw	(low (_readBuffer| (0+768)))& (0+255)
  3449  0177  01EB               	clrf	getsUSBUSART@len^(0+128)
  3450  0178  0AEB               	incf	getsUSBUSART@len^(0+128),f
  3451  0179  3184  2405  3180   	fcall	_getsUSBUSART
  3452  017C  00EE               	movwf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+384)
  3453                           
  3454                           ;app_device_cdc_basic.c: 154: if (numBytesRead == 0) {
  3455  017D  086E               	movf	APP_DeviceCDCBasicDemoTasks@numBytesRead^(0+384),w
  3456  017E  1903               	btfsc	3,2
  3457  017F  2A15               	goto	l5089
  3458                           
  3459                           ;app_device_cdc_basic.c: 156: };app_device_cdc_basic.c: 159: ch = readBuffer[0];
  3460  0180  0027               	movlb	7	; select bank7
  3461  0181  0820               	movf	_readBuffer^(0+896),w
  3462  0182  0023               	movlb	3	; select bank3
  3463  0183  00EF               	movwf	APP_DeviceCDCBasicDemoTasks@ch^(0+384)
  3464                           
  3465                           ;app_device_cdc_basic.c: 162: if (ch == 0x0d) {
  3466  0184  3A0D               	xorlw	13
  3467  0185  1D03               	btfss	3,2
  3468  0186  2997               	goto	l5027
  3469                           
  3470                           ;app_device_cdc_basic.c: 164: writeBuffer[numBytesWrite++] = 0x0d;
  3471  0187  0854               	movf	_numBytesWrite^(0+384),w
  3472  0188  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3473  0189  0086               	movwf	6
  3474  018A  3002               	movlw	2	; select bank5/6
  3475  018B  0087               	movwf	7
  3476  018C  300D               	movlw	13
  3477  018D  0081               	movwf	1
  3478  018E  0AD4               	incf	_numBytesWrite^(0+384),f
  3479                           
  3480                           ;app_device_cdc_basic.c: 165: writeBuffer[numBytesWrite++] = 0x0a;
  3481  018F  0854               	movf	_numBytesWrite^(0+384),w
  3482  0190  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3483  0191  0086               	movwf	6
  3484  0192  300A               	movlw	10
  3485  0193  0081               	movwf	1
  3486  0194  0AD4               	incf	_numBytesWrite^(0+384),f
  3487  0195                     L1:	
  3488                           
  3489                           ;app_device_cdc_basic.c: 166: cmd_state++;
  3490  0195  0AD2               	incf	_cmd_state^(0+384),f
  3491                           
  3492                           ;app_device_cdc_basic.c: 167: break;
  3493  0196  2A15               	goto	l5089
  3494  0197                     l5027:	
  3495  0197  3008               	movlw	8
  3496  0198  066F               	xorwf	APP_DeviceCDCBasicDemoTasks@ch^(0+384),w
  3497  0199  1D03               	btfss	3,2
  3498  019A  29B4               	goto	l5041
  3499                           
  3500                           ;app_device_cdc_basic.c: 169: if (cmd_length > 0) {
  3501  019B  0853               	movf	_cmd_length^(0+384),w
  3502  019C  1903               	btfsc	3,2
  3503  019D  2971               	goto	l5005
  3504                           
  3505                           ;app_device_cdc_basic.c: 170: writeBuffer[numBytesWrite++] = 0x08;
  3506  019E  0854               	movf	_numBytesWrite^(0+384),w
  3507  019F  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3508  01A0  0086               	movwf	6
  3509  01A1  3002               	movlw	2	; select bank5/6
  3510  01A2  0087               	movwf	7
  3511  01A3  3008               	movlw	8
  3512  01A4  0081               	movwf	1
  3513  01A5  0AD4               	incf	_numBytesWrite^(0+384),f
  3514                           
  3515                           ;app_device_cdc_basic.c: 171: writeBuffer[numBytesWrite++] = ' ';
  3516  01A6  0854               	movf	_numBytesWrite^(0+384),w
  3517  01A7  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3518  01A8  0086               	movwf	6
  3519  01A9  3020               	movlw	32
  3520  01AA  0081               	movwf	1
  3521  01AB  0AD4               	incf	_numBytesWrite^(0+384),f
  3522                           
  3523                           ;app_device_cdc_basic.c: 172: writeBuffer[numBytesWrite++] = 0x08;
  3524  01AC  0854               	movf	_numBytesWrite^(0+384),w
  3525  01AD  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3526  01AE  0086               	movwf	6
  3527  01AF  3008               	movlw	8
  3528  01B0  0081               	movwf	1
  3529  01B1  0AD4               	incf	_numBytesWrite^(0+384),f
  3530                           
  3531                           ;app_device_cdc_basic.c: 173: cmd_buffer[--cmd_length] = 0;
  3532  01B2  03D3               	decf	_cmd_length^(0+384),f
  3533  01B3  29D0               	goto	l5053
  3534  01B4                     l5041:	
  3535  01B4  3020               	movlw	32
  3536  01B5  026F               	subwf	APP_DeviceCDCBasicDemoTasks@ch^(0+384),w
  3537  01B6  1C03               	skipc
  3538  01B7  2971               	goto	l5005
  3539  01B8  307F               	movlw	127
  3540  01B9  026F               	subwf	APP_DeviceCDCBasicDemoTasks@ch^(0+384),w
  3541  01BA  1803               	skipnc
  3542  01BB  2971               	goto	l5005
  3543                           
  3544                           ;app_device_cdc_basic.c: 176: if (cmd_length < (72 - 1)) {
  3545  01BC  3047               	movlw	71
  3546  01BD  0253               	subwf	_cmd_length^(0+384),w
  3547  01BE  1803               	skipnc
  3548  01BF  2971               	goto	l5005
  3549                           
  3550                           ;app_device_cdc_basic.c: 177: writeBuffer[numBytesWrite++] = ch;
  3551  01C0  0854               	movf	_numBytesWrite^(0+384),w
  3552  01C1  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3553  01C2  0086               	movwf	6
  3554  01C3  3002               	movlw	2	; select bank5/6
  3555  01C4  0087               	movwf	7
  3556  01C5  086F               	movf	APP_DeviceCDCBasicDemoTasks@ch^(0+384),w
  3557  01C6  0081               	movwf	1
  3558  01C7  0AD4               	incf	_numBytesWrite^(0+384),f
  3559                           
  3560                           ;app_device_cdc_basic.c: 178: cmd_buffer[cmd_length++] = ch;
  3561  01C8  0853               	movf	_cmd_length^(0+384),w
  3562  01C9  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  3563  01CA  0086               	movwf	6
  3564  01CB  3003               	movlw	3	; select bank6/7
  3565  01CC  0087               	movwf	7
  3566  01CD  086F               	movf	APP_DeviceCDCBasicDemoTasks@ch^(0+384),w
  3567  01CE  0081               	movwf	1
  3568  01CF  0AD3               	incf	_cmd_length^(0+384),f
  3569  01D0                     l5053:	
  3570                           
  3571                           ;app_device_cdc_basic.c: 179: cmd_buffer[cmd_length] = 0;
  3572  01D0  0853               	movf	_cmd_length^(0+384),w
  3573  01D1  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  3574  01D2  0086               	movwf	6
  3575  01D3  3003               	movlw	3	; select bank6/7
  3576  01D4  0087               	movwf	7
  3577  01D5  0181               	clrf	1
  3578  01D6  2971               	goto	l5005
  3579  01D7                     l5055:	
  3580  01D7  3002               	movlw	2
  3581  01D8  0652               	xorwf	_cmd_state^(0+384),w
  3582  01D9  1D03               	btfss	3,2
  3583  01DA  2A15               	goto	l5089
  3584                           
  3585                           ;app_device_cdc_basic.c: 185: if ((cdc_trf_state == 0) == 1) {
  3586  01DB  0857               	movf	_cdc_trf_state^(0+384),w
  3587  01DC  1D03               	btfss	3,2
  3588  01DD  2A15               	goto	l5089
  3589                           
  3590                           ;app_device_cdc_basic.c: 186: if (ProcessCommand ()) {
  3591  01DE  2250  3180         	fcall	_ProcessCommand
  3592  01E0  3A00               	xorlw	0
  3593  01E1  1903               	skipnz
  3594  01E2  29F7               	goto	l5075
  3595                           
  3596                           ;app_device_cdc_basic.c: 187: writeBuffer[numBytesWrite++] = 'E';
  3597  01E3  0023               	movlb	3	; select bank3
  3598  01E4  0854               	movf	_numBytesWrite^(0+384),w
  3599  01E5  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3600  01E6  0086               	movwf	6
  3601  01E7  3002               	movlw	2	; select bank5/6
  3602  01E8  0087               	movwf	7
  3603  01E9  3045               	movlw	69
  3604  01EA  0081               	movwf	1
  3605  01EB  0AD4               	incf	_numBytesWrite^(0+384),f
  3606                           
  3607                           ;app_device_cdc_basic.c: 188: writeBuffer[numBytesWrite++] = 'r';
  3608  01EC  0854               	movf	_numBytesWrite^(0+384),w
  3609  01ED  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3610  01EE  0086               	movwf	6
  3611  01EF  3072               	movlw	114
  3612  01F0  0081               	movwf	1
  3613  01F1  0AD4               	incf	_numBytesWrite^(0+384),f
  3614                           
  3615                           ;app_device_cdc_basic.c: 189: writeBuffer[numBytesWrite++] = 'r';
  3616  01F2  0854               	movf	_numBytesWrite^(0+384),w
  3617  01F3  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3618  01F4  0086               	movwf	6
  3619  01F5  3072               	movlw	114
  3620  01F6  2A04               	goto	L2
  3621  01F7                     l5075:	
  3622                           ;app_device_cdc_basic.c: 192: } else {
  3623                           
  3624                           ;app_device_cdc_basic.c: 191: writeBuffer[numBytesWrite++] = '\r';
  3625                           
  3626                           ;app_device_cdc_basic.c: 190: writeBuffer[numBytesWrite++] = '\n';
  3627                           
  3628                           
  3629                           ;app_device_cdc_basic.c: 193: writeBuffer[numBytesWrite++] = 'O';
  3630  01F7  0023               	movlb	3	; select bank3
  3631  01F8  0854               	movf	_numBytesWrite^(0+384),w
  3632  01F9  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3633  01FA  0086               	movwf	6
  3634  01FB  3002               	movlw	2	; select bank5/6
  3635  01FC  0087               	movwf	7
  3636  01FD  304F               	movlw	79
  3637  01FE  0081               	movwf	1
  3638  01FF  0AD4               	incf	_numBytesWrite^(0+384),f
  3639                           
  3640                           ;app_device_cdc_basic.c: 194: writeBuffer[numBytesWrite++] = 'k';
  3641  0200  0854               	movf	_numBytesWrite^(0+384),w
  3642  0201  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3643  0202  0086               	movwf	6
  3644  0203  306B               	movlw	107
  3645  0204                     L2:	
  3646  0204  0081               	movwf	1
  3647  0205  0AD4               	incf	_numBytesWrite^(0+384),f
  3648                           
  3649                           ;app_device_cdc_basic.c: 195: writeBuffer[numBytesWrite++] = '\n';
  3650  0206  0854               	movf	_numBytesWrite^(0+384),w
  3651  0207  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3652  0208  0086               	movwf	6
  3653  0209  3002               	movlw	2	; select bank5/6
  3654  020A  0087               	movwf	7
  3655  020B  300A               	movlw	10
  3656  020C  0081               	movwf	1
  3657  020D  0AD4               	incf	_numBytesWrite^(0+384),f
  3658                           
  3659                           ;app_device_cdc_basic.c: 196: writeBuffer[numBytesWrite++] = '\r';
  3660  020E  0854               	movf	_numBytesWrite^(0+384),w
  3661  020F  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3662  0210  0086               	movwf	6
  3663  0211  300D               	movlw	13
  3664  0212  0081               	movwf	1
  3665  0213  0AD4               	incf	_numBytesWrite^(0+384),f
  3666                           
  3667                           ;app_device_cdc_basic.c: 197: };app_device_cdc_basic.c: 198: cmd_state = 0;
  3668  0214  01D2               	clrf	_cmd_state^(0+384)
  3669  0215                     l5089:	
  3670                           
  3671                           ;app_device_cdc_basic.c: 199: };app_device_cdc_basic.c: 200: };app_device_cdc_basic.c: 2
      +                          02: if (numBytesWrite > 0)
  3672  0215  0854               	movf	_numBytesWrite^(0+384),w
  3673  0216  1903               	btfsc	3,2
  3674  0217  2A1E               	goto	l5093
  3675                           
  3676                           ;app_device_cdc_basic.c: 203: {;app_device_cdc_basic.c: 207: putUSBUSART (writeBuffer, n
      +                          umBytesWrite);
  3677  0218  0854               	movf	_numBytesWrite^(0+384),w
  3678  0219  0021               	movlb	1	; select bank1
  3679  021A  00E0               	movwf	putUSBUSART@length^(0+128)
  3680  021B  30A0               	movlw	(low (_writeBuffer| (0+512)))& (0+255)
  3681  021C  3197  272F         	fcall	_putUSBUSART
  3682  021E                     l5093:	
  3683                           
  3684                           ;app_device_cdc_basic.c: 208: };app_device_cdc_basic.c: 210: CDCTxService();
  3685  021E  3184  2C51         	ljmp	l4545
  3686  0220                     __end_of_APP_DeviceCDCBasicDemoTasks:	
  3687  0220                     __ptext9:	
  3688 ;; *************** function _putrsUSBUSART *****************
  3689 ;; Defined at:
  3690 ;;		line 726 in file "usb/usb_device_cdc.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  data            2    0[BANK1 ] PTR const unsigned char 
  3693 ;;		 -> cmd_prompt(6), helloWorld(22), 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  pData           2    5[BANK1 ] PTR const unsigned char 
  3696 ;;		 -> cmd_prompt(6), helloWorld(22), 
  3697 ;;  len             1    7[BANK1 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3702 ;; Tracked objects:
  3703 ;;		On entry : 1F/1
  3704 ;;		On exit  : 1F/1
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3707 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3708 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3709 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  3710 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3711 ;;Total ram usage:        8 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:   10
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_APP_DeviceCDCBasicDemoTasks
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           
  3722                           ;psect for function _putrsUSBUSART
  3723  0220                     _putrsUSBUSART:	
  3724                           
  3725                           ;usb_device_cdc.c: 728: uint8_t len;;usb_device_cdc.c: 729: const const char *pData;;usb
      +                          _device_cdc.c: 754: {PIE2bits.USBIE = 0;};
  3726                           
  3727                           ;incstack = 0
  3728                           ; Regs used in _putrsUSBUSART: [wreg-fsr0h+status,2+status,0]
  3729  0220  1112               	bcf	18,2	;volatile
  3730                           
  3731                           ;usb_device_cdc.c: 755: if(cdc_trf_state != 0)
  3732  0221  0023               	movlb	3	; select bank3
  3733  0222  0857               	movf	_cdc_trf_state^(0+384),w
  3734  0223  1903               	btfsc	3,2
  3735  0224  2A28               	goto	l4525
  3736                           
  3737                           ;usb_device_cdc.c: 756: {;usb_device_cdc.c: 757: {PIE2bits.USBIE = 1;};
  3738  0225  0021               	movlb	1	; select bank1
  3739  0226  1512               	bsf	18,2	;volatile
  3740                           
  3741                           ;usb_device_cdc.c: 758: return;
  3742  0227  0008               	return
  3743  0228                     l4525:	
  3744                           
  3745                           ;usb_device_cdc.c: 759: };usb_device_cdc.c: 765: len = 0;
  3746  0228  0021               	movlb	1	; select bank1
  3747  0229  01E7               	clrf	putrsUSBUSART@len^(0+128)
  3748                           
  3749                           ;usb_device_cdc.c: 766: pData = data;
  3750  022A  0861               	movf	(putrsUSBUSART@data+1)^(0+128),w
  3751  022B  00E6               	movwf	(putrsUSBUSART@pData+1)^(0+128)
  3752  022C  0860               	movf	putrsUSBUSART@data^(0+128),w
  3753  022D  00E5               	movwf	putrsUSBUSART@pData^(0+128)
  3754  022E                     l4529:	
  3755                           
  3756                           ;usb_device_cdc.c: 768: {;usb_device_cdc.c: 769: len++;
  3757  022E  0AE7               	incf	putrsUSBUSART@len^(0+128),f
  3758                           
  3759                           ;usb_device_cdc.c: 770: if(len == 255) break;
  3760  022F  0F67               	incfsz	putrsUSBUSART@len^(0+128),w
  3761  0230  2A32               	goto	l4535
  3762  0231  2A3F               	goto	l4537
  3763  0232                     l4535:	
  3764                           
  3765                           ;usb_device_cdc.c: 771: }while(*pData++);
  3766  0232  0866               	movf	(putrsUSBUSART@pData+1)^(0+128),w
  3767  0233  00E3               	movwf	(??_putrsUSBUSART^(0+128)+1)
  3768  0234  0865               	movf	putrsUSBUSART@pData^(0+128),w
  3769  0235  00E2               	movwf	??_putrsUSBUSART^(0+128)
  3770  0236  0AE5               	incf	putrsUSBUSART@pData^(0+128),f
  3771  0237  1903               	skipnz
  3772  0238  0AE6               	incf	(putrsUSBUSART@pData+1)^(0+128),f
  3773  0239  0084               	movwf	4
  3774  023A  0863               	movf	(??_putrsUSBUSART+1)^(0+128),w
  3775  023B  0085               	movwf	5
  3776  023C  0012               	moviw fsr0++
  3777  023D  1D03               	btfss	3,2
  3778  023E  2A2E               	goto	l4529
  3779  023F                     l4537:	
  3780                           
  3781                           ;usb_device_cdc.c: 780: { pCDCSrc.bRom = (const uint8_t*)data; cdc_tx_len = len; cdc_mem
      +                          _type = 0x00; cdc_trf_state = 1; };
  3782  023F  0861               	movf	(putrsUSBUSART@data+1)^(0+128),w
  3783  0240  0023               	movlb	3	; select bank3
  3784  0241  00CA               	movwf	(_pCDCSrc+1)^(0+384)
  3785  0242  0021               	movlb	1	; select bank1
  3786  0243  0860               	movf	putrsUSBUSART@data^(0+128),w
  3787  0244  0023               	movlb	3	; select bank3
  3788  0245  00C9               	movwf	_pCDCSrc^(0+384)
  3789  0246  0021               	movlb	1	; select bank1
  3790  0247  0867               	movf	putrsUSBUSART@len^(0+128),w
  3791  0248  0023               	movlb	3	; select bank3
  3792  0249  00D6               	movwf	_cdc_tx_len^(0+384)
  3793  024A  01D5               	clrf	_cdc_mem_type^(0+384)
  3794  024B  01D7               	clrf	_cdc_trf_state^(0+384)
  3795  024C  0AD7               	incf	_cdc_trf_state^(0+384),f
  3796                           
  3797                           ;usb_device_cdc.c: 781: {PIE2bits.USBIE = 1;};
  3798  024D  0021               	movlb	1	; select bank1
  3799  024E  1512               	bsf	18,2	;volatile
  3800  024F  0008               	return
  3801  0250                     __end_of_putrsUSBUSART:	
  3802  0250                     __ptext12:	
  3803 ;; *************** function _ProcessCommand *****************
  3804 ;; Defined at:
  3805 ;;		line 217 in file "demo_src/app_device_cdc_basic.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  arg1            4   12[BANK2 ] unsigned long 
  3810 ;;  argc            1   11[BANK2 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      unsigned char 
  3813 ;; Registers used:
  3814 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 1F/3
  3817 ;;		On exit  : 1C/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;Total ram usage:       11 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:   11
  3827 ;; This function calls:
  3828 ;;		_WS2812b_Write
  3829 ;;		_hexatoi
  3830 ;;		_skip_white
  3831 ;; This function is called by:
  3832 ;;		_APP_DeviceCDCBasicDemoTasks
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function _ProcessCommand
  3838  0250                     _ProcessCommand:	
  3839                           
  3840                           ;app_device_cdc_basic.c: 219: uint8_t argc = 0;
  3841                           
  3842                           ;incstack = 0
  3843                           ; Regs used in _ProcessCommand: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3844  0250  0022               	movlb	2	; select bank2
  3845  0251  01EB               	clrf	ProcessCommand@argc^(0+256)
  3846                           
  3847                           ;app_device_cdc_basic.c: 220: uint32_t arg1;;app_device_cdc_basic.c: 222: p = 0;
  3848  0252  0023               	movlb	3	; select bank3
  3849  0253  01D1               	clrf	_p^(0+384)
  3850                           
  3851                           ;app_device_cdc_basic.c: 224: skip_white ();
  3852  0254  23B4  3180         	fcall	_skip_white
  3853                           
  3854                           ;app_device_cdc_basic.c: 225: if (p < cmd_length) {
  3855  0256  0853               	movf	_cmd_length^(0+384),w
  3856  0257  0251               	subwf	_p^(0+384),w
  3857  0258  1803               	skipnc
  3858  0259  2A5C               	goto	l4625
  3859                           
  3860                           ;app_device_cdc_basic.c: 226: argc++;
  3861  025A  0022               	movlb	2	; select bank2
  3862  025B  0AEB               	incf	ProcessCommand@argc^(0+256),f
  3863  025C                     l4625:	
  3864                           
  3865                           ;app_device_cdc_basic.c: 227: };app_device_cdc_basic.c: 228: arg1 = hexatoi ();
  3866  025C  2324  3180         	fcall	_hexatoi
  3867  025E  0863               	movf	(?_hexatoi+3)^(0+128),w
  3868  025F  0022               	movlb	2	; select bank2
  3869  0260  00EF               	movwf	(ProcessCommand@arg1+3)^(0+256)
  3870  0261  0021               	movlb	1	; select bank1
  3871  0262  0862               	movf	(?_hexatoi+2)^(0+128),w
  3872  0263  0022               	movlb	2	; select bank2
  3873  0264  00EE               	movwf	(ProcessCommand@arg1+2)^(0+256)
  3874  0265  0021               	movlb	1	; select bank1
  3875  0266  0861               	movf	(?_hexatoi+1)^(0+128),w
  3876  0267  0022               	movlb	2	; select bank2
  3877  0268  00ED               	movwf	(ProcessCommand@arg1+1)^(0+256)
  3878  0269  0021               	movlb	1	; select bank1
  3879  026A  0860               	movf	?_hexatoi^(0+128),w
  3880  026B  0022               	movlb	2	; select bank2
  3881  026C  00EC               	movwf	ProcessCommand@arg1^(0+256)
  3882                           
  3883                           ;app_device_cdc_basic.c: 230: if (argc >= 1) {
  3884  026D  086B               	movf	ProcessCommand@argc^(0+256),w
  3885  026E  1903               	btfsc	3,2
  3886  026F  2B03               	goto	l4647
  3887                           
  3888                           ;app_device_cdc_basic.c: 231: writeBuffer[numBytesWrite++] = tohex[(arg1 >> 20) & 0xf];
  3889  0270  0023               	movlb	3	; select bank3
  3890  0271  0854               	movf	_numBytesWrite^(0+384),w
  3891  0272  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3892  0273  0086               	movwf	6
  3893  0274  3002               	movlw	2	; select bank5/6
  3894  0275  0087               	movwf	7
  3895  0276  0022               	movlb	2	; select bank2
  3896  0277  086C               	movf	ProcessCommand@arg1^(0+256),w
  3897  0278  00E5               	movwf	??_ProcessCommand^(0+256)
  3898  0279  086D               	movf	(ProcessCommand@arg1+1)^(0+256),w
  3899  027A  00E6               	movwf	(??_ProcessCommand^(0+256)+1)
  3900  027B  086E               	movf	(ProcessCommand@arg1+2)^(0+256),w
  3901  027C  00E7               	movwf	(??_ProcessCommand^(0+256)+2)
  3902  027D  086F               	movf	(ProcessCommand@arg1+3)^(0+256),w
  3903  027E  00E8               	movwf	(??_ProcessCommand^(0+256)+3)
  3904  027F  3014               	movlw	20
  3905  0280                     u3365:	
  3906  0280  36E8               	lsrf	(??_ProcessCommand^(0+256)+3),f
  3907  0281  0CE7               	rrf	(??_ProcessCommand^(0+256)+2),f
  3908  0282  0CE6               	rrf	(??_ProcessCommand^(0+256)+1),f
  3909  0283  0CE5               	rrf	??_ProcessCommand^(0+256),f
  3910  0284  0B89               	decfsz	9,f
  3911  0285  2A80               	goto	u3365
  3912  0286  300F               	movlw	15
  3913  0287  0565               	andwf	??_ProcessCommand^(0+256),w
  3914  0288  00E9               	movwf	(??_ProcessCommand+4)^(0+256)
  3915  0289  30D3               	movlw	low (_tohex| (0+32768))
  3916  028A  01EA               	clrf	(??_ProcessCommand+5)^(0+256)
  3917  028B  0769               	addwf	(??_ProcessCommand+4)^(0+256),w
  3918  028C  0084               	movwf	4
  3919  028D  3098               	movlw	high (_tohex| (0+32768))
  3920  028E  3D6A               	addwfc	(??_ProcessCommand+5)^(0+256),w
  3921  028F  0085               	movwf	5
  3922  0290  0800               	movf	0,w	;code access
  3923  0291  0081               	movwf	1
  3924  0292  0023               	movlb	3	; select bank3
  3925  0293  0AD4               	incf	_numBytesWrite^(0+384),f
  3926                           
  3927                           ;app_device_cdc_basic.c: 232: writeBuffer[numBytesWrite++] = tohex[(arg1 >> 16) & 0xf];
  3928  0294  0854               	movf	_numBytesWrite^(0+384),w
  3929  0295  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3930  0296  0086               	movwf	6
  3931  0297  3002               	movlw	2	; select bank5/6
  3932  0298  0087               	movwf	7
  3933  0299  300F               	movlw	15
  3934  029A  0022               	movlb	2	; select bank2
  3935  029B  056E               	andwf	(ProcessCommand@arg1^(0+256)+2),w
  3936  029C  00E5               	movwf	??_ProcessCommand^(0+256)
  3937  029D  30D3               	movlw	low (_tohex| (0+32768))
  3938  029E  01E6               	clrf	(??_ProcessCommand+1)^(0+256)
  3939  029F  0765               	addwf	??_ProcessCommand^(0+256),w
  3940  02A0  0084               	movwf	4
  3941  02A1  3098               	movlw	high (_tohex| (0+32768))
  3942  02A2  3D66               	addwfc	(??_ProcessCommand+1)^(0+256),w
  3943  02A3  0085               	movwf	5
  3944  02A4  0800               	movf	0,w	;code access
  3945  02A5  0081               	movwf	1
  3946  02A6  0023               	movlb	3	; select bank3
  3947  02A7  0AD4               	incf	_numBytesWrite^(0+384),f
  3948                           
  3949                           ;app_device_cdc_basic.c: 233: writeBuffer[numBytesWrite++] = tohex[(arg1 >> 12) & 0xf];
  3950  02A8  0854               	movf	_numBytesWrite^(0+384),w
  3951  02A9  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3952  02AA  0086               	movwf	6
  3953  02AB  0022               	movlb	2	; select bank2
  3954  02AC  086D               	movf	(ProcessCommand@arg1+1)^(0+256),w
  3955  02AD  00E6               	movwf	(??_ProcessCommand^(0+256)+1)
  3956  02AE  086C               	movf	ProcessCommand@arg1^(0+256),w
  3957  02AF  00E5               	movwf	??_ProcessCommand^(0+256)
  3958  02B0  0E66               	swapf	(??_ProcessCommand^(0+256)+1),w
  3959  02B1  390F               	andlw	15
  3960  02B2  00E5               	movwf	??_ProcessCommand^(0+256)
  3961  02B3  300F               	movlw	15
  3962  02B4  01E6               	clrf	(??_ProcessCommand^(0+256)+1)
  3963  02B5  0565               	andwf	??_ProcessCommand^(0+256),w
  3964  02B6  00E7               	movwf	(??_ProcessCommand+2)^(0+256)
  3965  02B7  30D3               	movlw	low (_tohex| (0+32768))
  3966  02B8  01E8               	clrf	(??_ProcessCommand+3)^(0+256)
  3967  02B9  0767               	addwf	(??_ProcessCommand+2)^(0+256),w
  3968  02BA  0084               	movwf	4
  3969  02BB  3098               	movlw	high (_tohex| (0+32768))
  3970  02BC  3D68               	addwfc	(??_ProcessCommand+3)^(0+256),w
  3971  02BD  0085               	movwf	5
  3972  02BE  0800               	movf	0,w	;code access
  3973  02BF  0081               	movwf	1
  3974  02C0  0023               	movlb	3	; select bank3
  3975  02C1  0AD4               	incf	_numBytesWrite^(0+384),f
  3976                           
  3977                           ;app_device_cdc_basic.c: 234: writeBuffer[numBytesWrite++] = tohex[(arg1 >> 8) & 0xf];
  3978  02C2  0854               	movf	_numBytesWrite^(0+384),w
  3979  02C3  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  3980  02C4  0086               	movwf	6
  3981  02C5  300F               	movlw	15
  3982  02C6  0022               	movlb	2	; select bank2
  3983  02C7  056D               	andwf	(ProcessCommand@arg1^(0+256)+1),w
  3984  02C8  00E5               	movwf	??_ProcessCommand^(0+256)
  3985  02C9  30D3               	movlw	low (_tohex| (0+32768))
  3986  02CA  01E6               	clrf	(??_ProcessCommand+1)^(0+256)
  3987  02CB  0765               	addwf	??_ProcessCommand^(0+256),w
  3988  02CC  0084               	movwf	4
  3989  02CD  3098               	movlw	high (_tohex| (0+32768))
  3990  02CE  3D66               	addwfc	(??_ProcessCommand+1)^(0+256),w
  3991  02CF  0085               	movwf	5
  3992  02D0  0800               	movf	0,w	;code access
  3993  02D1  0081               	movwf	1
  3994  02D2  0023               	movlb	3	; select bank3
  3995  02D3  0AD4               	incf	_numBytesWrite^(0+384),f
  3996                           
  3997                           ;app_device_cdc_basic.c: 235: writeBuffer[numBytesWrite++] = tohex[(arg1 >> 4) & 0xf];
  3998  02D4  0854               	movf	_numBytesWrite^(0+384),w
  3999  02D5  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  4000  02D6  0086               	movwf	6
  4001  02D7  0022               	movlb	2	; select bank2
  4002  02D8  086D               	movf	(ProcessCommand@arg1+1)^(0+256),w
  4003  02D9  00E6               	movwf	(??_ProcessCommand^(0+256)+1)
  4004  02DA  086C               	movf	ProcessCommand@arg1^(0+256),w
  4005  02DB  00E5               	movwf	??_ProcessCommand^(0+256)
  4006  02DC  3004               	movlw	4
  4007  02DD                     u3375:	
  4008  02DD  36E6               	lsrf	(??_ProcessCommand^(0+256)+1),f
  4009  02DE  0CE5               	rrf	??_ProcessCommand^(0+256),f
  4010  02DF  0B89               	decfsz	9,f
  4011  02E0  2ADD               	goto	u3375
  4012  02E1  300F               	movlw	15
  4013  02E2  0565               	andwf	??_ProcessCommand^(0+256),w
  4014  02E3  00E7               	movwf	(??_ProcessCommand+2)^(0+256)
  4015  02E4  30D3               	movlw	low (_tohex| (0+32768))
  4016  02E5  01E8               	clrf	(??_ProcessCommand+3)^(0+256)
  4017  02E6  0767               	addwf	(??_ProcessCommand+2)^(0+256),w
  4018  02E7  0084               	movwf	4
  4019  02E8  3098               	movlw	high (_tohex| (0+32768))
  4020  02E9  3D68               	addwfc	(??_ProcessCommand+3)^(0+256),w
  4021  02EA  0085               	movwf	5
  4022  02EB  0800               	movf	0,w	;code access
  4023  02EC  0081               	movwf	1
  4024  02ED  0023               	movlb	3	; select bank3
  4025  02EE  0AD4               	incf	_numBytesWrite^(0+384),f
  4026                           
  4027                           ;app_device_cdc_basic.c: 236: writeBuffer[numBytesWrite++] = tohex[(arg1 >> 0) & 0xf];
  4028  02EF  0854               	movf	_numBytesWrite^(0+384),w
  4029  02F0  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  4030  02F1  0086               	movwf	6
  4031  02F2  3002               	movlw	2	; select bank5/6
  4032  02F3  0087               	movwf	7
  4033  02F4  300F               	movlw	15
  4034  02F5  0022               	movlb	2	; select bank2
  4035  02F6  056C               	andwf	ProcessCommand@arg1^(0+256),w
  4036  02F7  00E5               	movwf	??_ProcessCommand^(0+256)
  4037  02F8  30D3               	movlw	low (_tohex| (0+32768))
  4038  02F9  01E6               	clrf	(??_ProcessCommand+1)^(0+256)
  4039  02FA  0765               	addwf	??_ProcessCommand^(0+256),w
  4040  02FB  0084               	movwf	4
  4041  02FC  3098               	movlw	high (_tohex| (0+32768))
  4042  02FD  3D66               	addwfc	(??_ProcessCommand+1)^(0+256),w
  4043  02FE  0085               	movwf	5
  4044  02FF  0800               	movf	0,w	;code access
  4045  0300  0081               	movwf	1
  4046  0301  0023               	movlb	3	; select bank3
  4047  0302  0AD4               	incf	_numBytesWrite^(0+384),f
  4048  0303                     l4647:	
  4049                           
  4050                           ;app_device_cdc_basic.c: 237: };app_device_cdc_basic.c: 238: if (argc >= 1) {
  4051  0303  0022               	movlb	2	; select bank2
  4052  0304  086B               	movf	ProcessCommand@argc^(0+256),w
  4053  0305  1903               	btfsc	3,2
  4054  0306  3401               	retlw	1
  4055                           
  4056                           ;app_device_cdc_basic.c: 239: writeBuffer[numBytesWrite++] = '\n';
  4057  0307  0023               	movlb	3	; select bank3
  4058  0308  0854               	movf	_numBytesWrite^(0+384),w
  4059  0309  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  4060  030A  0086               	movwf	6
  4061  030B  3002               	movlw	2	; select bank5/6
  4062  030C  0087               	movwf	7
  4063  030D  300A               	movlw	10
  4064  030E  0081               	movwf	1
  4065  030F  0AD4               	incf	_numBytesWrite^(0+384),f
  4066                           
  4067                           ;app_device_cdc_basic.c: 240: writeBuffer[numBytesWrite++] = '\r';
  4068  0310  0854               	movf	_numBytesWrite^(0+384),w
  4069  0311  3EA0               	addlw	(low (_writeBuffer| (0+512)))& (0+255)
  4070  0312  0086               	movwf	6
  4071  0313  300D               	movlw	13
  4072  0314  0081               	movwf	1
  4073  0315  0AD4               	incf	_numBytesWrite^(0+384),f
  4074                           
  4075                           ;app_device_cdc_basic.c: 241: ledData[0] = arg1 >> 16;
  4076  0316  0022               	movlb	2	; select bank2
  4077  0317  086E               	movf	(ProcessCommand@arg1^(0+256)+2),w
  4078  0318  0023               	movlb	3	; select bank3
  4079  0319  00B8               	movwf	_ledData^(0+384)
  4080                           
  4081                           ;app_device_cdc_basic.c: 242: ledData[1] = arg1 >> 8;
  4082  031A  0022               	movlb	2	; select bank2
  4083  031B  086D               	movf	(ProcessCommand@arg1^(0+256)+1),w
  4084  031C  0023               	movlb	3	; select bank3
  4085  031D  00B9               	movwf	(_ledData^(0+384)+1)
  4086                           
  4087                           ;app_device_cdc_basic.c: 243: ledData[2] = arg1 >> 0;
  4088  031E  0022               	movlb	2	; select bank2
  4089  031F  086C               	movf	ProcessCommand@arg1^(0+256),w
  4090  0320  0023               	movlb	3	; select bank3
  4091  0321  00BA               	movwf	(_ledData^(0+384)+2)
  4092                           
  4093                           ;app_device_cdc_basic.c: 244: WS2812b_Write ();
  4094  0322  2054               	fcall	_WS2812b_Write
  4095                           
  4096                           ;app_device_cdc_basic.c: 245: return 0;
  4097  0323  3400               	retlw	0
  4098  0324                     __end_of_ProcessCommand:	
  4099                           ;app_device_cdc_basic.c: 246: };app_device_cdc_basic.c: 249: return 1;
  4100                           
  4101  0324                     __ptext14:	
  4102 ;; *************** function _hexatoi *****************
  4103 ;; Defined at:
  4104 ;;		line 274 in file "demo_src/app_device_cdc_basic.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  a               4    0[BANK2 ] unsigned long 
  4109 ;;  ch              1    4[BANK2 ] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  4    0[BANK1 ] unsigned long 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4114 ;; Tracked objects:
  4115 ;;		On entry : 1E/3
  4116 ;;		On exit  : 1F/1
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4119 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Totals:         0       0      16       5       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;Total ram usage:       21 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:   10
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_ProcessCommand
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function _hexatoi
  4135  0324                     _hexatoi:	
  4136                           
  4137                           ;app_device_cdc_basic.c: 276: uint8_t ch;;app_device_cdc_basic.c: 277: uint32_t a = 0;
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in _hexatoi: [wreg+fsr1l+fsr1h+status,2+status,0]
  4141  0324  0022               	movlb	2	; select bank2
  4142  0325  01E0               	clrf	hexatoi@a^(0+256)
  4143  0326  01E1               	clrf	(hexatoi@a+1)^(0+256)
  4144  0327  01E2               	clrf	(hexatoi@a+2)^(0+256)
  4145  0328  01E3               	clrf	(hexatoi@a+3)^(0+256)
  4146                           
  4147                           ;app_device_cdc_basic.c: 279: while ((p < cmd_length) && (cmd_buffer[p] != ' ')) {
  4148  0329  2B95               	goto	l4349
  4149  032A                     l4329:	
  4150                           
  4151                           ;app_device_cdc_basic.c: 280: ch = cmd_buffer[p];
  4152  032A  0851               	movf	_p^(0+384),w
  4153  032B  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  4154  032C  0086               	movwf	6
  4155  032D  3003               	movlw	3	; select bank6/7
  4156  032E  0087               	movwf	7
  4157  032F  0801               	movf	1,w
  4158  0330  0022               	movlb	2	; select bank2
  4159  0331  00E4               	movwf	hexatoi@ch^(0+256)
  4160                           
  4161                           ;app_device_cdc_basic.c: 281: if ((ch >= '0') && (ch <= '9')) {
  4162  0332  3030               	movlw	48
  4163  0333  0264               	subwf	hexatoi@ch^(0+256),w
  4164  0334  1C03               	skipc
  4165  0335  2B43               	goto	l4339
  4166  0336  303A               	movlw	58
  4167  0337  0264               	subwf	hexatoi@ch^(0+256),w
  4168  0338  1803               	skipnc
  4169  0339  2B43               	goto	l4339
  4170                           
  4171                           ;app_device_cdc_basic.c: 282: a = a << 4;
  4172  033A  3004               	movlw	4
  4173  033B                     u2895:	
  4174  033B  35E0               	lslf	hexatoi@a^(0+256),f
  4175  033C  0DE1               	rlf	(hexatoi@a+1)^(0+256),f
  4176  033D  0DE2               	rlf	(hexatoi@a+2)^(0+256),f
  4177  033E  0DE3               	rlf	(hexatoi@a+3)^(0+256),f
  4178  033F  0B89               	decfsz	9,f
  4179  0340  2B3B               	goto	u2895
  4180                           
  4181                           ;app_device_cdc_basic.c: 283: a = a + cmd_buffer[p] - '0';
  4182  0341  30D0               	movlw	208
  4183  0342  2B53               	goto	L3
  4184  0343                     l4339:	
  4185                           ;app_device_cdc_basic.c: 284: } else if ((ch >= 'a') && (ch <= 'f')) {
  4186                           
  4187  0343  3061               	movlw	97
  4188  0344  0264               	subwf	hexatoi@ch^(0+256),w
  4189  0345  1C03               	skipc
  4190  0346  2B93               	goto	l4347
  4191  0347  3067               	movlw	103
  4192  0348  0264               	subwf	hexatoi@ch^(0+256),w
  4193  0349  1803               	skipnc
  4194  034A  2B93               	goto	l4347
  4195                           
  4196                           ;app_device_cdc_basic.c: 285: a = a << 4;
  4197  034B  3004               	movlw	4
  4198  034C                     u2925:	
  4199  034C  35E0               	lslf	hexatoi@a^(0+256),f
  4200  034D  0DE1               	rlf	(hexatoi@a+1)^(0+256),f
  4201  034E  0DE2               	rlf	(hexatoi@a+2)^(0+256),f
  4202  034F  0DE3               	rlf	(hexatoi@a+3)^(0+256),f
  4203  0350  0B89               	decfsz	9,f
  4204  0351  2B4C               	goto	u2925
  4205                           
  4206                           ;app_device_cdc_basic.c: 286: a = a + cmd_buffer[p] - 'a' + 10;
  4207  0352  30A9               	movlw	169
  4208  0353                     L3:	
  4209  0353  0021               	movlb	1	; select bank1
  4210  0354  00E4               	movwf	??_hexatoi^(0+128)
  4211  0355  30FF               	movlw	255
  4212  0356  00E5               	movwf	(??_hexatoi^(0+128)+1)
  4213  0357  00E6               	movwf	(??_hexatoi^(0+128)+2)
  4214  0358  00E7               	movwf	(??_hexatoi^(0+128)+3)
  4215  0359  0022               	movlb	2	; select bank2
  4216  035A  0860               	movf	hexatoi@a^(0+256),w
  4217  035B  0021               	movlb	1	; select bank1
  4218  035C  00E8               	movwf	(??_hexatoi+4)^(0+128)
  4219  035D  0022               	movlb	2	; select bank2
  4220  035E  0861               	movf	(hexatoi@a+1)^(0+256),w
  4221  035F  0021               	movlb	1	; select bank1
  4222  0360  00E9               	movwf	((??_hexatoi+4)^(0+128)+1)
  4223  0361  0022               	movlb	2	; select bank2
  4224  0362  0862               	movf	(hexatoi@a+2)^(0+256),w
  4225  0363  0021               	movlb	1	; select bank1
  4226  0364  00EA               	movwf	((??_hexatoi+4)^(0+128)+2)
  4227  0365  0022               	movlb	2	; select bank2
  4228  0366  0863               	movf	(hexatoi@a+3)^(0+256),w
  4229  0367  0021               	movlb	1	; select bank1
  4230  0368  00EB               	movwf	((??_hexatoi+4)^(0+128)+3)
  4231  0369  0023               	movlb	3	; select bank3
  4232  036A  0851               	movf	_p^(0+384),w
  4233  036B  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  4234  036C  0086               	movwf	6
  4235  036D  3003               	movlw	3	; select bank6/7
  4236  036E  0087               	movwf	7
  4237  036F  0801               	movf	1,w
  4238  0370  0021               	movlb	1	; select bank1
  4239  0371  00EC               	movwf	(??_hexatoi+8)^(0+128)
  4240  0372  01ED               	clrf	((??_hexatoi+8)^(0+128)+1)
  4241  0373  01EE               	clrf	((??_hexatoi+8)^(0+128)+2)
  4242  0374  01EF               	clrf	((??_hexatoi+8)^(0+128)+3)
  4243  0375  07E8               	addwf	(??_hexatoi+4)^(0+128),f
  4244  0376  086D               	movf	(??_hexatoi+9)^(0+128),w
  4245  0377  3DE9               	addwfc	((??_hexatoi+4)^(0+128)+1),f
  4246  0378  086E               	movf	(??_hexatoi+10)^(0+128),w
  4247  0379  3DEA               	addwfc	((??_hexatoi+4)^(0+128)+2),f
  4248  037A  086F               	movf	(??_hexatoi+11)^(0+128),w
  4249  037B  3DEB               	addwfc	((??_hexatoi+4)^(0+128)+3),f
  4250  037C  0868               	movf	(??_hexatoi+4)^(0+128),w
  4251  037D  07E4               	addwf	??_hexatoi^(0+128),f
  4252  037E  0869               	movf	(??_hexatoi+5)^(0+128),w
  4253  037F  3DE5               	addwfc	(??_hexatoi^(0+128)+1),f
  4254  0380  086A               	movf	(??_hexatoi+6)^(0+128),w
  4255  0381  3DE6               	addwfc	(??_hexatoi^(0+128)+2),f
  4256  0382  086B               	movf	(??_hexatoi+7)^(0+128),w
  4257  0383  3DE7               	addwfc	(??_hexatoi^(0+128)+3),f
  4258  0384  0867               	movf	(??_hexatoi+3)^(0+128),w
  4259  0385  0022               	movlb	2	; select bank2
  4260  0386  00E3               	movwf	(hexatoi@a+3)^(0+256)
  4261  0387  0021               	movlb	1	; select bank1
  4262  0388  0866               	movf	(??_hexatoi+2)^(0+128),w
  4263  0389  0022               	movlb	2	; select bank2
  4264  038A  00E2               	movwf	(hexatoi@a+2)^(0+256)
  4265  038B  0021               	movlb	1	; select bank1
  4266  038C  0865               	movf	(??_hexatoi+1)^(0+128),w
  4267  038D  0022               	movlb	2	; select bank2
  4268  038E  00E1               	movwf	(hexatoi@a+1)^(0+256)
  4269  038F  0021               	movlb	1	; select bank1
  4270  0390  0864               	movf	??_hexatoi^(0+128),w
  4271  0391  0022               	movlb	2	; select bank2
  4272  0392  00E0               	movwf	hexatoi@a^(0+256)
  4273  0393                     l4347:	
  4274                           
  4275                           ;app_device_cdc_basic.c: 287: };app_device_cdc_basic.c: 288: p++;
  4276  0393  0023               	movlb	3	; select bank3
  4277  0394  0AD1               	incf	_p^(0+384),f
  4278  0395                     l4349:	
  4279  0395  0023               	movlb	3	; select bank3
  4280  0396  0853               	movf	_cmd_length^(0+384),w
  4281  0397  0251               	subwf	_p^(0+384),w
  4282  0398  1803               	skipnc
  4283  0399  2BA3               	goto	l4353
  4284  039A  0851               	movf	_p^(0+384),w
  4285  039B  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  4286  039C  0086               	movwf	6
  4287  039D  3003               	movlw	3	; select bank6/7
  4288  039E  0087               	movwf	7
  4289  039F  3020               	movlw	32
  4290  03A0  0601               	xorwf	1,w
  4291  03A1  1D03               	btfss	3,2
  4292  03A2  2B2A               	goto	l4329
  4293  03A3                     l4353:	
  4294                           
  4295                           ;app_device_cdc_basic.c: 289: };app_device_cdc_basic.c: 291: return a;
  4296  03A3  0022               	movlb	2	; select bank2
  4297  03A4  0863               	movf	(hexatoi@a+3)^(0+256),w
  4298  03A5  0021               	movlb	1	; select bank1
  4299  03A6  00E3               	movwf	(?_hexatoi+3)^(0+128)
  4300  03A7  0022               	movlb	2	; select bank2
  4301  03A8  0862               	movf	(hexatoi@a+2)^(0+256),w
  4302  03A9  0021               	movlb	1	; select bank1
  4303  03AA  00E2               	movwf	(?_hexatoi+2)^(0+128)
  4304  03AB  0022               	movlb	2	; select bank2
  4305  03AC  0861               	movf	(hexatoi@a+1)^(0+256),w
  4306  03AD  0021               	movlb	1	; select bank1
  4307  03AE  00E1               	movwf	(?_hexatoi+1)^(0+128)
  4308  03AF  0022               	movlb	2	; select bank2
  4309  03B0  0860               	movf	hexatoi@a^(0+256),w
  4310  03B1  0021               	movlb	1	; select bank1
  4311  03B2  00E0               	movwf	?_hexatoi^(0+128)
  4312  03B3  0008               	return
  4313  03B4                     __end_of_hexatoi:	
  4314  03B4                     __ptext13:	
  4315 ;; *************** function _skip_white *****************
  4316 ;; Defined at:
  4317 ;;		line 253 in file "demo_src/app_device_cdc_basic.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 1F/3
  4328 ;;		On exit  : 1F/3
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4335 ;;Total ram usage:        0 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:   10
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_ProcessCommand
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           
  4346                           ;psect for function _skip_white
  4347  03B4                     _skip_white:	
  4348  03B4                     l4323:	
  4349                           ;app_device_cdc_basic.c: 255: while ((p < cmd_length) && (cmd_buffer[p] == ' ')) {
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _skip_white: [wreg+fsr1l+fsr1h+status,2+status,0]
  4353                           
  4354  03B4  0853               	movf	_cmd_length^(0+384),w
  4355  03B5  0251               	subwf	_p^(0+384),w
  4356  03B6  1803               	skipnc
  4357  03B7  0008               	return
  4358  03B8  0851               	movf	_p^(0+384),w
  4359  03B9  3E20               	addlw	(low (_cmd_buffer| (0+768)))& (0+255)
  4360  03BA  0086               	movwf	6
  4361  03BB  3003               	movlw	3	; select bank6/7
  4362  03BC  0087               	movwf	7
  4363  03BD  3020               	movlw	32
  4364  03BE  0601               	xorwf	1,w
  4365  03BF  1D03               	btfss	3,2
  4366  03C0  0008               	return
  4367                           
  4368                           ;app_device_cdc_basic.c: 256: p++;
  4369  03C1  0AD1               	incf	_p^(0+384),f
  4370  03C2  2BB4               	goto	l4323
  4371  03C3                     __end_of_skip_white:	
  4372  03C3                     __ptext4:	
  4373 ;; *************** function _SYSTEM_Initialize *****************
  4374 ;; Defined at:
  4375 ;;		line 82 in file "system.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  state           1    wreg     enum E2186
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  state           1    2[BANK1 ] enum E2186
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : B1F/0
  4386 ;;		On exit  : 1D/1
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;Total ram usage:        1 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:   12
  4396 ;; This function calls:
  4397 ;;		_BUTTON_Enable
  4398 ;;		_LED_Enable
  4399 ;; This function is called by:
  4400 ;;		_main
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           
  4405                           ;psect for function _SYSTEM_Initialize
  4406  03C3                     _SYSTEM_Initialize:	
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4410                           ;SYSTEM_Initialize@state stored from wreg
  4411  03C3  0021               	movlb	1	; select bank1
  4412  03C4  00E2               	movwf	SYSTEM_Initialize@state^(0+128)
  4413                           
  4414                           ; Switch size 1, requested type "speed"
  4415                           ; Number of cases is 3, Range of values is 0 to 2
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte           10     6 (average)
  4419                           ; direct_byte           12     6 (fixed)
  4420                           ; jumptable            260     6 (fixed)
  4421                           ;	Chosen strategy is simple_byte
  4422                           
  4423                           ;system.c: 98: break;
  4424                           
  4425                           ;system.c: 84: switch(state)
  4426  03C5  3A00               	xorlw	0	; case 0
  4427  03C6  1903               	skipnz
  4428  03C7  2BCF               	goto	l4955
  4429  03C8  3A01               	xorlw	1	; case 1
  4430  03C9  1903               	skipnz
  4431  03CA  2BE6               	goto	l680
  4432  03CB  3A03               	xorlw	3	; case 2
  4433  03CC  1903               	skipnz
  4434  03CD  2BE6               	goto	l680
  4435  03CE  2BE6               	goto	l680
  4436  03CF                     l4955:	
  4437                           
  4438                           ;system.c: 90: OSCCON = 0xFC;
  4439  03CF  30FC               	movlw	252
  4440  03D0  0099               	movwf	25	;volatile
  4441                           
  4442                           ;system.c: 91: ACTCON = 0x90;
  4443  03D1  3090               	movlw	144
  4444  03D2  0027               	movlb	7	; select bank7
  4445  03D3  009B               	movwf	27	;volatile
  4446                           
  4447                           ;system.c: 93: LED_Enable(LED_D1);
  4448  03D4  3001               	movlw	1
  4449  03D5  3197  2746  3180   	fcall	_LED_Enable
  4450                           
  4451                           ;system.c: 94: LED_Enable(LED_D2);
  4452  03D8  3002               	movlw	2
  4453  03D9  3197  2746  3180   	fcall	_LED_Enable
  4454                           
  4455                           ;system.c: 95: LED_Enable(LED_D3);
  4456  03DC  3003               	movlw	3
  4457  03DD  3197  2746  3180   	fcall	_LED_Enable
  4458                           
  4459                           ;system.c: 96: LED_Enable(LED_D4);
  4460  03E0  3004               	movlw	4
  4461  03E1  3197  2746         	fcall	_LED_Enable
  4462                           
  4463                           ;system.c: 97: BUTTON_Enable(BUTTON_S1);
  4464  03E3  3001               	movlw	1
  4465  03E4  3187  2FEA         	ljmp	_BUTTON_Enable
  4466  03E6                     l680:	
  4467  03E6  0008               	return
  4468  03E7                     __end_of_SYSTEM_Initialize:	
  4469  03E7                     __ptext3:	
  4470 ;; *************** function _USBDeviceAttach *****************
  4471 ;; Defined at:
  4472 ;;		line 1352 in file "usb/usb_device.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 1F/0
  4483 ;;		On exit  : 1F/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:   10
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _USBDeviceAttach
  4502  03E7                     _USBDeviceAttach:	
  4503                           
  4504                           ;usb_device.c: 1356: {;usb_device.c: 1357: if(1 == 1)
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in _USBDeviceAttach: [wreg+status,2+status,0]
  4508  03E7  086F               	movf	_USBDeviceState,w	;volatile
  4509  03E8  1D03               	btfss	3,2
  4510  03E9  0008               	return
  4511                           
  4512                           ;usb_device.c: 1358: {;usb_device.c: 1360: UCON = 0;
  4513  03EA  003D               	movlb	29	; select bank29
  4514  03EB  018E               	clrf	14	;volatile
  4515                           
  4516                           ;usb_device.c: 1363: UIE = 0;
  4517  03EC  0192               	clrf	18	;volatile
  4518                           
  4519                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  4520  03ED  3016               	movlw	22
  4521  03EE  0091               	movwf	17	;volatile
  4522  03EF  309F               	movlw	159
  4523  03F0  0097               	movwf	23	;volatile
  4524  03F1  307B               	movlw	123
  4525  03F2  0092               	movwf	18	;volatile
  4526                           
  4527                           ;usb_device.c: 1369: {PIE2bits.USBIE = 1;INTCONbits.PEIE = 1; INTCONbits.GIE = 1;};
  4528  03F3  0021               	movlb	1	; select bank1
  4529  03F4  1512               	bsf	18,2	;volatile
  4530  03F5  170B               	bsf	11,6	;volatile
  4531  03F6  178B               	bsf	11,7	;volatile
  4532  03F7                     l301:	
  4533                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  4534                           
  4535  03F7  003D               	movlb	29	; select bank29
  4536  03F8  198E               	btfsc	14,3	;volatile
  4537  03F9  2BFC               	goto	l4951
  4538  03FA  158E               	bsf	14,3	;volatile
  4539  03FB  2BF7               	goto	l301
  4540  03FC                     l4951:	
  4541                           
  4542                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  4543  03FC  3001               	movlw	1
  4544  03FD  0020               	movlb	0	; select bank0
  4545  03FE  00EF               	movwf	_USBDeviceState	;volatile
  4546  03FF  0008               	return
  4547  0400                     __end_of_USBDeviceAttach:	
  4548  0400                     __ptext1:	
  4549 ;; *************** function _WS2812b_Init *****************
  4550 ;; Defined at:
  4551 ;;		line 28 in file "bsp/ws2812b.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		None
  4560 ;; Tracked objects:
  4561 ;;		On entry : 1D/1
  4562 ;;		On exit  : 1F/1
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:   10
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_main
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           
  4580                           ;psect for function _WS2812b_Init
  4581  0400                     _WS2812b_Init:	
  4582                           
  4583                           ;ws2812b.c: 30: LATCbits.LATC2 = 0;
  4584                           
  4585                           ;incstack = 0
  4586                           ; Regs used in _WS2812b_Init: []
  4587  0400  0022               	movlb	2	; select bank2
  4588  0401  110E               	bcf	14,2	;volatile
  4589                           
  4590                           ;ws2812b.c: 31: TRISCbits.TRISC2 = 0;
  4591  0402  0021               	movlb	1	; select bank1
  4592  0403  110E               	bcf	14,2	;volatile
  4593  0404  0008               	return
  4594  0405                     __end_of_WS2812b_Init:	
  4595                           
  4596                           	psect	bssBANK0
  4597  006F                     __pbssBANK0:	
  4598  006F                     _USBDeviceState:	
  4599  006F                     	ds	1
  4600                           
  4601                           	psect	bssBANK3
  4602  01A0                     __pbssBANK3:	
  4603  01A0                     _outPipes:	
  4604  01A0                     	ds	7
  4605  01A7                     _pBDTEntryIn:	
  4606  01A7                     	ds	6
  4607  01AD                     _pBDTEntryOut:	
  4608  01AD                     	ds	6
  4609  01B3                     _inPipes:	
  4610  01B3                     	ds	5
  4611  01B8                     _ledData:	
  4612  01B8                     	ds	3
  4613  01BB                     _ep_data_out:	
  4614  01BB                     	ds	3
  4615  01BE                     _ep_data_in:	
  4616  01BE                     	ds	3
  4617  01C1                     APP_LEDUpdateUSBStatus@ledCount:	
  4618  01C1                     	ds	2
  4619  01C3                     _CDCDataInHandle:	
  4620  01C3                     	ds	2
  4621  01C5                     _CDCDataOutHandle:	
  4622  01C5                     	ds	2
  4623  01C7                     _pCDCDst:	
  4624  01C7                     	ds	2
  4625  01C9                     _pCDCSrc:	
  4626  01C9                     	ds	2
  4627  01CB                     _pBDTEntryEP0OutNext:	
  4628  01CB                     	ds	2
  4629  01CD                     _timer:	
  4630  01CD                     	ds	2
  4631  01CF                     _state1:	
  4632  01CF                     	ds	2
  4633  01D1                     _p:	
  4634  01D1                     	ds	1
  4635  01D2                     _cmd_state:	
  4636  01D2                     	ds	1
  4637  01D3                     _cmd_length:	
  4638  01D3                     	ds	1
  4639  01D4                     _numBytesWrite:	
  4640  01D4                     	ds	1
  4641  01D5                     _cdc_mem_type:	
  4642  01D5                     	ds	1
  4643  01D6                     _cdc_tx_len:	
  4644  01D6                     	ds	1
  4645  01D7                     _cdc_trf_state:	
  4646  01D7                     	ds	1
  4647  01D8                     _cdc_rx_len:	
  4648  01D8                     	ds	1
  4649  01D9                     _USBTicksSinceSuspendEnd:	
  4650  01D9                     	ds	1
  4651  01DA                     _USBDeferOUTDataStagePackets:	
  4652  01DA                     	ds	1
  4653  01DB                     _USBDeferINDataStagePackets:	
  4654  01DB                     	ds	1
  4655  01DC                     _USBStatusStageEnabledFlag2:	
  4656  01DC                     	ds	1
  4657  01DD                     _USBStatusStageEnabledFlag1:	
  4658  01DD                     	ds	1
  4659  01DE                     _USBDeferStatusStagePacket:	
  4660  01DE                     	ds	1
  4661  01DF                     _USBStatusStageTimeoutCounter:	
  4662  01DF                     	ds	1
  4663  01E0                     _BothEP0OutUOWNsSet:	
  4664  01E0                     	ds	1
  4665  01E1                     _endpoint_number:	
  4666  01E1                     	ds	1
  4667  01E2                     _USBBusIsSuspended:	
  4668  01E2                     	ds	1
  4669  01E3                     _RemoteWakeup:	
  4670  01E3                     	ds	1
  4671  01E4                     _pDst:	
  4672  01E4                     	ds	1
  4673  01E5                     _controlTransferState:	
  4674  01E5                     	ds	1
  4675  01E6                     _shortPacketStatus:	
  4676  01E6                     	ds	1
  4677  01E7                     _pBDTEntryEP0OutCurrent:	
  4678  01E7                     	ds	1
  4679  01E8                     _USBAlternateInterface:	
  4680  01E8                     	ds	2
  4681  01EA                     _USTATcopy:	
  4682  01EA                     	ds	1
  4683  01EB                     _USBActiveConfiguration:	
  4684  01EB                     	ds	1
  4685                           
  4686                           	psect	dataBANK3
  4687  01EC                     __pdataBANK3:	
  4688  01EC                     app_device_cdc_basic@timer:	
  4689  01EC                     	ds	1
  4690  01ED                     _first:	
  4691  01ED                     	ds	1
  4692                           
  4693                           	psect	bssBANK4
  4694  0220                     __pbssBANK4:	
  4695  0220                     _USB1msTickCount:	
  4696  0220                     	ds	4
  4697  0224                     _dummy_encapsulated_cmd_response:	
  4698  0224                     	ds	8
  4699  022C                     _line_coding:	
  4700  022C                     	ds	7
  4701                           
  4702                           	psect	bssBANK5
  4703  02A0                     __pbssBANK5:	
  4704  02A0                     _writeBuffer:	
  4705  02A0                     	ds	64
  4706                           
  4707                           	psect	bssBANK6
  4708  0320                     __pbssBANK6:	
  4709  0320                     _cmd_buffer:	
  4710  0320                     	ds	72
  4711                           
  4712                           	psect	bssBANK7
  4713  03A0                     __pbssBANK7:	
  4714  03A0                     _readBuffer:	
  4715  03A0                     	ds	64
  4716                           
  4717                           	psect	clrtext
  4718  06F9                     clear_ram0:	
  4719                           ;	Called with FSR0 containing the base address, and
  4720                           ;	WREG with the size to clear
  4721                           
  4722  06F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  4723  06FA                     clrloop0:	
  4724  06FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  4725  06FB  3101               	addfsr 0,1
  4726  06FC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4727  06FD  2EFA               	goto	clrloop0	;have we reached the end yet?
  4728  06FE  3400               	retlw	0	;all done for this memory range, return
  4729                           
  4730                           	psect	cstackBANK3
  4731  01EE                     __pcstackBANK3:	
  4732  01EE                     APP_DeviceCDCBasicDemoTasks@numBytesRead:	
  4733                           
  4734                           ; 1 bytes @ 0x0
  4735  01EE                     	ds	1
  4736  01EF                     APP_DeviceCDCBasicDemoTasks@ch:	
  4737                           
  4738                           ; 1 bytes @ 0x1
  4739  01EF                     	ds	1
  4740                           
  4741                           	psect	cstackBANK2
  4742  0160                     __pcstackBANK2:	
  4743  0160                     hexatoi@a:	
  4744                           
  4745                           ; 4 bytes @ 0x0
  4746  0160                     	ds	4
  4747  0164                     hexatoi@ch:	
  4748                           
  4749                           ; 1 bytes @ 0x4
  4750  0164                     	ds	1
  4751  0165                     ??_ProcessCommand:	
  4752                           
  4753                           ; 1 bytes @ 0x5
  4754  0165                     	ds	6
  4755  016B                     ProcessCommand@argc:	
  4756                           
  4757                           ; 1 bytes @ 0xB
  4758  016B                     	ds	1
  4759  016C                     ProcessCommand@arg1:	
  4760                           
  4761                           ; 4 bytes @ 0xC
  4762  016C                     	ds	4
  4763                           
  4764                           	psect	cstackBANK1
  4765  00E0                     __pcstackBANK1:	
  4766  00E0                     ??_skip_white:	
  4767  00E0                     ??_WS2812b_Write:	
  4768                           ; 1 bytes @ 0x0
  4769                           
  4770  00E0                     ??_WS2812b_Init:	
  4771                           ; 1 bytes @ 0x0
  4772                           
  4773  00E0                     ??_LED_Off:	
  4774                           ; 1 bytes @ 0x0
  4775                           
  4776  00E0                     ??_BUTTON_Enable:	
  4777                           ; 1 bytes @ 0x0
  4778                           
  4779  00E0                     ??_USBDeviceInit:	
  4780                           ; 1 bytes @ 0x0
  4781                           
  4782  00E0                     ??_USBDeviceAttach:	
  4783                           ; 1 bytes @ 0x0
  4784                           
  4785  00E0                     ?_putUSBUSART:	
  4786                           ; 1 bytes @ 0x0
  4787                           
  4788  00E0                     ?_putrsUSBUSART:	
  4789                           ; 1 bytes @ 0x0
  4790                           
  4791  00E0                     ?_USBTransferOnePacket:	
  4792                           ; 1 bytes @ 0x0
  4793                           
  4794  00E0                     ?_hexatoi:	
  4795                           ; 2 bytes @ 0x0
  4796                           
  4797  00E0                     LED_Off@led:	
  4798                           ; 4 bytes @ 0x0
  4799                           
  4800  00E0                     BUTTON_Enable@button:	
  4801                           ; 1 bytes @ 0x0
  4802                           
  4803  00E0                     USBTransferOnePacket@dir:	
  4804                           ; 1 bytes @ 0x0
  4805                           
  4806  00E0                     putUSBUSART@length:	
  4807                           ; 1 bytes @ 0x0
  4808                           
  4809  00E0                     WS2812b_Write@i:	
  4810                           ; 1 bytes @ 0x0
  4811                           
  4812  00E0                     USBDeviceInit@p:	
  4813                           ; 1 bytes @ 0x0
  4814                           
  4815  00E0                     putrsUSBUSART@data:	
  4816                           ; 2 bytes @ 0x0
  4817                           
  4818                           
  4819                           ; 2 bytes @ 0x0
  4820  00E0                     	ds	1
  4821  00E1                     ??_LED_Enable:	
  4822  00E1                     ??_putUSBUSART:	
  4823                           ; 1 bytes @ 0x1
  4824                           
  4825  00E1                     LED_Enable@led:	
  4826                           ; 1 bytes @ 0x1
  4827                           
  4828  00E1                     putUSBUSART@data:	
  4829                           ; 1 bytes @ 0x1
  4830                           
  4831  00E1                     WS2812b_Write@a:	
  4832                           ; 1 bytes @ 0x1
  4833                           
  4834  00E1                     USBTransferOnePacket@data:	
  4835                           ; 1 bytes @ 0x1
  4836                           
  4837                           
  4838                           ; 2 bytes @ 0x1
  4839  00E1                     	ds	1
  4840  00E2                     ??_SYSTEM_Initialize:	
  4841  00E2                     ??_putrsUSBUSART:	
  4842                           ; 1 bytes @ 0x2
  4843                           
  4844  00E2                     USBDeviceInit@i_868:	
  4845                           ; 1 bytes @ 0x2
  4846                           
  4847  00E2                     SYSTEM_Initialize@state:	
  4848                           ; 1 bytes @ 0x2
  4849                           
  4850                           
  4851                           ; 1 bytes @ 0x2
  4852  00E2                     	ds	1
  4853  00E3                     USBDeviceInit@i:	
  4854  00E3                     USBTransferOnePacket@len:	
  4855                           ; 1 bytes @ 0x3
  4856                           
  4857                           
  4858                           ; 1 bytes @ 0x3
  4859  00E3                     	ds	1
  4860  00E4                     ??_USBTransferOnePacket:	
  4861  00E4                     ??_hexatoi:	
  4862                           ; 1 bytes @ 0x4
  4863                           
  4864                           
  4865                           ; 1 bytes @ 0x4
  4866  00E4                     	ds	1
  4867  00E5                     putrsUSBUSART@pData:	
  4868                           
  4869                           ; 2 bytes @ 0x5
  4870  00E5                     	ds	2
  4871  00E7                     putrsUSBUSART@len:	
  4872                           
  4873                           ; 1 bytes @ 0x7
  4874  00E7                     	ds	1
  4875  00E8                     USBTransferOnePacket@ep:	
  4876                           
  4877                           ; 1 bytes @ 0x8
  4878  00E8                     	ds	1
  4879  00E9                     USBTransferOnePacket@handle:	
  4880                           
  4881                           ; 2 bytes @ 0x9
  4882  00E9                     	ds	2
  4883  00EB                     ?_getsUSBUSART:	
  4884  00EB                     ??_CDCTxService:	
  4885                           ; 1 bytes @ 0xB
  4886                           
  4887  00EB                     getsUSBUSART@len:	
  4888                           ; 1 bytes @ 0xB
  4889                           
  4890  00EB                     CDCTxService@i:	
  4891                           ; 1 bytes @ 0xB
  4892                           
  4893                           
  4894                           ; 1 bytes @ 0xB
  4895  00EB                     	ds	1
  4896  00EC                     ??_getsUSBUSART:	
  4897  00EC                     CDCTxService@byte_to_send:	
  4898                           ; 1 bytes @ 0xC
  4899                           
  4900                           
  4901                           ; 1 bytes @ 0xC
  4902  00EC                     	ds	1
  4903  00ED                     getsUSBUSART@buffer:	
  4904                           
  4905                           ; 1 bytes @ 0xD
  4906  00ED                     	ds	3
  4907  00F0                     ??_APP_DeviceCDCBasicDemoTasks:	
  4908  00F0                     ??_main:	
  4909                           ; 1 bytes @ 0x10
  4910                           
  4911                           
  4912                           	psect	cstackCOMMON
  4913  0070                     __pcstackCOMMON:	
  4914                           ; 1 bytes @ 0x10
  4915                           
  4916  0070                     ?_USBWakeFromSuspend:	
  4917  0070                     ?_USBSuspend:	
  4918                           ; 1 bytes @ 0x0
  4919                           
  4920  0070                     ?_USBIncrement1msInternalTimers:	
  4921                           ; 1 bytes @ 0x0
  4922                           
  4923  0070                     ??_USBIncrement1msInternalTimers:	
  4924                           ; 1 bytes @ 0x0
  4925                           
  4926  0070                     ?_USBCtrlEPAllowStatusStage:	
  4927                           ; 1 bytes @ 0x0
  4928                           
  4929  0070                     ??_USBCtrlEPAllowStatusStage:	
  4930                           ; 1 bytes @ 0x0
  4931                           
  4932  0070                     ?_USBStallHandler:	
  4933                           ; 1 bytes @ 0x0
  4934                           
  4935  0070                     ??_USBStallHandler:	
  4936                           ; 1 bytes @ 0x0
  4937                           
  4938  0070                     ?_USBCtrlEPService:	
  4939                           ; 1 bytes @ 0x0
  4940                           
  4941  0070                     ?_USBConfigureEndpoint:	
  4942                           ; 1 bytes @ 0x0
  4943                           
  4944  0070                     ?_USBCtrlTrfTxService:	
  4945                           ; 1 bytes @ 0x0
  4946                           
  4947  0070                     ??_USBCtrlTrfTxService:	
  4948                           ; 1 bytes @ 0x0
  4949                           
  4950  0070                     ?_USBCtrlTrfSetupHandler:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0070                     ?_USBCtrlTrfOutHandler:	
  4954                           ; 1 bytes @ 0x0
  4955                           
  4956  0070                     ?_USBCtrlTrfInHandler:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0070                     ?_USBCheckStdRequest:	
  4960                           ; 1 bytes @ 0x0
  4961                           
  4962  0070                     ?_USBStdFeatureReqHandler:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0070                     ?_APP_LEDUpdateUSBStatus:	
  4966                           ; 1 bytes @ 0x0
  4967                           
  4968  0070                     ?_APP_UpdateTimers:	
  4969                           ; 1 bytes @ 0x0
  4970                           
  4971  0070                     ??_APP_UpdateTimers:	
  4972                           ; 1 bytes @ 0x0
  4973                           
  4974  0070                     ?_SYSTEM_Initialize:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0070                     ?_APP_DeviceCDCBasicDemoInitialize:	
  4978                           ; 1 bytes @ 0x0
  4979                           
  4980  0070                     ??_APP_DeviceCDCBasicDemoInitialize:	
  4981                           ; 1 bytes @ 0x0
  4982                           
  4983  0070                     ?_ProcessCommand:	
  4984                           ; 1 bytes @ 0x0
  4985                           
  4986  0070                     ?_skip_white:	
  4987                           ; 1 bytes @ 0x0
  4988                           
  4989  0070                     ?_WS2812b_Write:	
  4990                           ; 1 bytes @ 0x0
  4991                           
  4992  0070                     ?_WS2812b_Init:	
  4993                           ; 1 bytes @ 0x0
  4994                           
  4995  0070                     ?_LED_On:	
  4996                           ; 1 bytes @ 0x0
  4997                           
  4998  0070                     ??_LED_On:	
  4999                           ; 1 bytes @ 0x0
  5000                           
  5001  0070                     ?_LED_Off:	
  5002                           ; 1 bytes @ 0x0
  5003                           
  5004  0070                     ?_LED_Enable:	
  5005                           ; 1 bytes @ 0x0
  5006                           
  5007  0070                     ?_BUTTON_UpdateStates:	
  5008                           ; 1 bytes @ 0x0
  5009                           
  5010  0070                     ??_BUTTON_UpdateStates:	
  5011                           ; 1 bytes @ 0x0
  5012                           
  5013  0070                     ?_BUTTON_Enable:	
  5014                           ; 1 bytes @ 0x0
  5015                           
  5016  0070                     ?_USBDeviceInit:	
  5017                           ; 1 bytes @ 0x0
  5018                           
  5019  0070                     ?_USBDeviceTasks:	
  5020                           ; 1 bytes @ 0x0
  5021                           
  5022  0070                     ?_USBDeviceAttach:	
  5023                           ; 1 bytes @ 0x0
  5024                           
  5025  0070                     ?_USBCtrlEPAllowDataStage:	
  5026                           ; 1 bytes @ 0x0
  5027                           
  5028  0070                     ?_USBCtrlEPServiceComplete:	
  5029                           ; 1 bytes @ 0x0
  5030                           
  5031  0070                     ?_USBCtrlTrfRxService:	
  5032                           ; 1 bytes @ 0x0
  5033                           
  5034  0070                     ?_USBStdSetCfgHandler:	
  5035                           ; 1 bytes @ 0x0
  5036                           
  5037  0070                     ?_USBStdGetDscHandler:	
  5038                           ; 1 bytes @ 0x0
  5039                           
  5040  0070                     ??_USBStdGetDscHandler:	
  5041                           ; 1 bytes @ 0x0
  5042                           
  5043  0070                     ?_USBStdGetStatusHandler:	
  5044                           ; 1 bytes @ 0x0
  5045                           
  5046  0070                     ??_USBStdGetStatusHandler:	
  5047                           ; 1 bytes @ 0x0
  5048                           
  5049  0070                     ?_USBCheckCDCRequest:	
  5050                           ; 1 bytes @ 0x0
  5051                           
  5052  0070                     ??_USBCheckCDCRequest:	
  5053                           ; 1 bytes @ 0x0
  5054                           
  5055  0070                     ?_CDCInitEP:	
  5056                           ; 1 bytes @ 0x0
  5057                           
  5058  0070                     ?_CDCTxService:	
  5059                           ; 1 bytes @ 0x0
  5060                           
  5061  0070                     ?_SYS_InterruptHigh:	
  5062                           ; 1 bytes @ 0x0
  5063                           
  5064  0070                     ?_APP_DeviceCDCBasicDemoTasks:	
  5065                           ; 1 bytes @ 0x0
  5066                           
  5067  0070                     ?_main:	
  5068                           ; 1 bytes @ 0x0
  5069                           
  5070  0070                     ?i1_LED_Off:	
  5071                           ; 1 bytes @ 0x0
  5072                           
  5073  0070                     ??i1_LED_Off:	
  5074                           ; 1 bytes @ 0x0
  5075                           
  5076  0070                     ?i1_LED_Enable:	
  5077                           ; 1 bytes @ 0x0
  5078                           
  5079  0070                     ?i1_BUTTON_Enable:	
  5080                           ; 1 bytes @ 0x0
  5081                           
  5082  0070                     ??i1_BUTTON_Enable:	
  5083                           ; 1 bytes @ 0x0
  5084                           
  5085  0070                     ?i1_USBDeviceInit:	
  5086                           ; 1 bytes @ 0x0
  5087                           
  5088  0070                     ??i1_USBDeviceInit:	
  5089                           ; 1 bytes @ 0x0
  5090                           
  5091  0070                     ?i1_SYSTEM_Initialize:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  0070                     ?_memset:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  0070                     ?i1_USBTransferOnePacket:	
  5098                           ; 2 bytes @ 0x0
  5099                           
  5100  0070                     LED_On@led:	
  5101                           ; 2 bytes @ 0x0
  5102                           
  5103  0070                     USBConfigureEndpoint@direction:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  0070                     i1LED_Off@led:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  0070                     i1BUTTON_Enable@button:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  0070                     i1USBTransferOnePacket@dir:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  0070                     USBStdGetStatusHandler@p:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     memset@p1:	
  5119                           ; 2 bytes @ 0x0
  5120                           
  5121  0070                     i1USBDeviceInit@p:	
  5122                           ; 2 bytes @ 0x0
  5123                           
  5124                           
  5125                           ; 2 bytes @ 0x0
  5126  0070                     	ds	1
  5127  0071                     ??_USBConfigureEndpoint:	
  5128  0071                     ??_APP_LEDUpdateUSBStatus:	
  5129                           ; 1 bytes @ 0x1
  5130                           
  5131  0071                     ??i1_LED_Enable:	
  5132                           ; 1 bytes @ 0x1
  5133                           
  5134  0071                     i1LED_Enable@led:	
  5135                           ; 1 bytes @ 0x1
  5136                           
  5137  0071                     i1USBTransferOnePacket@data:	
  5138                           ; 1 bytes @ 0x1
  5139                           
  5140                           
  5141                           ; 2 bytes @ 0x1
  5142  0071                     	ds	1
  5143  0072                     ??_USBCtrlTrfRxService:	
  5144  0072                     ??i1_SYSTEM_Initialize:	
  5145                           ; 1 bytes @ 0x2
  5146                           
  5147  0072                     USBConfigureEndpoint@EPNum:	
  5148                           ; 1 bytes @ 0x2
  5149                           
  5150  0072                     USBCtrlTrfTxService@byteToSend:	
  5151                           ; 1 bytes @ 0x2
  5152                           
  5153  0072                     i1USBDeviceInit@i_868:	
  5154                           ; 1 bytes @ 0x2
  5155                           
  5156  0072                     i1SYSTEM_Initialize@state:	
  5157                           ; 1 bytes @ 0x2
  5158                           
  5159  0072                     memset@c:	
  5160                           ; 1 bytes @ 0x2
  5161                           
  5162                           
  5163                           ; 2 bytes @ 0x2
  5164  0072                     	ds	1
  5165  0073                     ??_USBCtrlTrfInHandler:	
  5166  0073                     ??_USBCtrlEPAllowDataStage:	
  5167                           ; 1 bytes @ 0x3
  5168                           
  5169  0073                     USBConfigureEndpoint@handle:	
  5170                           ; 1 bytes @ 0x3
  5171                           
  5172  0073                     i1USBDeviceInit@i:	
  5173                           ; 1 bytes @ 0x3
  5174                           
  5175  0073                     i1USBTransferOnePacket@len:	
  5176                           ; 1 bytes @ 0x3
  5177                           
  5178                           
  5179                           ; 1 bytes @ 0x3
  5180  0073                     	ds	1
  5181  0074                     ?_USBEnableEndpoint:	
  5182  0074                     ??i1_USBTransferOnePacket:	
  5183                           ; 1 bytes @ 0x4
  5184                           
  5185  0074                     USBEnableEndpoint@options:	
  5186                           ; 1 bytes @ 0x4
  5187                           
  5188  0074                     USBCtrlTrfRxService@i:	
  5189                           ; 1 bytes @ 0x4
  5190                           
  5191  0074                     memset@n:	
  5192                           ; 1 bytes @ 0x4
  5193                           
  5194                           
  5195                           ; 2 bytes @ 0x4
  5196  0074                     	ds	1
  5197  0075                     ??_USBEnableEndpoint:	
  5198  0075                     ??_USBCtrlEPServiceComplete:	
  5199                           ; 1 bytes @ 0x5
  5200                           
  5201  0075                     USBCtrlTrfRxService@byteToRead:	
  5202                           ; 1 bytes @ 0x5
  5203                           
  5204  0075                     USBCtrlTrfInHandler@lastDTS:	
  5205                           ; 1 bytes @ 0x5
  5206                           
  5207                           
  5208                           ; 1 bytes @ 0x5
  5209  0075                     	ds	1
  5210  0076                     ??_memset:	
  5211  0076                     ??_USBCtrlTrfOutHandler:	
  5212                           ; 1 bytes @ 0x6
  5213                           
  5214  0076                     memset@p:	
  5215                           ; 1 bytes @ 0x6
  5216                           
  5217                           
  5218                           ; 2 bytes @ 0x6
  5219  0076                     	ds	1
  5220  0077                     USBEnableEndpoint@p:	
  5221                           
  5222                           ; 2 bytes @ 0x7
  5223  0077                     	ds	1
  5224  0078                     i1USBTransferOnePacket@ep:	
  5225                           
  5226                           ; 1 bytes @ 0x8
  5227  0078                     	ds	1
  5228  0079                     USBEnableEndpoint@ep:	
  5229  0079                     i1USBTransferOnePacket@handle:	
  5230                           ; 1 bytes @ 0x9
  5231                           
  5232                           
  5233                           ; 2 bytes @ 0x9
  5234  0079                     	ds	2
  5235  007B                     ??_USBWakeFromSuspend:	
  5236  007B                     ??_USBSuspend:	
  5237                           ; 1 bytes @ 0xB
  5238                           
  5239  007B                     ??_USER_USB_CALLBACK_EVENT_HANDLER:	
  5240                           ; 1 bytes @ 0xB
  5241                           
  5242  007B                     ??_USBStdFeatureReqHandler:	
  5243                           ; 1 bytes @ 0xB
  5244                           
  5245  007B                     ??_USBStdSetCfgHandler:	
  5246                           ; 1 bytes @ 0xB
  5247                           
  5248  007B                     ??_CDCInitEP:	
  5249                           ; 1 bytes @ 0xB
  5250                           
  5251                           
  5252                           ; 1 bytes @ 0xB
  5253  007B                     	ds	2
  5254  007D                     ??_USBCtrlTrfSetupHandler:	
  5255  007D                     ??_USBCheckStdRequest:	
  5256                           ; 1 bytes @ 0xD
  5257                           
  5258  007D                     ??_USBDeviceTasks:	
  5259                           ; 1 bytes @ 0xD
  5260                           
  5261                           
  5262                           ; 1 bytes @ 0xD
  5263  007D                     	ds	1
  5264  007E                     ??_SYS_InterruptHigh:	
  5265                           
  5266                           	psect	cstackBANK0
  5267  0060                     __pcstackBANK0:	
  5268                           ; 1 bytes @ 0xE
  5269                           
  5270  0060                     ?_USER_USB_CALLBACK_EVENT_HANDLER:	
  5271  0060                     USER_USB_CALLBACK_EVENT_HANDLER@event:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274                           
  5275                           ; 2 bytes @ 0x0
  5276  0060                     	ds	2
  5277  0062                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:	
  5278                           
  5279                           ; 2 bytes @ 0x2
  5280  0062                     	ds	2
  5281  0064                     USER_USB_CALLBACK_EVENT_HANDLER@size:	
  5282                           
  5283                           ; 2 bytes @ 0x4
  5284  0064                     	ds	2
  5285  0066                     USBStdSetCfgHandler@p:	
  5286  0066                     USBStdFeatureReqHandler@pUEP:	
  5287                           ; 2 bytes @ 0x6
  5288                           
  5289                           
  5290                           ; 2 bytes @ 0x6
  5291  0066                     	ds	2
  5292  0068                     USBStdSetCfgHandler@i_1618:	
  5293  0068                     USBStdFeatureReqHandler@current_ep_data:	
  5294                           ; 1 bytes @ 0x8
  5295                           
  5296                           
  5297                           ; 1 bytes @ 0x8
  5298  0068                     	ds	1
  5299  0069                     USBStdSetCfgHandler@i:	
  5300  0069                     USBStdFeatureReqHandler@p:	
  5301                           ; 1 bytes @ 0x9
  5302                           
  5303                           
  5304                           ; 2 bytes @ 0x9
  5305  0069                     	ds	2
  5306  006B                     ??_USBCtrlEPService:	
  5307                           
  5308                           ; 1 bytes @ 0xB
  5309  006B                     	ds	3
  5310  006E                     USBDeviceTasks@i:	
  5311                           
  5312                           ; 1 bytes @ 0xE
  5313  006E                     	ds	1
  5314                           
  5315                           	psect	text2
  5316  1781                     __ptext2:	
  5317 ;; *************** function _USBDeviceInit *****************
  5318 ;; Defined at:
  5319 ;;		line 277 in file "usb/usb_device.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;		None
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  p               2    0[BANK1 ] PTR unsigned char 
  5324 ;;		 -> UEP1(1), 
  5325 ;;  i               1    2[BANK1 ] unsigned char 
  5326 ;;  i               1    3[BANK1 ] unsigned char 
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5331 ;; Tracked objects:
  5332 ;;		On entry : 1F/1
  5333 ;;		On exit  : 1F/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5337 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;Total ram usage:        4 bytes
  5341 ;; Hardware stack levels used:    1
  5342 ;; Hardware stack levels required when called:   10
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function _USBDeviceInit
  5352  1781                     _USBDeviceInit:	
  5353                           
  5354                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  5355                           
  5356                           ;incstack = 0
  5357                           ; Regs used in _USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  5358  1781  1112               	bcf	18,2	;volatile
  5359                           
  5360                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
  5361  1782  003D               	movlb	29	; select bank29
  5362  1783  0193               	clrf	19	;volatile
  5363                           
  5364                           ;usb_device.c: 291: {UIR = 0;};
  5365  1784  0190               	clrf	16	;volatile
  5366                           
  5367                           ;usb_device.c: 294: UEP0 = 0;
  5368  1785  0198               	clrf	24	;volatile
  5369                           
  5370                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
  5371  1786  300E               	movlw	14
  5372  1787  0021               	movlb	1	; select bank1
  5373  1788  00E1               	movwf	(USBDeviceInit@p+1)^(0+128)
  5374  1789  3099               	movlw	153
  5375  178A  00E0               	movwf	USBDeviceInit@p^(0+128)
  5376  178B  01E2               	clrf	USBDeviceInit@i_868^(0+128)
  5377  178C                     l4761:	
  5378  178C  0860               	movf	USBDeviceInit@p^(0+128),w
  5379  178D  0086               	movwf	6
  5380  178E  0861               	movf	(USBDeviceInit@p+1)^(0+128),w
  5381  178F  0087               	movwf	7
  5382  1790  0181               	clrf	1
  5383  1791  0AE0               	incf	USBDeviceInit@p^(0+128),f
  5384  1792  1903               	skipnz
  5385  1793  0AE1               	incf	(USBDeviceInit@p+1)^(0+128),f
  5386  1794  3002               	movlw	2
  5387  1795  0AE2               	incf	USBDeviceInit@i_868^(0+128),f
  5388  1796  0262               	subwf	USBDeviceInit@i_868^(0+128),w
  5389  1797  1C03               	skipc
  5390  1798  2F8C               	goto	l4761
  5391                           
  5392                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5393  1799  3016               	movlw	22
  5394  179A  003D               	movlb	29	; select bank29
  5395  179B  0091               	movwf	17	;volatile
  5396  179C  309F               	movlw	159
  5397  179D  0097               	movwf	23	;volatile
  5398  179E  307B               	movlw	123
  5399  179F  0092               	movwf	18	;volatile
  5400                           
  5401                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
  5402  17A0  0021               	movlb	1	; select bank1
  5403  17A1  01E3               	clrf	USBDeviceInit@i^(0+128)
  5404  17A2                     l4777:	
  5405                           
  5406                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
  5407  17A2  0863               	movf	USBDeviceInit@i^(0+128),w
  5408  17A3  0709               	addwf	9,w
  5409  17A4  0709               	addwf	9,w
  5410  17A5  3E20               	addlw	32
  5411  17A6  0086               	movwf	6
  5412  17A7  3000               	movlw	0
  5413  17A8  0187               	clrf	7
  5414  17A9  3FC0               	movwi [0]fsr1
  5415  17AA  3FC1               	movwi [1]fsr1
  5416  17AB  3FC2               	movwi [2]fsr1
  5417  17AC  3FC3               	movwi [3]fsr1
  5418  17AD  300C               	movlw	12
  5419  17AE  0AE3               	incf	USBDeviceInit@i^(0+128),f
  5420  17AF  0263               	subwf	USBDeviceInit@i^(0+128),w
  5421  17B0  1C03               	skipc
  5422  17B1  2FA2               	goto	l4777
  5423                           
  5424                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
  5425  17B2  003D               	movlb	29	; select bank29
  5426  17B3  170E               	bsf	14,6	;volatile
  5427                           
  5428                           ;usb_device.c: 316: UADDR = 0x00;
  5429  17B4  0196               	clrf	22	;volatile
  5430                           
  5431                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  5432  17B5  120E               	bcf	14,4	;volatile
  5433                           
  5434                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  5435  17B6  130E               	bcf	14,6	;volatile
  5436  17B7                     l4789:	
  5437                           
  5438                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
  5439  17B7  1190               	bcf	16,3	;volatile
  5440                           
  5441                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  5442  17B8  0023               	movlb	3	; select bank3
  5443  17B9  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  5444                           
  5445                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  5446  17BA  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  5447                           
  5448                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  5449  17BB  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  5450  17BC  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  5451                           
  5452                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  5453  17BD  003D               	movlb	29	; select bank29
  5454  17BE  1990               	btfsc	16,3	;volatile
  5455  17BF  2FB7               	goto	l4789
  5456                           
  5457                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  5458  17C0  3001               	movlw	1
  5459  17C1  0023               	movlb	3	; select bank3
  5460  17C2  00DD               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  5461                           
  5462                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  5463  17C3  00DC               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  5464                           
  5465                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  5466  17C4  01DB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  5467                           
  5468                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  5469  17C5  01DA               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  5470                           
  5471                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  5472  17C6  01E2               	clrf	_USBBusIsSuspended^(0+384)	;volatile
  5473                           
  5474                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  5475  17C7  0021               	movlb	1	; select bank1
  5476  17C8  01E3               	clrf	USBDeviceInit@i^(0+128)
  5477  17C9                     l4805:	
  5478                           
  5479                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  5480  17C9  3563               	lslf	USBDeviceInit@i^(0+128),w
  5481  17CA  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  5482  17CB  0086               	movwf	6
  5483  17CC  3001               	movlw	1	; select bank3/4
  5484  17CD  0087               	movwf	7
  5485  17CE  3000               	movlw	0
  5486  17CF  3FC0               	movwi [0]fsr1
  5487  17D0  3FC1               	movwi [1]fsr1
  5488                           
  5489                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  5490  17D1  3563               	lslf	USBDeviceInit@i^(0+128),w
  5491  17D2  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  5492  17D3  0086               	movwf	6
  5493  17D4  3000               	movlw	0
  5494  17D5  3FC0               	movwi [0]fsr1
  5495  17D6  3FC1               	movwi [1]fsr1
  5496                           
  5497                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  5498  17D7  0863               	movf	USBDeviceInit@i^(0+128),w
  5499  17D8  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  5500  17D9  0086               	movwf	6
  5501  17DA  0181               	clrf	1
  5502                           
  5503                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  5504  17DB  0863               	movf	USBDeviceInit@i^(0+128),w
  5505  17DC  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  5506  17DD  0086               	movwf	6
  5507  17DE  3003               	movlw	3
  5508  17DF  0181               	clrf	1
  5509  17E0  0AE3               	incf	USBDeviceInit@i^(0+128),f
  5510  17E1  0263               	subwf	USBDeviceInit@i^(0+128),w
  5511  17E2  1C03               	skipc
  5512  17E3  2FC9               	goto	l4805
  5513                           
  5514                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5515  17E4  3028               	movlw	40
  5516  17E5  0023               	movlb	3	; select bank3
  5517  17E6  00A7               	movwf	_pBDTEntryIn^(0+384)
  5518  17E7  3016               	movlw	22
  5519  17E8  01A8               	clrf	(_pBDTEntryIn+1)^(0+384)
  5520                           
  5521                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  5522  17E9  003D               	movlb	29	; select bank29
  5523  17EA  0098               	movwf	24	;volatile
  5524                           
  5525                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  5526  17EB  0020               	movlb	0	; select bank0
  5527  17EC  01A3               	clrf	35	;volatile
  5528  17ED  3050               	movlw	80
  5529  17EE  00A2               	movwf	34	;volatile
  5530                           
  5531                           ;usb_device.c: 359: BDT[0].CNT = 8;
  5532  17EF  3008               	movlw	8
  5533  17F0  00A1               	movwf	33	;volatile
  5534                           
  5535                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  5536  17F1  3004               	movlw	4
  5537  17F2  00A0               	movwf	32	;volatile
  5538                           
  5539                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  5540  17F3  17A0               	bsf	32,7	;volatile
  5541                           
  5542                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  5543  17F4  0023               	movlb	3	; select bank3
  5544  17F5  01EB               	clrf	_USBActiveConfiguration^(0+384)	;volatile
  5545                           
  5546                           ;usb_device.c: 366: USB1msTickCount = 0;
  5547  17F6  0024               	movlb	4	; select bank4
  5548  17F7  01A0               	clrf	_USB1msTickCount^(0+512)	;volatile
  5549  17F8  01A1               	clrf	(_USB1msTickCount+1)^(0+512)	;volatile
  5550  17F9  01A2               	clrf	(_USB1msTickCount+2)^(0+512)	;volatile
  5551  17FA  01A3               	clrf	(_USB1msTickCount+3)^(0+512)	;volatile
  5552                           
  5553                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  5554  17FB  0023               	movlb	3	; select bank3
  5555  17FC  01D9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  5556                           
  5557                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  5558  17FD  0020               	movlb	0	; select bank0
  5559  17FE  01EF               	clrf	_USBDeviceState	;volatile
  5560  17FF  0008               	return
  5561  1800                     __end_of_USBDeviceInit:	
  5562                           
  5563                           	psect	text5
  5564  1746                     __ptext5:	
  5565 ;; *************** function _LED_Enable *****************
  5566 ;; Defined at:
  5567 ;;		line 220 in file "bsp/leds.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  led             1    wreg     enum E2
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  led             1    1[BANK1 ] enum E2
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  1    wreg      void 
  5574 ;; Registers used:
  5575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5576 ;; Tracked objects:
  5577 ;;		On entry : 19/7
  5578 ;;		On exit  : 1F/1
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5582 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;Total ram usage:        1 bytes
  5586 ;; Hardware stack levels used:    1
  5587 ;; Hardware stack levels required when called:   11
  5588 ;; This function calls:
  5589 ;;		_LED_Off
  5590 ;; This function is called by:
  5591 ;;		_SYSTEM_Initialize
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _LED_Enable
  5597  1746                     _LED_Enable:	
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in _LED_Enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5601                           ;LED_Enable@led stored from wreg
  5602  1746  0021               	movlb	1	; select bank1
  5603  1747  00E1               	movwf	LED_Enable@led^(0+128)
  5604                           
  5605                           ;leds.c: 222: switch(led)
  5606  1748  2F5D               	goto	l4407
  5607  1749                     l4389:	
  5608                           
  5609                           ;leds.c: 225: LED_Off(LED_D1);
  5610  1749  3001               	movlw	1
  5611  174A  2768               	fcall	_LED_Off
  5612                           
  5613                           ;leds.c: 226: TRISCbits.TRISC3 = 0;
  5614  174B  0021               	movlb	1	; select bank1
  5615  174C  118E               	bcf	14,3	;volatile
  5616                           
  5617                           ;leds.c: 227: break;
  5618  174D  0008               	return
  5619  174E                     l4393:	
  5620                           
  5621                           ;leds.c: 230: LED_Off(LED_D2);
  5622  174E  3002               	movlw	2
  5623  174F  2768               	fcall	_LED_Off
  5624                           
  5625                           ;leds.c: 231: TRISCbits.TRISC4 = 0;
  5626  1750  0021               	movlb	1	; select bank1
  5627  1751  120E               	bcf	14,4	;volatile
  5628                           
  5629                           ;leds.c: 232: break;
  5630  1752  0008               	return
  5631  1753                     l4397:	
  5632                           
  5633                           ;leds.c: 235: LED_Off(LED_D3);
  5634  1753  3003               	movlw	3
  5635  1754  2768               	fcall	_LED_Off
  5636                           
  5637                           ;leds.c: 236: TRISCbits.TRISC5 = 0;
  5638  1755  0021               	movlb	1	; select bank1
  5639  1756  128E               	bcf	14,5	;volatile
  5640                           
  5641                           ;leds.c: 237: break;
  5642  1757  0008               	return
  5643  1758                     l4401:	
  5644                           
  5645                           ;leds.c: 240: LED_Off(LED_D4);
  5646  1758  3004               	movlw	4
  5647  1759  2768               	fcall	_LED_Off
  5648                           
  5649                           ;leds.c: 241: TRISCbits.TRISC6 = 0;
  5650  175A  0021               	movlb	1	; select bank1
  5651  175B  130E               	bcf	14,6	;volatile
  5652                           
  5653                           ;leds.c: 242: break;
  5654  175C  0008               	return
  5655  175D                     l4407:	
  5656  175D  0861               	movf	LED_Enable@led^(0+128),w
  5657                           
  5658                           ; Switch size 1, requested type "speed"
  5659                           ; Number of cases is 5, Range of values is 0 to 4
  5660                           ; switch strategies available:
  5661                           ; Name         Instructions Cycles
  5662                           ; direct_byte           16     6 (fixed)
  5663                           ; simple_byte           16     9 (average)
  5664                           ; jumptable            260     6 (fixed)
  5665                           ;	Chosen strategy is direct_byte
  5666  175E  0084               	movwf	4
  5667  175F  3005               	movlw	5
  5668  1760  0204               	subwf	4,w
  5669  1761  1803               	skipnc
  5670  1762  0008               	return
  5671  1763  3186               	movlp	high S5897
  5672  1764  3504               	lslf	4,w
  5673  1765  3EEF               	addlw	low S5897
  5674  1766  0082               	movwf	2
  5675  1767                     l54:	
  5676  1767  0008               	return
  5677  1768                     __end_of_LED_Enable:	
  5678  1768                     __ptext6:	
  5679 ;; *************** function _LED_Off *****************
  5680 ;; Defined at:
  5681 ;;		line 100 in file "bsp/leds.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  led             1    wreg     enum E2
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  led             1    0[BANK1 ] enum E2
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      void 
  5688 ;; Registers used:
  5689 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 1F/1
  5692 ;;		On exit  : 1C/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;Total ram usage:        1 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:   10
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_LED_Enable
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           
  5710                           ;psect for function _LED_Off
  5711  1768                     _LED_Off:	
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _LED_Off: [wreg-fsr0h+status,2+status,0]
  5715                           ;LED_Off@led stored from wreg
  5716  1768  00E0               	movwf	LED_Off@led^(0+128)
  5717                           
  5718                           ;leds.c: 102: switch(led)
  5719  1769  2F76               	goto	l4205
  5720  176A                     l18:	
  5721                           ;leds.c: 103: {;leds.c: 104: case LED_D1:
  5722                           
  5723                           
  5724                           ;leds.c: 105: LATCbits.LATC3 = 1;
  5725  176A  0022               	movlb	2	; select bank2
  5726  176B  158E               	bsf	14,3	;volatile
  5727                           
  5728                           ;leds.c: 106: break;
  5729  176C  0008               	return
  5730  176D                     l20:	
  5731                           ;leds.c: 108: case LED_D2:
  5732                           
  5733                           
  5734                           ;leds.c: 109: LATCbits.LATC4 = 1;
  5735  176D  0022               	movlb	2	; select bank2
  5736  176E  160E               	bsf	14,4	;volatile
  5737                           
  5738                           ;leds.c: 110: break;
  5739  176F  0008               	return
  5740  1770                     l21:	
  5741                           ;leds.c: 112: case LED_D3:
  5742                           
  5743                           
  5744                           ;leds.c: 113: LATCbits.LATC5 = 1;
  5745  1770  0022               	movlb	2	; select bank2
  5746  1771  168E               	bsf	14,5	;volatile
  5747                           
  5748                           ;leds.c: 114: break;
  5749  1772  0008               	return
  5750  1773                     l22:	
  5751                           ;leds.c: 116: case LED_D4:
  5752                           
  5753                           
  5754                           ;leds.c: 117: LATCbits.LATC6 = 1;
  5755  1773  0022               	movlb	2	; select bank2
  5756  1774  170E               	bsf	14,6	;volatile
  5757                           
  5758                           ;leds.c: 118: break;
  5759  1775  0008               	return
  5760  1776                     l4205:	
  5761  1776  0860               	movf	LED_Off@led^(0+128),w
  5762                           
  5763                           ; Switch size 1, requested type "speed"
  5764                           ; Number of cases is 5, Range of values is 0 to 4
  5765                           ; switch strategies available:
  5766                           ; Name         Instructions Cycles
  5767                           ; direct_byte           16     6 (fixed)
  5768                           ; simple_byte           16     9 (average)
  5769                           ; jumptable            260     6 (fixed)
  5770                           ;	Chosen strategy is direct_byte
  5771  1777  0084               	movwf	4
  5772  1778  3005               	movlw	5
  5773  1779  0204               	subwf	4,w
  5774  177A  1803               	skipnc
  5775  177B  0008               	return
  5776  177C  3191               	movlp	high S5899
  5777  177D  3504               	lslf	4,w
  5778  177E  3E46               	addlw	low S5899
  5779  177F  0082               	movwf	2
  5780  1780                     l24:	
  5781  1780  0008               	return
  5782  1781                     __end_of_LED_Off:	
  5783                           
  5784                           	psect	swtext1
  5785  06EF                     __pswtext1:	
  5786  06EF                     S5897:	
  5787  06EF  3197  2F67         	ljmp	l54
  5788  06F1  3197  2F49         	ljmp	l4389
  5789  06F3  3197  2F4E         	ljmp	l4393
  5790  06F5  3197  2F53         	ljmp	l4397
  5791  06F7  3197  2F58         	ljmp	l4401
  5792                           
  5793                           	psect	swtext2
  5794  1146                     __pswtext2:	
  5795  1146                     S5899:	
  5796  1146  3197  2F80         	ljmp	l24
  5797  1148  3197  2F6A         	ljmp	l18
  5798  114A  3197  2F6D         	ljmp	l20
  5799  114C  3197  2F70         	ljmp	l21
  5800  114E  3197  2F73         	ljmp	l22
  5801                           
  5802                           	psect	text7
  5803  07EA                     __ptext7:	
  5804 ;; *************** function _BUTTON_Enable *****************
  5805 ;; Defined at:
  5806 ;;		line 115 in file "bsp/buttons.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  button          1    wreg     enum E2159
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  button          1    0[BANK1 ] enum E2159
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 1F/1
  5817 ;;		On exit  : 1D/1
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;Total ram usage:        1 bytes
  5825 ;; Hardware stack levels used:    1
  5826 ;; Hardware stack levels required when called:   10
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_SYSTEM_Initialize
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           
  5835                           ;psect for function _BUTTON_Enable
  5836  07EA                     _BUTTON_Enable:	
  5837                           
  5838                           ;incstack = 0
  5839                           ; Regs used in _BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
  5840                           ;BUTTON_Enable@button stored from wreg
  5841  07EA  00E0               	movwf	BUTTON_Enable@button^(0+128)
  5842                           
  5843                           ;buttons.c: 117: switch(button)
  5844  07EB  2FF5               	goto	l4421
  5845  07EC                     l100:	
  5846                           ;buttons.c: 118: {;buttons.c: 119: case BUTTON_S1:
  5847                           
  5848                           
  5849                           ;buttons.c: 120: TRISBbits.TRISB5 = 1;
  5850  07EC  168D               	bsf	13,5	;volatile
  5851                           
  5852                           ;buttons.c: 121: ANSELBbits.ANSB5 = 0;
  5853  07ED  0023               	movlb	3	; select bank3
  5854  07EE  128D               	bcf	13,5	;volatile
  5855                           
  5856                           ;buttons.c: 122: WPUBbits.WPUB5 = 1;
  5857  07EF  0024               	movlb	4	; select bank4
  5858  07F0  168D               	bsf	13,5	;volatile
  5859                           
  5860                           ;buttons.c: 123: state1 = 0;
  5861  07F1  0023               	movlb	3	; select bank3
  5862  07F2  01CF               	clrf	_state1^(0+384)
  5863  07F3  01D0               	clrf	(_state1+1)^(0+384)
  5864                           
  5865                           ;buttons.c: 124: break;
  5866  07F4  0008               	return
  5867  07F5                     l4421:	
  5868  07F5  0860               	movf	BUTTON_Enable@button^(0+128),w
  5869                           
  5870                           ; Switch size 1, requested type "speed"
  5871                           ; Number of cases is 2, Range of values is 0 to 1
  5872                           ; switch strategies available:
  5873                           ; Name         Instructions Cycles
  5874                           ; simple_byte            7     4 (average)
  5875                           ; direct_byte           10     6 (fixed)
  5876                           ; jumptable            260     6 (fixed)
  5877                           ;	Chosen strategy is simple_byte
  5878  07F6  3A00               	xorlw	0	; case 0
  5879  07F7  1903               	skipnz
  5880  07F8  2FFD               	goto	l103
  5881  07F9  3A01               	xorlw	1	; case 1
  5882  07FA  1903               	skipnz
  5883  07FB  2FEC               	goto	l100
  5884  07FC  2FFD               	goto	l103
  5885  07FD                     l103:	
  5886  07FD  0008               	return
  5887  07FE                     __end_of_BUTTON_Enable:	
  5888                           
  5889                           	psect	text10
  5890  172F                     __ptext10:	
  5891 ;; *************** function _putUSBUSART *****************
  5892 ;; Defined at:
  5893 ;;		line 556 in file "usb/usb_device_cdc.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  data            1    wreg     PTR unsigned char 
  5896 ;;		 -> writeBuffer(64), 
  5897 ;;  length          1    0[BANK1 ] unsigned char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  data            1    1[BANK1 ] PTR unsigned char 
  5900 ;;		 -> writeBuffer(64), 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 1F/1
  5907 ;;		On exit  : 1F/1
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5910 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;Total ram usage:        2 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:   10
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_APP_DeviceCDCBasicDemoTasks
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _putUSBUSART
  5926  172F                     _putUSBUSART:	
  5927                           
  5928                           ;incstack = 0
  5929                           ; Regs used in _putUSBUSART: [wreg+status,2+status,0]
  5930                           ;putUSBUSART@data stored from wreg
  5931  172F  00E1               	movwf	putUSBUSART@data^(0+128)
  5932                           
  5933                           ;usb_device_cdc.c: 581: {PIE2bits.USBIE = 0;};
  5934  1730  1112               	bcf	18,2	;volatile
  5935                           
  5936                           ;usb_device_cdc.c: 582: if(cdc_trf_state == 0)
  5937  1731  0023               	movlb	3	; select bank3
  5938  1732  0857               	movf	_cdc_trf_state^(0+384),w
  5939  1733  1D03               	btfss	3,2
  5940  1734  2F43               	goto	l4517
  5941                           
  5942                           ;usb_device_cdc.c: 583: {;usb_device_cdc.c: 584: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx
      +                          _len = length; cdc_mem_type = 0x01; cdc_trf_state = 1; };
  5943  1735  0021               	movlb	1	; select bank1
  5944  1736  0861               	movf	putUSBUSART@data^(0+128),w
  5945  1737  0023               	movlb	3	; select bank3
  5946  1738  00C9               	movwf	_pCDCSrc^(0+384)
  5947  1739  3002               	movlw	2
  5948  173A  00CA               	movwf	(_pCDCSrc+1)^(0+384)
  5949  173B  0021               	movlb	1	; select bank1
  5950  173C  0860               	movf	putUSBUSART@length^(0+128),w
  5951  173D  0023               	movlb	3	; select bank3
  5952  173E  00D6               	movwf	_cdc_tx_len^(0+384)
  5953  173F  01D5               	clrf	_cdc_mem_type^(0+384)
  5954  1740  0AD5               	incf	_cdc_mem_type^(0+384),f
  5955  1741  01D7               	clrf	_cdc_trf_state^(0+384)
  5956  1742  0AD7               	incf	_cdc_trf_state^(0+384),f
  5957  1743                     l4517:	
  5958                           
  5959                           ;usb_device_cdc.c: 585: };usb_device_cdc.c: 586: {PIE2bits.USBIE = 1;};
  5960  1743  0021               	movlb	1	; select bank1
  5961  1744  1512               	bsf	18,2	;volatile
  5962  1745  0008               	return
  5963  1746                     __end_of_putUSBUSART:	
  5964                           
  5965                           	psect	text11
  5966  0405                     __ptext11:	
  5967 ;; *************** function _getsUSBUSART *****************
  5968 ;; Defined at:
  5969 ;;		line 485 in file "usb/usb_device_cdc.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  buffer          1    wreg     PTR unsigned char 
  5972 ;;		 -> readBuffer(64), 
  5973 ;;  len             1   11[BANK1 ] unsigned char 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  buffer          1   13[BANK1 ] PTR unsigned char 
  5976 ;;		 -> readBuffer(64), 
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      unsigned char 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 1F/1
  5983 ;;		On exit  : 1F/3
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5986 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  5989 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5990 ;;Total ram usage:        3 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:   11
  5993 ;; This function calls:
  5994 ;;		_USBTransferOnePacket
  5995 ;; This function is called by:
  5996 ;;		_APP_DeviceCDCBasicDemoTasks
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function _getsUSBUSART
  6002  0405                     _getsUSBUSART:	
  6003                           
  6004                           ;incstack = 0
  6005                           ; Regs used in _getsUSBUSART: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6006                           ;getsUSBUSART@buffer stored from wreg
  6007  0405  00ED               	movwf	getsUSBUSART@buffer^(0+128)
  6008                           
  6009                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  6010  0406  0023               	movlb	3	; select bank3
  6011  0407  01D8               	clrf	_cdc_rx_len^(0+384)
  6012                           
  6013                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  6014  0408  0845               	movf	_CDCDataOutHandle^(0+384),w
  6015  0409  0446               	iorwf	(_CDCDataOutHandle+1)^(0+384),w
  6016  040A  1903               	btfsc	3,2
  6017  040B  2C12               	goto	l4489
  6018  040C  0845               	movf	_CDCDataOutHandle^(0+384),w
  6019  040D  0086               	movwf	6
  6020  040E  0846               	movf	(_CDCDataOutHandle+1)^(0+384),w
  6021  040F  0087               	movwf	7
  6022  0410  1B81               	btfsc	1,7
  6023  0411  2C4F               	goto	l4503
  6024  0412                     l4489:	
  6025                           
  6026                           ;usb_device_cdc.c: 490: {;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCData
      +                          OutHandle)->CNT))
  6027  0412  0845               	movf	_CDCDataOutHandle^(0+384),w
  6028  0413  0086               	movwf	6
  6029  0414  0846               	movf	(_CDCDataOutHandle+1)^(0+384),w
  6030  0415  0087               	movwf	7
  6031  0416  3141               	addfsr 1,1
  6032  0417  0021               	movlb	1	; select bank1
  6033  0418  086B               	movf	getsUSBUSART@len^(0+128),w
  6034  0419  0201               	subwf	1,w
  6035  041A  1803               	skipnc
  6036  041B  2C25               	goto	l4493
  6037                           
  6038                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  6039  041C  0023               	movlb	3	; select bank3
  6040  041D  0845               	movf	_CDCDataOutHandle^(0+384),w
  6041  041E  0086               	movwf	6
  6042  041F  0846               	movf	(_CDCDataOutHandle+1)^(0+384),w
  6043  0420  0087               	movwf	7
  6044  0421  3141               	addfsr 1,1
  6045  0422  0801               	movf	1,w
  6046  0423  0021               	movlb	1	; select bank1
  6047  0424  00EB               	movwf	getsUSBUSART@len^(0+128)
  6048  0425                     l4493:	
  6049                           
  6050                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  6051  0425  0023               	movlb	3	; select bank3
  6052  0426  01D8               	clrf	_cdc_rx_len^(0+384)
  6053  0427                     l4499:	
  6054  0427  0021               	movlb	1	; select bank1
  6055  0428  086B               	movf	getsUSBUSART@len^(0+128),w
  6056  0429  0023               	movlb	3	; select bank3
  6057  042A  0258               	subwf	_cdc_rx_len^(0+384),w
  6058  042B  1803               	btfsc	3,0
  6059  042C  2C3E               	goto	l4501
  6060                           
  6061                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  6062  042D  0858               	movf	_cdc_rx_len^(0+384),w
  6063  042E  0021               	movlb	1	; select bank1
  6064  042F  076D               	addwf	getsUSBUSART@buffer^(0+128),w
  6065  0430  00EC               	movwf	??_getsUSBUSART^(0+128)
  6066  0431  0086               	movwf	6
  6067  0432  3003               	movlw	3	; select bank6/7
  6068  0433  0087               	movwf	7
  6069  0434  0023               	movlb	3	; select bank3
  6070  0435  0858               	movf	_cdc_rx_len^(0+384),w
  6071  0436  3E20               	addlw	32
  6072  0437  0084               	movwf	4
  6073  0438  3001               	movlw	1	; select bank2/3
  6074  0439  0085               	movwf	5
  6075  043A  0800               	movf	0,w
  6076  043B  0081               	movwf	1
  6077  043C  0AD8               	incf	_cdc_rx_len^(0+384),f
  6078  043D  2C27               	goto	l4499
  6079  043E                     l4501:	
  6080                           
  6081                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  6082  043E  0021               	movlb	1	; select bank1
  6083  043F  3020               	movlw	32
  6084  0440  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  6085  0441  00E1               	movwf	USBTransferOnePacket@data^(0+128)
  6086  0442  3001               	movlw	1
  6087  0443  00E2               	movwf	(USBTransferOnePacket@data+1)^(0+128)
  6088  0444  3040               	movlw	64
  6089  0445  00E3               	movwf	USBTransferOnePacket@len^(0+128)
  6090  0446  3002               	movlw	2
  6091  0447  24E4               	fcall	_USBTransferOnePacket
  6092  0448  0861               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6093  0449  0023               	movlb	3	; select bank3
  6094  044A  00C6               	movwf	(_CDCDataOutHandle+1)^(0+384)
  6095  044B  0021               	movlb	1	; select bank1
  6096  044C  0860               	movf	?_USBTransferOnePacket^(0+128),w
  6097  044D  0023               	movlb	3	; select bank3
  6098  044E  00C5               	movwf	_CDCDataOutHandle^(0+384)
  6099  044F                     l4503:	
  6100                           
  6101                           ;usb_device_cdc.c: 510: };usb_device_cdc.c: 512: return cdc_rx_len;
  6102  044F  0858               	movf	_cdc_rx_len^(0+384),w
  6103  0450  0008               	return
  6104  0451                     __end_of_getsUSBUSART:	
  6105  0451                     __ptext16:	
  6106 ;; *************** function _CDCTxService *****************
  6107 ;; Defined at:
  6108 ;;		line 836 in file "usb/usb_device_cdc.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  byte_to_send    1   12[BANK1 ] unsigned char 
  6113 ;;  i               1   11[BANK1 ] unsigned char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 1D/3
  6120 ;;		On exit  : 1F/1
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;Total ram usage:        2 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:   11
  6130 ;; This function calls:
  6131 ;;		_USBTransferOnePacket
  6132 ;; This function is called by:
  6133 ;;		_APP_DeviceCDCBasicDemoTasks
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _CDCTxService
  6139  0451                     _CDCTxService:	
  6140  0451                     l4545:	
  6141                           ;incstack = 0
  6142                           ; Regs used in _CDCTxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6143                           
  6144                           
  6145                           ;usb_device_cdc.c: 838: uint8_t byte_to_send;;usb_device_cdc.c: 839: uint8_t i;;usb_devi
      +                          ce_cdc.c: 841: {PIE2bits.USBIE = 0;};
  6146  0451  0021               	movlb	1	; select bank1
  6147  0452  1112               	bcf	18,2	;volatile
  6148                           
  6149                           ;usb_device_cdc.c: 843: {};;usb_device_cdc.c: 845: if(((CDCDataInHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)CDCDataInHandle & 0x80) != 0x00)))
  6150  0453  0023               	movlb	3	; select bank3
  6151  0454  0843               	movf	_CDCDataInHandle^(0+384),w
  6152  0455  0444               	iorwf	(_CDCDataInHandle+1)^(0+384),w
  6153  0456  1903               	btfsc	3,2
  6154  0457  2C61               	goto	l4553
  6155  0458  0843               	movf	_CDCDataInHandle^(0+384),w
  6156  0459  0086               	movwf	6
  6157  045A  0844               	movf	(_CDCDataInHandle+1)^(0+384),w
  6158  045B  0087               	movwf	7
  6159  045C  1F81               	btfss	1,7
  6160  045D  2C61               	goto	l4553
  6161                           
  6162                           ;usb_device_cdc.c: 846: {;usb_device_cdc.c: 847: {PIE2bits.USBIE = 1;};
  6163  045E  0021               	movlb	1	; select bank1
  6164  045F  1512               	bsf	18,2	;volatile
  6165                           
  6166                           ;usb_device_cdc.c: 848: return;
  6167  0460  0008               	return
  6168  0461                     l4553:	
  6169                           
  6170                           ;usb_device_cdc.c: 849: };usb_device_cdc.c: 856: if(cdc_trf_state == 3)
  6171  0461  3003               	movlw	3
  6172  0462  0657               	xorwf	_cdc_trf_state^(0+384),w
  6173  0463  1903               	btfsc	3,2
  6174                           
  6175                           ;usb_device_cdc.c: 857: cdc_trf_state = 0;
  6176  0464  01D7               	clrf	_cdc_trf_state^(0+384)
  6177                           
  6178                           ;usb_device_cdc.c: 862: if(cdc_trf_state == 0)
  6179  0465  0857               	movf	_cdc_trf_state^(0+384),w
  6180  0466  1D03               	btfss	3,2
  6181  0467  2C6B               	goto	l4561
  6182                           
  6183                           ;usb_device_cdc.c: 863: {;usb_device_cdc.c: 864: {PIE2bits.USBIE = 1;};
  6184  0468  0021               	movlb	1	; select bank1
  6185  0469  1512               	bsf	18,2	;volatile
  6186                           
  6187                           ;usb_device_cdc.c: 865: return;
  6188  046A  0008               	return
  6189  046B                     l4561:	
  6190                           
  6191                           ;usb_device_cdc.c: 866: };usb_device_cdc.c: 871: if(cdc_trf_state == 2)
  6192  046B  3002               	movlw	2
  6193  046C  0657               	xorwf	_cdc_trf_state^(0+384),w
  6194  046D  1D03               	btfss	3,2
  6195  046E  2C82               	goto	l4567
  6196                           
  6197                           ;usb_device_cdc.c: 872: {;usb_device_cdc.c: 873: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(0),0);
  6198  046F  0021               	movlb	1	; select bank1
  6199  0470  3002               	movlw	2
  6200  0471  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  6201  0472  0AE0               	incf	USBTransferOnePacket@dir^(0+128),f
  6202  0473  01E1               	clrf	USBTransferOnePacket@data^(0+128)
  6203  0474  01E2               	clrf	(USBTransferOnePacket@data+1)^(0+128)
  6204  0475  01E3               	clrf	USBTransferOnePacket@len^(0+128)
  6205  0476  24E4  3184         	fcall	_USBTransferOnePacket
  6206  0478  0861               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6207  0479  0023               	movlb	3	; select bank3
  6208  047A  00C4               	movwf	(_CDCDataInHandle+1)^(0+384)
  6209  047B  0021               	movlb	1	; select bank1
  6210  047C  0860               	movf	?_USBTransferOnePacket^(0+128),w
  6211  047D  0023               	movlb	3	; select bank3
  6212  047E  00C3               	movwf	_CDCDataInHandle^(0+384)
  6213                           
  6214                           ;usb_device_cdc.c: 875: cdc_trf_state = 3;
  6215  047F  3003               	movlw	3
  6216  0480  00D7               	movwf	_cdc_trf_state^(0+384)
  6217                           
  6218                           ;usb_device_cdc.c: 876: }
  6219  0481  2CE1               	goto	l4615
  6220  0482                     l4567:	
  6221                           
  6222                           ;usb_device_cdc.c: 877: else if(cdc_trf_state == 1)
  6223  0482  0B57               	decfsz	_cdc_trf_state^(0+384),w
  6224  0483  2CE1               	goto	l4615
  6225                           
  6226                           ;usb_device_cdc.c: 878: {;usb_device_cdc.c: 882: if(cdc_tx_len > sizeof(cdc_data_tx))
  6227  0484  3041               	movlw	65
  6228  0485  0256               	subwf	_cdc_tx_len^(0+384),w
  6229  0486  1C03               	skipc
  6230  0487  2C8A               	goto	l4573
  6231                           
  6232                           ;usb_device_cdc.c: 883: byte_to_send = sizeof(cdc_data_tx);
  6233  0488  3040               	movlw	64
  6234  0489  2C8B               	goto	L4
  6235  048A                     l4573:	
  6236                           
  6237                           ;usb_device_cdc.c: 884: else;usb_device_cdc.c: 885: byte_to_send = cdc_tx_len;
  6238  048A  0856               	movf	_cdc_tx_len^(0+384),w
  6239  048B                     L4:	
  6240  048B  0021               	movlb	1	; select bank1
  6241  048C  00EC               	movwf	CDCTxService@byte_to_send^(0+128)
  6242                           
  6243                           ;usb_device_cdc.c: 890: cdc_tx_len = cdc_tx_len - byte_to_send;
  6244  048D  0023               	movlb	3	; select bank3
  6245  048E  02D6               	subwf	_cdc_tx_len^(0+384),f
  6246                           
  6247                           ;usb_device_cdc.c: 892: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  6248  048F  30A0               	movlw	160
  6249  0490  00C7               	movwf	_pCDCDst^(0+384)
  6250                           
  6251                           ;usb_device_cdc.c: 894: i = byte_to_send;
  6252  0491  0021               	movlb	1	; select bank1
  6253  0492  086C               	movf	CDCTxService@byte_to_send^(0+128),w
  6254  0493  00EB               	movwf	CDCTxService@i^(0+128)
  6255                           
  6256                           ;usb_device_cdc.c: 895: if(cdc_mem_type == 0x00)
  6257  0494  0023               	movlb	3	; select bank3
  6258  0495  0855               	movf	_cdc_mem_type^(0+384),w
  6259  0496  1903               	btfsc	3,2
  6260  0497  2CA9               	goto	l4593
  6261  0498  2CBE               	goto	l4603
  6262  0499                     l4585:	
  6263                           
  6264                           ;usb_device_cdc.c: 898: {;usb_device_cdc.c: 899: *pCDCDst.bRam = *pCDCSrc.bRom;
  6265  0499  0023               	movlb	3	; select bank3
  6266  049A  0847               	movf	_pCDCDst^(0+384),w
  6267  049B  0086               	movwf	6
  6268  049C  0187               	clrf	7
  6269  049D  0849               	movf	_pCDCSrc^(0+384),w
  6270  049E  0084               	movwf	4
  6271  049F  084A               	movf	(_pCDCSrc+1)^(0+384),w
  6272  04A0  0085               	movwf	5
  6273  04A1  0800               	movf	0,w	;code access
  6274  04A2  0081               	movwf	1
  6275                           
  6276                           ;usb_device_cdc.c: 900: pCDCDst.bRam++;
  6277  04A3  0AC7               	incf	_pCDCDst^(0+384),f
  6278                           
  6279                           ;usb_device_cdc.c: 901: pCDCSrc.bRom++;
  6280  04A4  0AC9               	incf	_pCDCSrc^(0+384),f
  6281  04A5  1903               	skipnz
  6282  04A6  0ACA               	incf	(_pCDCSrc+1)^(0+384),f
  6283                           
  6284                           ;usb_device_cdc.c: 902: i--;
  6285  04A7  0021               	movlb	1	; select bank1
  6286  04A8  03EB               	decf	CDCTxService@i^(0+128),f
  6287  04A9                     l4593:	
  6288  04A9  0021               	movlb	1	; select bank1
  6289  04AA  086B               	movf	CDCTxService@i^(0+128),w
  6290  04AB  1903               	btfsc	3,2
  6291  04AC  2CC2               	goto	l4605
  6292  04AD  2C99               	goto	l4585
  6293  04AE                     l4595:	
  6294                           
  6295                           ;usb_device_cdc.c: 908: {;usb_device_cdc.c: 909: *pCDCDst.bRam = *pCDCSrc.bRam;
  6296  04AE  0023               	movlb	3	; select bank3
  6297  04AF  0847               	movf	_pCDCDst^(0+384),w
  6298  04B0  0086               	movwf	6
  6299  04B1  0187               	clrf	7
  6300  04B2  0849               	movf	_pCDCSrc^(0+384),w
  6301  04B3  0084               	movwf	4
  6302  04B4  084A               	movf	(_pCDCSrc+1)^(0+384),w
  6303  04B5  0085               	movwf	5
  6304  04B6  0800               	movf	0,w	;code access
  6305  04B7  0081               	movwf	1
  6306                           
  6307                           ;usb_device_cdc.c: 910: pCDCDst.bRam++;
  6308  04B8  0AC7               	incf	_pCDCDst^(0+384),f
  6309                           
  6310                           ;usb_device_cdc.c: 911: pCDCSrc.bRam++;
  6311  04B9  0AC9               	incf	_pCDCSrc^(0+384),f
  6312  04BA  1903               	skipnz
  6313  04BB  0ACA               	incf	(_pCDCSrc+1)^(0+384),f
  6314                           
  6315                           ;usb_device_cdc.c: 912: i--;
  6316  04BC  0021               	movlb	1	; select bank1
  6317  04BD  03EB               	decf	CDCTxService@i^(0+128),f
  6318  04BE                     l4603:	
  6319  04BE  0021               	movlb	1	; select bank1
  6320  04BF  086B               	movf	CDCTxService@i^(0+128),w
  6321  04C0  1D03               	btfss	3,2
  6322  04C1  2CAE               	goto	l4595
  6323  04C2                     l4605:	
  6324                           
  6325                           ;usb_device_cdc.c: 913: };usb_device_cdc.c: 914: };usb_device_cdc.c: 920: if(cdc_tx_len 
      +                          == 0)
  6326  04C2  0023               	movlb	3	; select bank3
  6327  04C3  0856               	movf	_cdc_tx_len^(0+384),w
  6328  04C4  1D03               	btfss	3,2
  6329  04C5  2CD0               	goto	l4613
  6330                           
  6331                           ;usb_device_cdc.c: 921: {;usb_device_cdc.c: 922: if(byte_to_send == 64)
  6332  04C6  3040               	movlw	64
  6333  04C7  0021               	movlb	1	; select bank1
  6334  04C8  066C               	xorwf	CDCTxService@byte_to_send^(0+128),w
  6335  04C9  1D03               	btfss	3,2
  6336  04CA  2CCD               	goto	l4611
  6337                           
  6338                           ;usb_device_cdc.c: 923: cdc_trf_state = 2;
  6339  04CB  3002               	movlw	2
  6340  04CC  2CCE               	goto	L5
  6341  04CD                     l4611:	
  6342                           
  6343                           ;usb_device_cdc.c: 924: else;usb_device_cdc.c: 925: cdc_trf_state = 3;
  6344  04CD  3003               	movlw	3
  6345  04CE                     L5:	
  6346  04CE  0023               	movlb	3	; select bank3
  6347  04CF  00D7               	movwf	_cdc_trf_state^(0+384)
  6348  04D0                     l4613:	
  6349                           
  6350                           ;usb_device_cdc.c: 926: };usb_device_cdc.c: 927: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(uint8_t*)&cdc_data_tx,byte_to_send);
  6351  04D0  0021               	movlb	1	; select bank1
  6352  04D1  30A0               	movlw	160
  6353  04D2  01E0               	clrf	USBTransferOnePacket@dir^(0+128)
  6354  04D3  0AE0               	incf	USBTransferOnePacket@dir^(0+128),f
  6355  04D4  00E1               	movwf	USBTransferOnePacket@data^(0+128)
  6356  04D5  01E2               	clrf	(USBTransferOnePacket@data+1)^(0+128)
  6357  04D6  086C               	movf	CDCTxService@byte_to_send^(0+128),w
  6358  04D7  00E3               	movwf	USBTransferOnePacket@len^(0+128)
  6359  04D8  3002               	movlw	2
  6360  04D9  24E4               	fcall	_USBTransferOnePacket
  6361  04DA  0861               	movf	(?_USBTransferOnePacket+1)^(0+128),w
  6362  04DB  0023               	movlb	3	; select bank3
  6363  04DC  00C4               	movwf	(_CDCDataInHandle+1)^(0+384)
  6364  04DD  0021               	movlb	1	; select bank1
  6365  04DE  0860               	movf	?_USBTransferOnePacket^(0+128),w
  6366  04DF  0023               	movlb	3	; select bank3
  6367  04E0  00C3               	movwf	_CDCDataInHandle^(0+384)
  6368  04E1                     l4615:	
  6369                           
  6370                           ;usb_device_cdc.c: 929: };usb_device_cdc.c: 931: {PIE2bits.USBIE = 1;};
  6371  04E1  0021               	movlb	1	; select bank1
  6372  04E2  1512               	bsf	18,2	;volatile
  6373  04E3  0008               	return
  6374  04E4                     __end_of_CDCTxService:	
  6375  04E4                     __ptext17:	
  6376 ;; *************** function _USBTransferOnePacket *****************
  6377 ;; Defined at:
  6378 ;;		line 995 in file "usb/usb_device.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  ep              1    wreg     unsigned char 
  6381 ;;  dir             1    0[BANK1 ] unsigned char 
  6382 ;;  data            2    1[BANK1 ] PTR unsigned char 
  6383 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  6384 ;;  len             1    3[BANK1 ] unsigned char 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  ep              1    8[BANK1 ] unsigned char 
  6387 ;;  handle          2    9[BANK1 ] PTR volatile struct __BD
  6388 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[BANK1 ] PTR void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 1F/1
  6395 ;;		On exit  : 1F/1
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6398 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;Total ram usage:       11 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:   10
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_getsUSBUSART
  6409 ;;		_CDCTxService
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           
  6414                           ;psect for function _USBTransferOnePacket
  6415  04E4                     _USBTransferOnePacket:	
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
  6419                           ;USBTransferOnePacket@ep stored from wreg
  6420  04E4  00E8               	movwf	USBTransferOnePacket@ep^(0+128)
  6421                           
  6422                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
  6423  04E5  0860               	movf	USBTransferOnePacket@dir^(0+128),w
  6424  04E6  1903               	btfsc	3,2
  6425  04E7  2CF1               	goto	l4217
  6426                           
  6427                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  6428  04E8  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  6429  04E9  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6430  04EA  0086               	movwf	6
  6431  04EB  3001               	movlw	1	; select bank3/4
  6432  04EC  0087               	movwf	7
  6433  04ED  3F40               	moviw [0]fsr1
  6434  04EE  00E9               	movwf	USBTransferOnePacket@handle^(0+128)
  6435  04EF  3F41               	moviw [1]fsr1
  6436  04F0  2CF9               	goto	L6
  6437  04F1                     l4217:	
  6438                           ;usb_device.c: 1004: }
  6439                           
  6440                           
  6441                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
  6442  04F1  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  6443  04F2  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6444  04F3  0086               	movwf	6
  6445  04F4  3001               	movlw	1	; select bank3/4
  6446  04F5  0087               	movwf	7
  6447  04F6  3F40               	moviw [0]fsr1
  6448  04F7  00E9               	movwf	USBTransferOnePacket@handle^(0+128)
  6449  04F8  3F41               	moviw [1]fsr1
  6450  04F9                     L6:	
  6451  04F9  00EA               	movwf	(USBTransferOnePacket@handle+1)^(0+128)
  6452                           
  6453                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
  6454  04FA  0469               	iorwf	USBTransferOnePacket@handle^(0+128),w
  6455  04FB  1D03               	btfss	3,2
  6456  04FC  2D00               	goto	l4225
  6457                           
  6458                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
  6459  04FD  01E0               	clrf	?_USBTransferOnePacket^(0+128)
  6460  04FE  01E1               	clrf	(?_USBTransferOnePacket+1)^(0+128)
  6461  04FF  0008               	return
  6462  0500                     l4225:	
  6463                           
  6464                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
  6465  0500  0861               	movf	USBTransferOnePacket@data^(0+128),w
  6466  0501  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  6467  0502  307F               	movlw	127
  6468  0503  0562               	andwf	(USBTransferOnePacket@data+1)^(0+128),w
  6469  0504  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  6470  0505  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  6471  0506  0086               	movwf	6
  6472  0507  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6473  0508  0087               	movwf	7
  6474  0509  3142               	addfsr 1,2
  6475  050A  0864               	movf	??_USBTransferOnePacket^(0+128),w
  6476  050B  3FC0               	movwi [0]fsr1
  6477  050C  0865               	movf	(??_USBTransferOnePacket^(0+128)+1),w
  6478  050D  3FC1               	movwi [1]fsr1
  6479                           
  6480                           ;usb_device.c: 1030: handle->CNT = len;
  6481  050E  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  6482  050F  3E01               	addlw	1
  6483  0510  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  6484  0511  3000               	movlw	0
  6485  0512  3D6A               	addwfc	(USBTransferOnePacket@handle+1)^(0+128),w
  6486  0513  00E5               	movwf	(??_USBTransferOnePacket+1)^(0+128)
  6487  0514  0864               	movf	??_USBTransferOnePacket^(0+128),w
  6488  0515  0086               	movwf	6
  6489  0516  0865               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  6490  0517  0087               	movwf	7
  6491  0518  0863               	movf	USBTransferOnePacket@len^(0+128),w
  6492  0519  0081               	movwf	1
  6493                           
  6494                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  6495  051A  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  6496  051B  0086               	movwf	6
  6497  051C  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6498  051D  0087               	movwf	7
  6499  051E  3040               	movlw	64
  6500  051F  0581               	andwf	1,f
  6501                           
  6502                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  6503  0520  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  6504  0521  0086               	movwf	6
  6505  0522  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6506  0523  0087               	movwf	7
  6507  0524  1581               	bsf	1,3
  6508                           
  6509                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  6510  0525  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  6511  0526  0086               	movwf	6
  6512  0527  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6513  0528  0087               	movwf	7
  6514  0529  1781               	bsf	1,7
  6515                           
  6516                           ;usb_device.c: 1036: if(dir != 0)
  6517  052A  0860               	movf	USBTransferOnePacket@dir^(0+128),w
  6518  052B  1903               	btfsc	3,2
  6519  052C  2D43               	goto	l4235
  6520                           
  6521                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
  6522  052D  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  6523  052E  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6524  052F  0086               	movwf	6
  6525  0530  3001               	movlw	1	; select bank3/4
  6526  0531  0087               	movwf	7
  6527  0532  3F40               	moviw [0]fsr1
  6528  0533  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  6529  0534  3F41               	moviw [1]fsr1
  6530  0535  00E5               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  6531  0536  3004               	movlw	4
  6532  0537  0664               	xorwf	??_USBTransferOnePacket^(0+128),w
  6533  0538  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  6534  0539  0865               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  6535  053A  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  6536  053B  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  6537  053C  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  6538  053D  0086               	movwf	6
  6539  053E  0866               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  6540  053F  3FC0               	movwi [0]fsr1
  6541  0540  0867               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  6542  0541  3FC1               	movwi [1]fsr1
  6543                           
  6544                           ;usb_device.c: 1040: }
  6545  0542  2D58               	goto	l4237
  6546  0543                     l4235:	
  6547                           
  6548                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
  6549  0543  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  6550  0544  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6551  0545  0086               	movwf	6
  6552  0546  3001               	movlw	1	; select bank3/4
  6553  0547  0087               	movwf	7
  6554  0548  3F40               	moviw [0]fsr1
  6555  0549  00E4               	movwf	??_USBTransferOnePacket^(0+128)
  6556  054A  3F41               	moviw [1]fsr1
  6557  054B  00E5               	movwf	(??_USBTransferOnePacket^(0+128)+1)
  6558  054C  3004               	movlw	4
  6559  054D  0664               	xorwf	??_USBTransferOnePacket^(0+128),w
  6560  054E  00E6               	movwf	(??_USBTransferOnePacket+2)^(0+128)
  6561  054F  0865               	movf	(??_USBTransferOnePacket+1)^(0+128),w
  6562  0550  00E7               	movwf	(??_USBTransferOnePacket+3)^(0+128)
  6563  0551  3568               	lslf	USBTransferOnePacket@ep^(0+128),w
  6564  0552  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  6565  0553  0086               	movwf	6
  6566  0554  0866               	movf	(??_USBTransferOnePacket+2)^(0+128),w
  6567  0555  3FC0               	movwi [0]fsr1
  6568  0556  0867               	movf	(??_USBTransferOnePacket+3)^(0+128),w
  6569  0557  3FC1               	movwi [1]fsr1
  6570  0558                     l4237:	
  6571                           
  6572                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
  6573  0558  086A               	movf	(USBTransferOnePacket@handle+1)^(0+128),w
  6574  0559  00E1               	movwf	(?_USBTransferOnePacket+1)^(0+128)
  6575  055A  0869               	movf	USBTransferOnePacket@handle^(0+128),w
  6576  055B  00E0               	movwf	?_USBTransferOnePacket^(0+128)
  6577  055C  0008               	return
  6578  055D                     __end_of_USBTransferOnePacket:	
  6579                           
  6580                           	psect	intentry
  6581  0004                     __pintentry:	
  6582 ;; *************** function _SYS_InterruptHigh *****************
  6583 ;; Defined at:
  6584 ;;		line 110 in file "system.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;		None
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  1    wreg      void 
  6591 ;; Registers used:
  6592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6593 ;; Tracked objects:
  6594 ;;		On entry : 0/0
  6595 ;;		On exit  : 1F/0
  6596 ;;		Unchanged: 0/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;Total ram usage:        0 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    9
  6605 ;; This function calls:
  6606 ;;		_USBDeviceTasks
  6607 ;; This function is called by:
  6608 ;;		Interrupt level 1
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612  0004                     _SYS_InterruptHigh:	
  6613                           
  6614                           ;incstack = 0
  6615  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6616                           
  6617                           ; Regs used in _SYS_InterruptHigh: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6618  0005  3180               	pagesel	$
  6619                           
  6620                           ;system.c: 113: USBDeviceTasks();
  6621  0006  318B  23BD         	fcall	_USBDeviceTasks
  6622  0008  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6623  0009  0009               	retfie
  6624  000A                     __end_of_SYS_InterruptHigh:	
  6625                           
  6626                           	psect	text26
  6627  0801                     __ptext26:	
  6628 ;; *************** function _USBCtrlTrfSetupHandler *****************
  6629 ;; Defined at:
  6630 ;;		line 2465 in file "usb/usb_device.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;		None
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      void 
  6637 ;; Registers used:
  6638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/3
  6641 ;;		On exit  : 1F/3
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;Total ram usage:        0 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:    6
  6651 ;; This function calls:
  6652 ;;		_USBCheckStdRequest
  6653 ;;		_USBCtrlEPServiceComplete
  6654 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6655 ;; This function is called by:
  6656 ;;		_USBCtrlEPService
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           
  6661                           ;psect for function _USBCtrlTrfSetupHandler
  6662  0801                     _USBCtrlTrfSetupHandler:	
  6663  0801                     i1l5483:	
  6664                           ;incstack = 0
  6665                           ; Regs used in _USBCtrlTrfSetupHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6666                           
  6667                           
  6668                           ;usb_device.c: 2470: shortPacketStatus = 0;
  6669  0801  0023               	movlb	3	; select bank3
  6670  0802  01E6               	clrf	_shortPacketStatus^(0+384)	;volatile
  6671                           
  6672                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  6673  0803  01DE               	clrf	_USBDeferStatusStagePacket^(0+384)	;volatile
  6674                           
  6675                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  6676  0804  01DB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  6677                           
  6678                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  6679  0805  01DA               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  6680                           
  6681                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  6682  0806  01E0               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  6683                           
  6684                           ;usb_device.c: 2475: controlTransferState = 0;
  6685  0807  01E5               	clrf	_controlTransferState^(0+384)	;volatile
  6686                           
  6687                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6688  0808  0827               	movf	_pBDTEntryIn^(0+384),w
  6689  0809  0086               	movwf	6
  6690  080A  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6691  080B  0087               	movwf	7
  6692  080C  3004               	movlw	4
  6693  080D  1381               	bcf	1,7
  6694                           
  6695                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6696  080E  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6697  080F  00A7               	movwf	_pBDTEntryIn^(0+384)
  6698                           
  6699                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  6700  0810  0086               	movwf	6
  6701  0811  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  6702  0812  0087               	movwf	7
  6703  0813  3004               	movlw	4
  6704  0814  1381               	bcf	1,7
  6705                           
  6706                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  6707  0815  0627               	xorwf	_pBDTEntryIn^(0+384),w
  6708  0816  00A7               	movwf	_pBDTEntryIn^(0+384)
  6709                           
  6710                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  6711  0817  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  6712  0818  0086               	movwf	6
  6713  0819  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  6714  081A  0087               	movwf	7
  6715  081B  1381               	bcf	1,7
  6716                           
  6717                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  6718  081C  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  6719                           
  6720                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  6721  081D  01B6               	clrf	(_inPipes^(0+384)+3)	;volatile
  6722  081E  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  6723                           
  6724                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  6725  081F  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
  6726                           
  6727                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  6728  0820  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
  6729  0821  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
  6730                           
  6731                           ;usb_device.c: 2500: USBCheckStdRequest();
  6732  0822  202F  3188         	fcall	_USBCheckStdRequest
  6733                           
  6734                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  6735  0824  3003               	movlw	3
  6736  0825  0020               	movlb	0	; select bank0
  6737  0826  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6738  0827  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6739  0828  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6740  0829  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6741  082A  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6742  082B  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6743  082C  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  6744                           
  6745                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  6746  082E  29AA               	ljmp	i1l4059
  6747  082F                     __end_of_USBCtrlTrfSetupHandler:	
  6748  082F                     __ptext29:	
  6749 ;; *************** function _USBCheckStdRequest *****************
  6750 ;; Defined at:
  6751 ;;		line 2686 in file "usb/usb_device.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 1F/3
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;Total ram usage:        0 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    5
  6772 ;; This function calls:
  6773 ;;		_USBStdFeatureReqHandler
  6774 ;;		_USBStdGetDscHandler
  6775 ;;		_USBStdGetStatusHandler
  6776 ;;		_USBStdSetCfgHandler
  6777 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6778 ;; This function is called by:
  6779 ;;		_USBCtrlTrfSetupHandler
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           
  6784                           ;psect for function _USBCheckStdRequest
  6785  082F                     _USBCheckStdRequest:	
  6786                           
  6787                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  6788                           
  6789                           ;incstack = 0
  6790                           ; Regs used in _USBCheckStdRequest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6791  082F  0020               	movlb	0	; select bank0
  6792  0830  0E50               	swapf	80,w	;volatile
  6793  0831  0C89               	rrf	9,f
  6794  0832  3903               	andlw	3
  6795  0833  1D03               	btfss	3,2
  6796  0834  0008               	return
  6797                           
  6798                           ;usb_device.c: 2728: break;
  6799  0835  0851               	movf	81,w	;volatile
  6800                           
  6801                           ; Switch size 1, requested type "speed"
  6802                           ; Number of cases is 11, Range of values is 0 to 12
  6803                           ; switch strategies available:
  6804                           ; Name         Instructions Cycles
  6805                           ; direct_byte           32     6 (fixed)
  6806                           ; simple_byte           34    18 (average)
  6807                           ; jumptable            260     6 (fixed)
  6808                           ;	Chosen strategy is direct_byte
  6809  0836  0084               	movwf	4
  6810  0837  300D               	movlw	13
  6811  0838  0204               	subwf	4,w
  6812  0839  1803               	skipnc
  6813  083A  0008               	return
  6814  083B  3186               	movlp	high i1S5901
  6815  083C  3504               	lslf	4,w
  6816  083D  3ED5               	addlw	low i1S5901
  6817  083E  0082               	movwf	2
  6818  083F                     i1l451:	
  6819  083F  0008               	return
  6820  0840                     i1l453:	
  6821                           ;usb_device.c: 2691: {;usb_device.c: 2692: case 5:
  6822                           
  6823                           
  6824                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  6825  0840  0023               	movlb	3	; select bank3
  6826  0841  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6827                           
  6828                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  6829  0842  3008               	movlw	8
  6830  0843  0020               	movlb	0	; select bank0
  6831  0844  00EF               	movwf	_USBDeviceState	;volatile
  6832                           
  6833                           ;usb_device.c: 2696: break;
  6834  0845  0008               	return
  6835  0846                     i1l5445:	
  6836                           
  6837                           ;usb_device.c: 2698: USBStdGetDscHandler();
  6838  0846  2871               	ljmp	i1l3919
  6839  0847                     i1l5447:	
  6840                           ;usb_device.c: 2699: break;
  6841                           
  6842                           
  6843                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  6844  0847  292E               	ljmp	i1l5387
  6845  0848                     i1l5449:	
  6846                           ;usb_device.c: 2702: break;
  6847                           
  6848                           
  6849                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  6850  0848  30EB               	movlw	low _USBActiveConfiguration
  6851  0849  0023               	movlb	3	; select bank3
  6852  084A  00B3               	movwf	_inPipes^(0+384)	;volatile
  6853  084B  3001               	movlw	high _USBActiveConfiguration
  6854  084C  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6855                           
  6856                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6857  084D  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6858                           
  6859                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  6860  084E  3001               	movlw	1
  6861  084F  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6862                           
  6863                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  6864  0850  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6865                           
  6866                           ;usb_device.c: 2708: break;
  6867  0851  0008               	return
  6868  0852                     i1l5457:	
  6869                           
  6870                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  6871  0852  28E1               	ljmp	i1l3949
  6872  0853                     i1l5459:	
  6873                           ;usb_device.c: 2711: break;
  6874                           
  6875                           
  6876                           ;usb_device.c: 2713: case 3:;usb_device.c: 2714: USBStdFeatureReqHandler();
  6877  0853  2ABA               	ljmp	i1l3977
  6878  0854                     i1l5461:	
  6879                           ;usb_device.c: 2715: break;
  6880                           
  6881                           
  6882                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  6883  0854  0854               	movf	84,w	;volatile
  6884  0855  3EE8               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6885  0856  0023               	movlb	3	; select bank3
  6886  0857  00B3               	movwf	_inPipes^(0+384)	;volatile
  6887  0858  3001               	movlw	1
  6888  0859  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  6889                           
  6890                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6891  085A  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  6892                           
  6893                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  6894  085B  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6895                           
  6896                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  6897  085C  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6898                           
  6899                           ;usb_device.c: 2721: break;
  6900  085D  0008               	return
  6901  085E                     i1l462:	
  6902                           ;usb_device.c: 2722: case 11:
  6903                           
  6904                           
  6905                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  6906  085E  0023               	movlb	3	; select bank3
  6907  085F  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  6908                           
  6909                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  6910  0860  0020               	movlb	0	; select bank0
  6911  0861  0854               	movf	84,w	;volatile
  6912  0862  3EE8               	addlw	(low (_USBAlternateInterface| (0+256)))& (0+255)
  6913  0863  0086               	movwf	6
  6914  0864  3001               	movlw	1	; select bank3/4
  6915  0865  0087               	movwf	7
  6916  0866  0852               	movf	82,w	;volatile
  6917  0867  0081               	movwf	1
  6918                           
  6919                           ;usb_device.c: 2725: break;
  6920  0868  0008               	return
  6921  0869                     i1l5471:	
  6922                           
  6923                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  6924  0869  3002               	movlw	2
  6925  086A  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  6926  086B  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  6927  086C  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  6928  086D  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  6929  086E  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  6930  086F  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  6931  0870  2C5D               	ljmp	i1l3721
  6932  0871                     __end_of_USBCheckStdRequest:	
  6933  0871                     __ptext33:	
  6934 ;; *************** function _USBStdGetDscHandler *****************
  6935 ;; Defined at:
  6936 ;;		line 2043 in file "usb/usb_device.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6945 ;; Tracked objects:
  6946 ;;		On entry : 1C/0
  6947 ;;		On exit  : 1C/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;Total ram usage:        3 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_USBCheckStdRequest
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           
  6964                           ;psect for function _USBStdGetDscHandler
  6965  0871                     _USBStdGetDscHandler:	
  6966  0871                     i1l3919:	
  6967                           ;incstack = 0
  6968                           ; Regs used in _USBStdGetDscHandler: [wreg-fsr0h+status,2+status,0+pclath]
  6969                           
  6970                           
  6971                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6972  0871  3080               	movlw	128
  6973  0872  0020               	movlb	0	; select bank0
  6974  0873  0650               	xorwf	80,w	;volatile
  6975  0874  1D03               	btfss	3,2
  6976  0875  0008               	return
  6977                           
  6978                           ;usb_device.c: 2046: {;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6979  0876  30C0               	movlw	192
  6980  0877  0023               	movlb	3	; select bank3
  6981  0878  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
  6982                           
  6983                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6984  0879  28D4               	goto	i1l3947
  6985  087A                     i1l3923:	
  6986                           
  6987                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6988  087A  30C1               	movlw	low (_device_dsc| (0+32768))
  6989  087B  0023               	movlb	3	; select bank3
  6990  087C  00B3               	movwf	_inPipes^(0+384)	;volatile
  6991  087D  3098               	movlw	high (_device_dsc| (0+32768))
  6992  087E  00B4               	movwf	(_inPipes^(0+384)+1)	;volatile
  6993                           
  6994                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6995  087F  3012               	movlw	18
  6996  0880  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  6997  0881  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  6998                           
  6999                           ;usb_device.c: 2058: break;
  7000  0882  0008               	return
  7001  0883                     i1l3925:	
  7002                           
  7003                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  7004  0883  0852               	movf	82,w	;volatile
  7005  0884  1D03               	btfss	3,2
  7006  0885  28AF               	goto	i1l3933
  7007                           
  7008                           ;usb_device.c: 2064: {;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
  7009  0886  0852               	movf	82,w	;volatile
  7010  0887  00F0               	movwf	??_USBStdGetDscHandler
  7011  0888  30F4               	movlw	low (_USB_CD_Ptr| (0+32768))
  7012  0889  01F1               	clrf	??_USBStdGetDscHandler+1
  7013  088A  35F0               	lslf	??_USBStdGetDscHandler,f
  7014  088B  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7015  088C  0770               	addwf	??_USBStdGetDscHandler,w
  7016  088D  0084               	movwf	4
  7017  088E  3098               	movlw	high (_USB_CD_Ptr| (0+32768))
  7018  088F  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7019  0890  0085               	movwf	5
  7020  0891  3F00               	moviw [0]fsr0
  7021  0892  0023               	movlb	3	; select bank3
  7022  0893  00B3               	movwf	_inPipes^(0+384)	;volatile
  7023  0894  3F01               	moviw [1]fsr0
  7024  0895  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7025                           
  7026                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  7027  0896  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7028  0897  00F1               	movwf	??_USBStdGetDscHandler+1
  7029  0898  0833               	movf	_inPipes^(0+384),w	;volatile
  7030  0899  00F0               	movwf	??_USBStdGetDscHandler
  7031  089A  3E02               	addlw	2
  7032  089B  0084               	movwf	4
  7033  089C  0871               	movf	??_USBStdGetDscHandler+1,w
  7034  089D  1803               	skipnc
  7035  089E  0A71               	incf	??_USBStdGetDscHandler+1,w
  7036  089F  0085               	movwf	5
  7037  08A0  0800               	movf	0,w	;code access
  7038  08A1  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7039                           
  7040                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  7041  08A2  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7042  08A3  00F1               	movwf	??_USBStdGetDscHandler+1
  7043  08A4  0833               	movf	_inPipes^(0+384),w	;volatile
  7044  08A5  00F0               	movwf	??_USBStdGetDscHandler
  7045  08A6  3E03               	addlw	3
  7046  08A7  0084               	movwf	4
  7047  08A8  0871               	movf	??_USBStdGetDscHandler+1,w
  7048  08A9  1803               	skipnc
  7049  08AA  0A71               	incf	??_USBStdGetDscHandler+1,w
  7050  08AB  0085               	movwf	5
  7051  08AC  0800               	movf	0,w	;code access
  7052  08AD  00B7               	movwf	(_inPipes^(0+384)+4)	;volatile
  7053                           
  7054                           ;usb_device.c: 2076: }
  7055  08AE  0008               	return
  7056  08AF                     i1l3933:	
  7057                           
  7058                           ;usb_device.c: 2077: else;usb_device.c: 2078: {;usb_device.c: 2079: inPipes[0].info.Val 
      +                          = 0;
  7059  08AF  0023               	movlb	3	; select bank3
  7060  08B0  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7061  08B1  0008               	return
  7062  08B2                     i1l3935:	
  7063                           
  7064                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  7065  08B2  3003               	movlw	3
  7066  08B3  0252               	subwf	82,w	;volatile
  7067  08B4  1803               	skipnc
  7068  08B5  28CE               	goto	i1l3941
  7069                           
  7070                           ;usb_device.c: 2087: {;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
  7071  08B6  0852               	movf	82,w	;volatile
  7072  08B7  00F0               	movwf	??_USBStdGetDscHandler
  7073  08B8  30E4               	movlw	low (_USB_SD_Ptr| (0+32768))
  7074  08B9  01F1               	clrf	??_USBStdGetDscHandler+1
  7075  08BA  35F0               	lslf	??_USBStdGetDscHandler,f
  7076  08BB  0DF1               	rlf	??_USBStdGetDscHandler+1,f
  7077  08BC  0770               	addwf	??_USBStdGetDscHandler,w
  7078  08BD  0084               	movwf	4
  7079  08BE  3098               	movlw	high (_USB_SD_Ptr| (0+32768))
  7080  08BF  3D71               	addwfc	??_USBStdGetDscHandler+1,w
  7081  08C0  0085               	movwf	5
  7082  08C1  3F00               	moviw [0]fsr0
  7083  08C2  0023               	movlb	3	; select bank3
  7084  08C3  00B3               	movwf	_inPipes^(0+384)	;volatile
  7085  08C4  3F01               	moviw [1]fsr0
  7086  08C5  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
  7087                           
  7088                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  7089  08C6  0833               	movf	_inPipes^(0+384),w	;volatile
  7090  08C7  0084               	movwf	4
  7091  08C8  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
  7092  08C9  0085               	movwf	5
  7093  08CA  0800               	movf	0,w	;code access
  7094  08CB  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7095  08CC  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
  7096                           
  7097                           ;usb_device.c: 2092: }
  7098  08CD  0008               	return
  7099  08CE                     i1l3941:	
  7100                           
  7101                           ;usb_device.c: 2102: else;usb_device.c: 2103: {;usb_device.c: 2104: inPipes[0].info.Val 
      +                          = 0;
  7102  08CE  0023               	movlb	3	; select bank3
  7103  08CF  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7104  08D0  0008               	return
  7105  08D1                     i1l3943:	
  7106                           
  7107                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  7108  08D1  0023               	movlb	3	; select bank3
  7109  08D2  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
  7110                           
  7111                           ;usb_device.c: 2109: break;
  7112  08D3  0008               	return
  7113  08D4                     i1l3947:	
  7114  08D4  0020               	movlb	0	; select bank0
  7115  08D5  0853               	movf	83,w	;volatile
  7116                           
  7117                           ; Switch size 1, requested type "speed"
  7118                           ; Number of cases is 3, Range of values is 1 to 3
  7119                           ; switch strategies available:
  7120                           ; Name         Instructions Cycles
  7121                           ; simple_byte           10     6 (average)
  7122                           ; direct_byte           15     9 (fixed)
  7123                           ; jumptable            263     9 (fixed)
  7124                           ;	Chosen strategy is simple_byte
  7125  08D6  3A01               	xorlw	1	; case 1
  7126  08D7  1903               	skipnz
  7127  08D8  287A               	goto	i1l3923
  7128  08D9  3A03               	xorlw	3	; case 2
  7129  08DA  1903               	skipnz
  7130  08DB  2883               	goto	i1l3925
  7131  08DC  3A01               	xorlw	1	; case 3
  7132  08DD  1903               	skipnz
  7133  08DE  28B2               	goto	i1l3935
  7134  08DF  28D1               	goto	i1l3943
  7135  08E0  0008               	return
  7136  08E1                     __end_of_USBStdGetDscHandler:	
  7137  08E1                     __ptext32:	
  7138 ;; *************** function _USBStdGetStatusHandler *****************
  7139 ;; Defined at:
  7140 ;;		line 2129 in file "usb/usb_device.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  p               2    0[COMMON] PTR struct __BDT
  7145 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      void 
  7148 ;; Registers used:
  7149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7150 ;; Tracked objects:
  7151 ;;		On entry : 1C/0
  7152 ;;		On exit  : 1F/3
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;Total ram usage:        2 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_USBCheckStdRequest
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _USBStdGetStatusHandler
  7170  08E1                     _USBStdGetStatusHandler:	
  7171  08E1                     i1l3949:	
  7172                           ;incstack = 0
  7173                           ; Regs used in _USBStdGetStatusHandler: [wreg-fsr1h+status,2+status,0]
  7174                           
  7175                           
  7176                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  7177  08E1  0020               	movlb	0	; select bank0
  7178  08E2  01D8               	clrf	88	;volatile
  7179                           
  7180                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  7181  08E3  01D9               	clrf	89	;volatile
  7182                           
  7183                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  7184  08E4  2919               	goto	i1l3969
  7185  08E5                     i1l391:	
  7186                           ;usb_device.c: 2135: {;usb_device.c: 2136: case (0x00):
  7187                           
  7188                           
  7189                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  7190  08E5  0023               	movlb	3	; select bank3
  7191  08E6  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7192                           
  7193                           ;usb_device.c: 2145: };usb_device.c: 2147: if(RemoteWakeup == 1)
  7194                           
  7195                           ;usb_device.c: 2142: if(0 == 1)
  7196  08E7  0B63               	decfsz	_RemoteWakeup^(0+384),w	;volatile
  7197  08E8  2924               	goto	i1l394
  7198                           
  7199                           ;usb_device.c: 2148: {;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  7200  08E9  0020               	movlb	0	; select bank0
  7201  08EA  14D8               	bsf	88,1	;volatile
  7202  08EB  2924               	goto	i1l394
  7203  08EC                     i1l395:	
  7204                           ;usb_device.c: 2152: case (0x01):
  7205                           
  7206                           
  7207                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  7208  08EC  0023               	movlb	3	; select bank3
  7209  08ED  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7210                           
  7211                           ;usb_device.c: 2154: break;
  7212  08EE  2924               	goto	i1l394
  7213  08EF                     i1l396:	
  7214                           ;usb_device.c: 2155: case (0x02):
  7215                           
  7216                           
  7217                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  7218  08EF  0023               	movlb	3	; select bank3
  7219  08F0  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7220                           
  7221                           ;usb_device.c: 2160: {;usb_device.c: 2161: BDT_ENTRY *p;;usb_device.c: 2163: if(SetupPkt
      +                          .EPDir == 0)
  7222  08F1  0020               	movlb	0	; select bank0
  7223  08F2  1BD4               	btfsc	84,7	;volatile
  7224  08F3  28FF               	goto	i1l3959
  7225                           
  7226                           ;usb_device.c: 2164: {;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  7227  08F4  0854               	movf	84,w	;volatile
  7228  08F5  390F               	andlw	15
  7229  08F6  0709               	addwf	9,w
  7230  08F7  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  7231  08F8  0086               	movwf	6
  7232  08F9  3001               	movlw	1	; select bank3/4
  7233  08FA  0087               	movwf	7
  7234  08FB  3F40               	moviw [0]fsr1
  7235  08FC  00F0               	movwf	USBStdGetStatusHandler@p
  7236  08FD  3F41               	moviw [1]fsr1
  7237  08FE  2909               	goto	L8
  7238  08FF                     i1l3959:	
  7239                           ;usb_device.c: 2166: }
  7240                           
  7241                           
  7242                           ;usb_device.c: 2167: else;usb_device.c: 2168: {;usb_device.c: 2169: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
  7243  08FF  0854               	movf	84,w	;volatile
  7244  0900  390F               	andlw	15
  7245  0901  0709               	addwf	9,w
  7246  0902  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  7247  0903  0086               	movwf	6
  7248  0904  3001               	movlw	1	; select bank3/4
  7249  0905  0087               	movwf	7
  7250  0906  3F40               	moviw [0]fsr1
  7251  0907  00F0               	movwf	USBStdGetStatusHandler@p
  7252  0908  3F41               	moviw [1]fsr1
  7253  0909                     L8:	
  7254  0909  00F1               	movwf	USBStdGetStatusHandler@p+1
  7255                           
  7256                           ;usb_device.c: 2170: };usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
  7257  090A  0870               	movf	USBStdGetStatusHandler@p,w
  7258  090B  0086               	movwf	6
  7259  090C  0871               	movf	USBStdGetStatusHandler@p+1,w
  7260  090D  0087               	movwf	7
  7261  090E  1F81               	btfss	1,7
  7262  090F  2924               	goto	i1l394
  7263  0910  0870               	movf	USBStdGetStatusHandler@p,w
  7264  0911  0086               	movwf	6
  7265  0912  0871               	movf	USBStdGetStatusHandler@p+1,w
  7266  0913  0087               	movwf	7
  7267  0914  1D01               	btfss	1,2
  7268  0915  2924               	goto	i1l394
  7269                           
  7270                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  7271  0916  3001               	movlw	1
  7272  0917  00D8               	movwf	88	;volatile
  7273  0918  2924               	goto	i1l394
  7274  0919                     i1l3969:	
  7275  0919  0850               	movf	80,w	;volatile
  7276  091A  391F               	andlw	31
  7277                           
  7278                           ; Switch size 1, requested type "speed"
  7279                           ; Number of cases is 3, Range of values is 0 to 2
  7280                           ; switch strategies available:
  7281                           ; Name         Instructions Cycles
  7282                           ; simple_byte           10     6 (average)
  7283                           ; direct_byte           12     6 (fixed)
  7284                           ; jumptable            260     6 (fixed)
  7285                           ;	Chosen strategy is simple_byte
  7286  091B  1903               	skipnz
  7287  091C  28E5               	goto	i1l391
  7288  091D  3A01               	xorlw	1	; case 1
  7289  091E  1903               	skipnz
  7290  091F  28EC               	goto	i1l395
  7291  0920  3A03               	xorlw	3	; case 2
  7292  0921  1903               	skipnz
  7293  0922  28EF               	goto	i1l396
  7294  0923  2924               	goto	i1l394
  7295  0924                     i1l394:	
  7296                           
  7297                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  7298  0924  0023               	movlb	3	; select bank3
  7299  0925  1FB5               	btfss	(_inPipes^(0+384)+2),7	;volatile
  7300  0926  0008               	return
  7301                           
  7302                           ;usb_device.c: 2179: {;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
  7303  0927  3058               	movlw	88
  7304  0928  00B3               	movwf	_inPipes^(0+384)	;volatile
  7305  0929  01B4               	clrf	(_inPipes+1)^(0+384)	;volatile
  7306                           
  7307                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7308  092A  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
  7309                           
  7310                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  7311  092B  3002               	movlw	2
  7312  092C  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7313  092D  0008               	return
  7314  092E                     __end_of_USBStdGetStatusHandler:	
  7315  092E                     __ptext30:	
  7316 ;; *************** function _USBStdSetCfgHandler *****************
  7317 ;; Defined at:
  7318 ;;		line 1968 in file "usb/usb_device.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  p               2    6[BANK0 ] PTR unsigned char 
  7323 ;;		 -> UEP1(1), 
  7324 ;;  i               1    8[BANK0 ] unsigned char 
  7325 ;;  i               1    9[BANK0 ] unsigned char 
  7326 ;; Return value:  Size  Location     Type
  7327 ;;                  1    wreg      void 
  7328 ;; Registers used:
  7329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7330 ;; Tracked objects:
  7331 ;;		On entry : 1C/0
  7332 ;;		On exit  : 1F/0
  7333 ;;		Unchanged: 0/0
  7334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7339 ;;Total ram usage:        4 bytes
  7340 ;; Hardware stack levels used:    1
  7341 ;; Hardware stack levels required when called:    4
  7342 ;; This function calls:
  7343 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7344 ;;		_memset
  7345 ;; This function is called by:
  7346 ;;		_USBCheckStdRequest
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           
  7350                           
  7351                           ;psect for function _USBStdSetCfgHandler
  7352  092E                     _USBStdSetCfgHandler:	
  7353  092E                     i1l5387:	
  7354                           ;incstack = 0
  7355                           ; Regs used in _USBStdSetCfgHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7356                           
  7357                           
  7358                           ;usb_device.c: 1970: uint8_t i;;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  7359  092E  0023               	movlb	3	; select bank3
  7360  092F  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  7361                           
  7362                           ;usb_device.c: 1976: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 
      +                          0; };
  7363  0930  300E               	movlw	14
  7364  0931  0020               	movlb	0	; select bank0
  7365  0932  00E7               	movwf	USBStdSetCfgHandler@p+1
  7366  0933  3099               	movlw	153
  7367  0934  00E6               	movwf	USBStdSetCfgHandler@p
  7368  0935  01E8               	clrf	USBStdSetCfgHandler@i_1618
  7369  0936                     i1l5395:	
  7370  0936  0866               	movf	USBStdSetCfgHandler@p,w
  7371  0937  0086               	movwf	6
  7372  0938  0867               	movf	USBStdSetCfgHandler@p+1,w
  7373  0939  0087               	movwf	7
  7374  093A  0181               	clrf	1
  7375  093B  0AE6               	incf	USBStdSetCfgHandler@p,f
  7376  093C  1903               	skipnz
  7377  093D  0AE7               	incf	USBStdSetCfgHandler@p+1,f
  7378  093E  3002               	movlw	2
  7379  093F  0AE8               	incf	USBStdSetCfgHandler@i_1618,f
  7380  0940  0268               	subwf	USBStdSetCfgHandler@i_1618,w
  7381  0941  1C03               	skipc
  7382  0942  2936               	goto	i1l5395
  7383                           
  7384                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  7385  0943  3020               	movlw	32
  7386  0944  00F0               	movwf	memset@p1
  7387  0945  3030               	movlw	48
  7388  0946  01F1               	clrf	memset@p1+1
  7389  0947  01F2               	clrf	memset@c
  7390  0948  01F3               	clrf	memset@c+1
  7391  0949  00F4               	movwf	memset@n
  7392  094A  01F5               	clrf	memset@n+1
  7393  094B  2193  3188         	fcall	_memset
  7394                           
  7395                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  7396  094D  003D               	movlb	29	; select bank29
  7397  094E  170E               	bsf	14,6	;volatile
  7398                           
  7399                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  7400  094F  0020               	movlb	0	; select bank0
  7401  0950  01E9               	clrf	USBStdSetCfgHandler@i
  7402  0951                     i1l5413:	
  7403                           
  7404                           ;usb_device.c: 1988: {;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  7405  0951  0869               	movf	USBStdSetCfgHandler@i,w
  7406  0952  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  7407  0953  0086               	movwf	6
  7408  0954  3001               	movlw	1	; select bank3/4
  7409  0955  0087               	movwf	7
  7410  0956  0181               	clrf	1
  7411                           
  7412                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  7413  0957  0869               	movf	USBStdSetCfgHandler@i,w
  7414  0958  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  7415  0959  0086               	movwf	6
  7416  095A  3003               	movlw	3
  7417  095B  0181               	clrf	1
  7418  095C  0AE9               	incf	USBStdSetCfgHandler@i,f
  7419  095D  0269               	subwf	USBStdSetCfgHandler@i,w
  7420  095E  1C03               	skipc
  7421  095F  2951               	goto	i1l5413
  7422                           
  7423                           ;usb_device.c: 1991: };usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  7424  0960  30E8               	movlw	low _USBAlternateInterface
  7425  0961  00F0               	movwf	memset@p1
  7426  0962  3001               	movlw	high _USBAlternateInterface
  7427  0963  00F1               	movwf	memset@p1+1
  7428  0964  3002               	movlw	2
  7429  0965  01F2               	clrf	memset@c
  7430  0966  01F3               	clrf	memset@c+1
  7431  0967  00F4               	movwf	memset@n
  7432  0968  01F5               	clrf	memset@n+1
  7433  0969  2193  3188         	fcall	_memset
  7434                           
  7435                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  7436  096B  003D               	movlb	29	; select bank29
  7437  096C  130E               	bcf	14,6	;volatile
  7438                           
  7439                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7440  096D  3028               	movlw	40
  7441  096E  0023               	movlb	3	; select bank3
  7442  096F  00A7               	movwf	_pBDTEntryIn^(0+384)
  7443  0970  3020               	movlw	32
  7444  0971  01A8               	clrf	(_pBDTEntryIn+1)^(0+384)
  7445                           
  7446                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  7447  0972  00E7               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  7448                           
  7449                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7450  0973  00CB               	movwf	_pBDTEntryEP0OutNext^(0+384)
  7451  0974  39FF               	andlw	255
  7452  0975  1D03               	skipz
  7453  0976  3000               	movlw	0
  7454  0977  00CC               	movwf	(_pBDTEntryEP0OutNext+1)^(0+384)
  7455                           
  7456                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  7457  0978  0020               	movlb	0	; select bank0
  7458  0979  0852               	movf	82,w	;volatile
  7459  097A  0023               	movlb	3	; select bank3
  7460  097B  00EB               	movwf	_USBActiveConfiguration^(0+384)	;volatile
  7461                           
  7462                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  7463  097C  086B               	movf	_USBActiveConfiguration^(0+384),w	;volatile
  7464  097D  1D03               	btfss	3,2
  7465  097E  2983               	goto	i1l5435
  7466                           
  7467                           ;usb_device.c: 2010: {;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  7468  097F  3010               	movlw	16
  7469  0980  0020               	movlb	0	; select bank0
  7470  0981  00EF               	movwf	_USBDeviceState	;volatile
  7471                           
  7472                           ;usb_device.c: 2013: }
  7473  0982  0008               	return
  7474  0983                     i1l5435:	
  7475                           
  7476                           ;usb_device.c: 2014: else;usb_device.c: 2015: {;usb_device.c: 2017: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
  7477  0983  0020               	movlb	0	; select bank0
  7478  0984  30EB               	movlw	low _USBActiveConfiguration
  7479  0985  01E0               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event
  7480  0986  0AE0               	incf	USER_USB_CALLBACK_EVENT_HANDLER@event,f
  7481  0987  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  7482  0988  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7483  0989  3001               	movlw	high _USBActiveConfiguration
  7484  098A  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7485  098B  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  7486  098C  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  7487  098D  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  7488  098E  245D               	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  7489                           
  7490                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  7491  098F  3020               	movlw	32
  7492  0990  0020               	movlb	0	; select bank0
  7493  0991  00EF               	movwf	_USBDeviceState	;volatile
  7494  0992  0008               	return
  7495  0993                     __end_of_USBStdSetCfgHandler:	
  7496  0993                     __ptext31:	
  7497 ;; *************** function _memset *****************
  7498 ;; Defined at:
  7499 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  p1              2    0[COMMON] PTR void 
  7502 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7503 ;;  c               2    2[COMMON] int 
  7504 ;;  n               2    4[COMMON] unsigned int 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  p               2    6[COMMON] PTR unsigned char 
  7507 ;;		 -> USBAlternateInterface(2), BDT(48), 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  2    0[COMMON] PTR void 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 1F/0
  7514 ;;		On exit  : 1F/0
  7515 ;;		Unchanged: 1F/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7517 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7521 ;;Total ram usage:        8 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_USBStdSetCfgHandler
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function _memset
  7532  0993                     _memset:	
  7533                           
  7534                           ;incstack = 0
  7535                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7536  0993  0871               	movf	memset@p1+1,w
  7537  0994  00F7               	movwf	memset@p+1
  7538  0995  0870               	movf	memset@p1,w
  7539  0996  00F6               	movwf	memset@p
  7540  0997                     i1l5385:	
  7541  0997  3001               	movlw	1
  7542  0998  02F4               	subwf	memset@n,f
  7543  0999  3000               	movlw	0
  7544  099A  3BF5               	subwfb	memset@n+1,f
  7545  099B  0F74               	incfsz	memset@n,w
  7546  099C  29A0               	goto	i1l5381
  7547  099D  0A75               	incf	memset@n+1,w
  7548  099E  1903               	btfsc	3,2
  7549  099F  0008               	return
  7550  09A0                     i1l5381:	
  7551  09A0  0876               	movf	memset@p,w
  7552  09A1  0086               	movwf	6
  7553  09A2  0877               	movf	memset@p+1,w
  7554  09A3  0087               	movwf	7
  7555  09A4  0872               	movf	memset@c,w
  7556  09A5  0081               	movwf	1
  7557  09A6  0AF6               	incf	memset@p,f
  7558  09A7  1903               	skipnz
  7559  09A8  0AF7               	incf	memset@p+1,f
  7560  09A9  2997               	goto	i1l5385
  7561  09AA                     __end_of_memset:	
  7562  09AA                     __ptext27:	
  7563 ;; *************** function _USBCtrlEPServiceComplete *****************
  7564 ;; Defined at:
  7565 ;;		line 1616 in file "usb/usb_device.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/3
  7576 ;;		On exit  : 1F/3
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;Total ram usage:        2 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    2
  7586 ;; This function calls:
  7587 ;;		_USBCtrlEPAllowDataStage
  7588 ;;		_USBCtrlEPAllowStatusStage
  7589 ;; This function is called by:
  7590 ;;		_USBCtrlTrfSetupHandler
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           
  7595                           ;psect for function _USBCtrlEPServiceComplete
  7596  09AA                     _USBCtrlEPServiceComplete:	
  7597  09AA                     i1l4059:	
  7598                           ;incstack = 0
  7599                           ; Regs used in _USBCtrlEPServiceComplete: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7600                           
  7601                           
  7602                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  7603  09AA  003D               	movlb	29	; select bank29
  7604  09AB  120E               	bcf	14,4	;volatile
  7605                           
  7606                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  7607  09AC  0023               	movlb	3	; select bank3
  7608  09AD  1BB5               	btfsc	(_inPipes^(0+384)+2),7	;volatile
  7609  09AE  29E9               	goto	i1l326
  7610                           
  7611                           ;usb_device.c: 1629: {;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  7612  09AF  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
  7613  09B0  29BA               	goto	i1l4073
  7614                           
  7615                           ;usb_device.c: 1631: {;usb_device.c: 1632: controlTransferState = 2;
  7616  09B1  3002               	movlw	2
  7617  09B2  00E5               	movwf	_controlTransferState^(0+384)	;volatile
  7618                           
  7619                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  7620  09B3  085A               	movf	_USBDeferOUTDataStagePackets^(0+384),w	;volatile
  7621  09B4  1D03               	btfss	3,2
  7622  09B5  29B7               	goto	i1l4069
  7623                           
  7624                           ;usb_device.c: 1644: {;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  7625  09B6  2221               	fcall	_USBCtrlEPAllowDataStage
  7626  09B7                     i1l4069:	
  7627                           
  7628                           ;usb_device.c: 1646: };usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  7629  09B7  01DC               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  7630                           
  7631                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  7632  09B8  01DD               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  7633                           
  7634                           ;usb_device.c: 1652: }
  7635  09B9  0008               	return
  7636  09BA                     i1l4073:	
  7637                           
  7638                           ;usb_device.c: 1653: else;usb_device.c: 1654: {;usb_device.c: 1659: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
  7639  09BA  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7640  09BB  3E01               	addlw	1
  7641  09BC  00F5               	movwf	??_USBCtrlEPServiceComplete
  7642  09BD  3000               	movlw	0
  7643  09BE  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7644  09BF  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  7645  09C0  0875               	movf	??_USBCtrlEPServiceComplete,w
  7646  09C1  0086               	movwf	6
  7647  09C2  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  7648  09C3  0087               	movwf	7
  7649  09C4  3008               	movlw	8
  7650  09C5  0081               	movwf	1
  7651                           
  7652                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7653  09C6  3050               	movlw	80
  7654  09C7  00F5               	movwf	??_USBCtrlEPServiceComplete
  7655  09C8  01F6               	clrf	??_USBCtrlEPServiceComplete+1
  7656  09C9  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7657  09CA  0086               	movwf	6
  7658  09CB  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7659  09CC  0087               	movwf	7
  7660  09CD  3142               	addfsr 1,2
  7661  09CE  0875               	movf	??_USBCtrlEPServiceComplete,w
  7662  09CF  3FC0               	movwi [0]fsr1
  7663  09D0  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  7664  09D1  3FC1               	movwi [1]fsr1
  7665                           
  7666                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7667  09D2  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7668  09D3  0086               	movwf	6
  7669  09D4  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7670  09D5  0087               	movwf	7
  7671  09D6  300C               	movlw	12
  7672  09D7  0081               	movwf	1
  7673                           
  7674                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7675  09D8  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7676  09D9  0086               	movwf	6
  7677  09DA  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7678  09DB  0087               	movwf	7
  7679  09DC  1781               	bsf	1,7
  7680                           
  7681                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  7682  09DD  0827               	movf	_pBDTEntryIn^(0+384),w
  7683  09DE  0086               	movwf	6
  7684  09DF  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  7685  09E0  0087               	movwf	7
  7686  09E1  3004               	movlw	4
  7687  09E2  0081               	movwf	1
  7688                           
  7689                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7690  09E3  0827               	movf	_pBDTEntryIn^(0+384),w
  7691  09E4  0086               	movwf	6
  7692  09E5  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  7693  09E6  0087               	movwf	7
  7694  09E7  1781               	bsf	1,7
  7695  09E8  0008               	return
  7696  09E9                     i1l326:	
  7697                           
  7698                           ;usb_device.c: 1667: else;usb_device.c: 1668: {;usb_device.c: 1669: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
  7699  09E9  0020               	movlb	0	; select bank0
  7700  09EA  1FD0               	btfss	80,7	;volatile
  7701  09EB  29FA               	goto	i1l4099
  7702                           
  7703                           ;usb_device.c: 1670: {;usb_device.c: 1671: controlTransferState = 1;
  7704  09EC  3001               	movlw	1
  7705  09ED  0023               	movlb	3	; select bank3
  7706  09EE  00E5               	movwf	_controlTransferState^(0+384)	;volatile
  7707                           
  7708                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  7709  09EF  085B               	movf	_USBDeferINDataStagePackets^(0+384),w	;volatile
  7710  09F0  1D03               	btfss	3,2
  7711  09F1  29F4               	goto	i1l4091
  7712                           
  7713                           ;usb_device.c: 1686: {;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  7714  09F2  2221  3188         	fcall	_USBCtrlEPAllowDataStage
  7715  09F4                     i1l4091:	
  7716                           
  7717                           ;usb_device.c: 1688: };usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  7718  09F4  01DC               	clrf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  7719                           
  7720                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  7721  09F5  01DD               	clrf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  7722                           
  7723                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  7724  09F6  085E               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
  7725  09F7  1D03               	btfss	3,2
  7726  09F8  0008               	return
  7727                           
  7728                           ;usb_device.c: 1713: {;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  7729  09F9  2D01               	ljmp	i1l3807
  7730  09FA                     i1l4099:	
  7731                           
  7732                           ;usb_device.c: 1717: else;usb_device.c: 1718: {;usb_device.c: 1729: controlTransferState
      +                           = 2;
  7733  09FA  3002               	movlw	2
  7734  09FB  0023               	movlb	3	; select bank3
  7735  09FC  00E5               	movwf	_controlTransferState^(0+384)	;volatile
  7736                           
  7737                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  7738  09FD  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7739  09FE  3E01               	addlw	1
  7740  09FF  00F5               	movwf	??_USBCtrlEPServiceComplete
  7741  0A00  3000               	movlw	0
  7742  0A01  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7743  0A02  00F6               	movwf	??_USBCtrlEPServiceComplete+1
  7744  0A03  0875               	movf	??_USBCtrlEPServiceComplete,w
  7745  0A04  0086               	movwf	6
  7746  0A05  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  7747  0A06  0087               	movwf	7
  7748  0A07  3008               	movlw	8
  7749  0A08  0081               	movwf	1
  7750                           
  7751                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  7752  0A09  3050               	movlw	80
  7753  0A0A  00F5               	movwf	??_USBCtrlEPServiceComplete
  7754  0A0B  01F6               	clrf	??_USBCtrlEPServiceComplete+1
  7755  0A0C  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7756  0A0D  0086               	movwf	6
  7757  0A0E  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7758  0A0F  0087               	movwf	7
  7759  0A10  3142               	addfsr 1,2
  7760  0A11  0875               	movf	??_USBCtrlEPServiceComplete,w
  7761  0A12  3FC0               	movwi [0]fsr1
  7762  0A13  0876               	movf	??_USBCtrlEPServiceComplete+1,w
  7763  0A14  3FC1               	movwi [1]fsr1
  7764                           
  7765                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7766  0A15  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7767  0A16  0086               	movwf	6
  7768  0A17  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7769  0A18  0087               	movwf	7
  7770  0A19  3004               	movlw	4
  7771  0A1A  0081               	movwf	1
  7772                           
  7773                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7774  0A1B  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7775  0A1C  0086               	movwf	6
  7776  0A1D  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7777  0A1E  0087               	movwf	7
  7778  0A1F  1781               	bsf	1,7
  7779  0A20  29F4               	goto	i1l4091
  7780  0A21                     __end_of_USBCtrlEPServiceComplete:	
  7781                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  7782                           
  7783                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  7784                           
  7785                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  7786                           
  7787  0A21                     __ptext28:	
  7788 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7789 ;; Defined at:
  7790 ;;		line 1488 in file "usb/usb_device.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;		None
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;		None
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 1F/3
  7801 ;;		On exit  : 1F/3
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        2 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    1
  7811 ;; This function calls:
  7812 ;;		_USBCtrlTrfTxService
  7813 ;; This function is called by:
  7814 ;;		_USBCtrlEPServiceComplete
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           
  7819                           ;psect for function _USBCtrlEPAllowDataStage
  7820  0A21                     _USBCtrlEPAllowDataStage:	
  7821                           
  7822                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  7823                           
  7824                           ;incstack = 0
  7825                           ; Regs used in _USBCtrlEPAllowDataStage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7826  0A21  01DB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
  7827                           
  7828                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  7829  0A22  01DA               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
  7830                           
  7831                           ;usb_device.c: 1493: if(controlTransferState == 2)
  7832  0A23  3002               	movlw	2
  7833  0A24  0665               	xorwf	_controlTransferState^(0+384),w	;volatile
  7834  0A25  1D03               	btfss	3,2
  7835  0A26  2A4B               	goto	i1l3855
  7836                           
  7837                           ;usb_device.c: 1494: {;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  7838  0A27  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7839  0A28  3E01               	addlw	1
  7840  0A29  00F3               	movwf	??_USBCtrlEPAllowDataStage
  7841  0A2A  3000               	movlw	0
  7842  0A2B  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7843  0A2C  00F4               	movwf	??_USBCtrlEPAllowDataStage+1
  7844  0A2D  0873               	movf	??_USBCtrlEPAllowDataStage,w
  7845  0A2E  0086               	movwf	6
  7846  0A2F  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  7847  0A30  0087               	movwf	7
  7848  0A31  3008               	movlw	8
  7849  0A32  0081               	movwf	1
  7850                           
  7851                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7852  0A33  3058               	movlw	88
  7853  0A34  00F3               	movwf	??_USBCtrlEPAllowDataStage
  7854  0A35  01F4               	clrf	??_USBCtrlEPAllowDataStage+1
  7855  0A36  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7856  0A37  0086               	movwf	6
  7857  0A38  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7858  0A39  0087               	movwf	7
  7859  0A3A  3142               	addfsr 1,2
  7860  0A3B  0873               	movf	??_USBCtrlEPAllowDataStage,w
  7861  0A3C  3FC0               	movwi [0]fsr1
  7862  0A3D  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  7863  0A3E  3FC1               	movwi [1]fsr1
  7864                           
  7865                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7866  0A3F  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7867  0A40  0086               	movwf	6
  7868  0A41  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7869  0A42  0087               	movwf	7
  7870  0A43  3048               	movlw	72
  7871  0A44  0081               	movwf	1
  7872                           
  7873                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7874  0A45  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  7875  0A46  0086               	movwf	6
  7876  0A47  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  7877  0A48  0087               	movwf	7
  7878  0A49  1781               	bsf	1,7
  7879                           
  7880                           ;usb_device.c: 1500: }
  7881  0A4A  0008               	return
  7882  0A4B                     i1l3855:	
  7883                           
  7884                           ;usb_device.c: 1501: else;usb_device.c: 1502: {;usb_device.c: 1505: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
  7885  0A4B  0837               	movf	((_inPipes+1)^(0+384)+3),w	;volatile
  7886  0A4C  0020               	movlb	0	; select bank0
  7887  0A4D  0257               	subwf	87,w	;volatile
  7888  0A4E  1D03               	skipz
  7889  0A4F  2A54               	goto	u231_25
  7890  0A50  0023               	movlb	3	; select bank3
  7891  0A51  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
  7892  0A52  0020               	movlb	0	; select bank0
  7893  0A53  0256               	subwf	86,w	;volatile
  7894  0A54                     u231_25:	
  7895  0A54  1803               	skipnc
  7896  0A55  2A5D               	goto	i1l3859
  7897                           
  7898                           ;usb_device.c: 1506: {;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  7899  0A56  0857               	movf	87,w	;volatile
  7900  0A57  0023               	movlb	3	; select bank3
  7901  0A58  00B7               	movwf	((_inPipes+1)^(0+384)+3)	;volatile
  7902  0A59  0020               	movlb	0	; select bank0
  7903  0A5A  0856               	movf	86,w	;volatile
  7904  0A5B  0023               	movlb	3	; select bank3
  7905  0A5C  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
  7906  0A5D                     i1l3859:	
  7907                           
  7908                           ;usb_device.c: 1508: };usb_device.c: 1509: USBCtrlTrfTxService();
  7909  0A5D  26CB               	fcall	_USBCtrlTrfTxService
  7910                           
  7911                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
  7912  0A5E  3058               	movlw	88
  7913  0A5F  00F3               	movwf	??_USBCtrlEPAllowDataStage
  7914  0A60  01F4               	clrf	??_USBCtrlEPAllowDataStage+1
  7915  0A61  0827               	movf	_pBDTEntryIn^(0+384),w
  7916  0A62  0086               	movwf	6
  7917  0A63  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  7918  0A64  0087               	movwf	7
  7919  0A65  3142               	addfsr 1,2
  7920  0A66  0873               	movf	??_USBCtrlEPAllowDataStage,w
  7921  0A67  3FC0               	movwi [0]fsr1
  7922  0A68  0874               	movf	??_USBCtrlEPAllowDataStage+1,w
  7923  0A69  3FC1               	movwi [1]fsr1
  7924                           
  7925                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7926  0A6A  0827               	movf	_pBDTEntryIn^(0+384),w
  7927  0A6B  0086               	movwf	6
  7928  0A6C  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  7929  0A6D  0087               	movwf	7
  7930  0A6E  3048               	movlw	72
  7931  0A6F  0081               	movwf	1
  7932                           
  7933                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7934  0A70  0827               	movf	_pBDTEntryIn^(0+384),w
  7935  0A71  0086               	movwf	6
  7936  0A72  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  7937  0A73  0087               	movwf	7
  7938  0A74  1781               	bsf	1,7
  7939  0A75  0008               	return
  7940  0A76                     __end_of_USBCtrlEPAllowDataStage:	
  7941  0A76                     __ptext36:	
  7942 ;; *************** function i1_SYSTEM_Initialize *****************
  7943 ;; Defined at:
  7944 ;;		line 82 in file "system.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  state           1    wreg     enum E2186
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;  state           1    2[COMMON] enum E2186
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;Total ram usage:        1 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    2
  7965 ;; This function calls:
  7966 ;;		i1_BUTTON_Enable
  7967 ;;		i1_LED_Enable
  7968 ;; This function is called by:
  7969 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function i1_SYSTEM_Initialize
  7975  0A76                     i1_SYSTEM_Initialize:	
  7976                           
  7977                           ;incstack = 0
  7978                           ; Regs used in i1_SYSTEM_Initialize: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7979                           ;i1SYSTEM_Initialize@state stored from wreg
  7980  0A76  00F2               	movwf	i1SYSTEM_Initialize@state
  7981                           
  7982                           ;system.c: 84: switch(state)
  7983  0A77  2A8D               	goto	i1l3719
  7984  0A78                     i1l3705:	
  7985                           
  7986                           ;system.c: 90: OSCCON = 0xFC;
  7987  0A78  30FC               	movlw	252
  7988  0A79  0021               	movlb	1	; select bank1
  7989  0A7A  0099               	movwf	25	;volatile
  7990                           
  7991                           ;system.c: 91: ACTCON = 0x90;
  7992  0A7B  3090               	movlw	144
  7993  0A7C  0027               	movlb	7	; select bank7
  7994  0A7D  009B               	movwf	27	;volatile
  7995                           
  7996                           ;system.c: 93: LED_Enable(LED_D1);
  7997  0A7E  3001               	movlw	1
  7998  0A7F  2299  3188         	fcall	i1_LED_Enable
  7999                           
  8000                           ;system.c: 94: LED_Enable(LED_D2);
  8001  0A81  3002               	movlw	2
  8002  0A82  2299  3188         	fcall	i1_LED_Enable
  8003                           
  8004                           ;system.c: 95: LED_Enable(LED_D3);
  8005  0A84  3003               	movlw	3
  8006  0A85  2299  3188         	fcall	i1_LED_Enable
  8007                           
  8008                           ;system.c: 96: LED_Enable(LED_D4);
  8009  0A87  3004               	movlw	4
  8010  0A88  2299  3188         	fcall	i1_LED_Enable
  8011                           
  8012                           ;system.c: 97: BUTTON_Enable(BUTTON_S1);
  8013  0A8A  3001               	movlw	1
  8014  0A8B  27EB               	fcall	i1_BUTTON_Enable
  8015                           
  8016                           ;system.c: 98: break;
  8017  0A8C  0008               	return
  8018  0A8D                     i1l3719:	
  8019  0A8D  0872               	movf	i1SYSTEM_Initialize@state,w
  8020                           
  8021                           ; Switch size 1, requested type "speed"
  8022                           ; Number of cases is 3, Range of values is 0 to 2
  8023                           ; switch strategies available:
  8024                           ; Name         Instructions Cycles
  8025                           ; simple_byte           10     6 (average)
  8026                           ; direct_byte           12     6 (fixed)
  8027                           ; jumptable            260     6 (fixed)
  8028                           ;	Chosen strategy is simple_byte
  8029  0A8E  3A00               	xorlw	0	; case 0
  8030  0A8F  1903               	skipnz
  8031  0A90  2A78               	goto	i1l3705
  8032  0A91  3A01               	xorlw	1	; case 1
  8033  0A92  1903               	skipnz
  8034  0A93  2A98               	goto	i1l680
  8035  0A94  3A03               	xorlw	3	; case 2
  8036  0A95  1903               	skipnz
  8037  0A96  2A98               	goto	i1l680
  8038  0A97  2A98               	goto	i1l680
  8039  0A98                     i1l680:	
  8040  0A98  0008               	return
  8041  0A99                     __end_ofi1_SYSTEM_Initialize:	
  8042  0A99                     __ptext37:	
  8043 ;; *************** function i1_LED_Enable *****************
  8044 ;; Defined at:
  8045 ;;		line 220 in file "bsp/leds.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  led             1    wreg     enum E2
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;  led             1    1[COMMON] enum E2
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/7
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8063 ;;Total ram usage:        1 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    1
  8066 ;; This function calls:
  8067 ;;		i1_LED_Off
  8068 ;; This function is called by:
  8069 ;;		i1_SYSTEM_Initialize
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function i1_LED_Enable
  8075  0A99                     i1_LED_Enable:	
  8076                           
  8077                           ;incstack = 0
  8078                           ; Regs used in i1_LED_Enable: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8079                           ;i1LED_Enable@led stored from wreg
  8080  0A99  00F1               	movwf	i1LED_Enable@led
  8081                           
  8082                           ;leds.c: 222: switch(led)
  8083  0A9A  2AAF               	goto	i1l3515
  8084  0A9B                     i1l3497:	
  8085                           
  8086                           ;leds.c: 225: LED_Off(LED_D1);
  8087  0A9B  3001               	movlw	1
  8088  0A9C  24CF               	fcall	i1_LED_Off
  8089                           
  8090                           ;leds.c: 226: TRISCbits.TRISC3 = 0;
  8091  0A9D  0021               	movlb	1	; select bank1
  8092  0A9E  118E               	bcf	14,3	;volatile
  8093                           
  8094                           ;leds.c: 227: break;
  8095  0A9F  0008               	return
  8096  0AA0                     i1l3501:	
  8097                           
  8098                           ;leds.c: 230: LED_Off(LED_D2);
  8099  0AA0  3002               	movlw	2
  8100  0AA1  24CF               	fcall	i1_LED_Off
  8101                           
  8102                           ;leds.c: 231: TRISCbits.TRISC4 = 0;
  8103  0AA2  0021               	movlb	1	; select bank1
  8104  0AA3  120E               	bcf	14,4	;volatile
  8105                           
  8106                           ;leds.c: 232: break;
  8107  0AA4  0008               	return
  8108  0AA5                     i1l3505:	
  8109                           
  8110                           ;leds.c: 235: LED_Off(LED_D3);
  8111  0AA5  3003               	movlw	3
  8112  0AA6  24CF               	fcall	i1_LED_Off
  8113                           
  8114                           ;leds.c: 236: TRISCbits.TRISC5 = 0;
  8115  0AA7  0021               	movlb	1	; select bank1
  8116  0AA8  128E               	bcf	14,5	;volatile
  8117                           
  8118                           ;leds.c: 237: break;
  8119  0AA9  0008               	return
  8120  0AAA                     i1l3509:	
  8121                           
  8122                           ;leds.c: 240: LED_Off(LED_D4);
  8123  0AAA  3004               	movlw	4
  8124  0AAB  24CF               	fcall	i1_LED_Off
  8125                           
  8126                           ;leds.c: 241: TRISCbits.TRISC6 = 0;
  8127  0AAC  0021               	movlb	1	; select bank1
  8128  0AAD  130E               	bcf	14,6	;volatile
  8129                           
  8130                           ;leds.c: 242: break;
  8131  0AAE  0008               	return
  8132  0AAF                     i1l3515:	
  8133  0AAF  0871               	movf	i1LED_Enable@led,w
  8134                           
  8135                           ; Switch size 1, requested type "speed"
  8136                           ; Number of cases is 5, Range of values is 0 to 4
  8137                           ; switch strategies available:
  8138                           ; Name         Instructions Cycles
  8139                           ; direct_byte           16     6 (fixed)
  8140                           ; simple_byte           16     9 (average)
  8141                           ; jumptable            260     6 (fixed)
  8142                           ;	Chosen strategy is direct_byte
  8143  0AB0  0084               	movwf	4
  8144  0AB1  3005               	movlw	5
  8145  0AB2  0204               	subwf	4,w
  8146  0AB3  1803               	skipnc
  8147  0AB4  0008               	return
  8148  0AB5  3191               	movlp	high i1S5909
  8149  0AB6  3504               	lslf	4,w
  8150  0AB7  3E50               	addlw	low i1S5909
  8151  0AB8  0082               	movwf	2
  8152  0AB9                     i1l54:	
  8153  0AB9  0008               	return
  8154  0ABA                     __end_ofi1_LED_Enable:	
  8155  0ABA                     __ptext34:	
  8156 ;; *************** function _USBStdFeatureReqHandler *****************
  8157 ;; Defined at:
  8158 ;;		line 2754 in file "usb/usb_device.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;  p               2    9[BANK0 ] PTR struct __BDT
  8163 ;;		 -> RAM(4096), NULL(0), BDT(48), 
  8164 ;;  pUEP            2    6[BANK0 ] PTR unsigned char 
  8165 ;;		 -> UEP0(1), 
  8166 ;;  current_ep_d    1    8[BANK0 ] struct .
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 1C/0
  8173 ;;		On exit  : 1F/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;Total ram usage:        7 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    4
  8183 ;; This function calls:
  8184 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8185 ;; This function is called by:
  8186 ;;		_USBCheckStdRequest
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function _USBStdFeatureReqHandler
  8192  0ABA                     _USBStdFeatureReqHandler:	
  8193  0ABA                     i1l3977:	
  8194                           ;incstack = 0
  8195                           ; Regs used in _USBStdFeatureReqHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8196                           
  8197                           
  8198                           ;usb_device.c: 2756: BDT_ENTRY *p;;usb_device.c: 2757: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2761: unsigned char* pUEP;;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2800: (SetupPkt.Recipient == (0x00)))
  8199  0ABA  0020               	movlb	0	; select bank0
  8200  0ABB  0B52               	decfsz	82,w	;volatile
  8201  0ABC  2ACE               	goto	i1l3989
  8202  0ABD  0850               	movf	80,w	;volatile
  8203  0ABE  391F               	andlw	31
  8204  0ABF  1D03               	skipz
  8205  0AC0  2ACE               	goto	i1l3989
  8206                           
  8207                           ;usb_device.c: 2801: {;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  8208  0AC1  0023               	movlb	3	; select bank3
  8209  0AC2  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8210                           
  8211                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  8212  0AC3  3003               	movlw	3
  8213  0AC4  0020               	movlb	0	; select bank0
  8214  0AC5  0651               	xorwf	81,w	;volatile
  8215  0AC6  1D03               	btfss	3,2
  8216  0AC7  2ACC               	goto	i1l3987
  8217                           
  8218                           ;usb_device.c: 2804: RemoteWakeup = 1;
  8219  0AC8  3001               	movlw	1
  8220  0AC9  0023               	movlb	3	; select bank3
  8221  0ACA  00E3               	movwf	_RemoteWakeup^(0+384)	;volatile
  8222  0ACB  2ACE               	goto	i1l3989
  8223  0ACC                     i1l3987:	
  8224                           
  8225                           ;usb_device.c: 2805: else;usb_device.c: 2806: RemoteWakeup = 0;
  8226  0ACC  0023               	movlb	3	; select bank3
  8227  0ACD  01E3               	clrf	_RemoteWakeup^(0+384)	;volatile
  8228  0ACE                     i1l3989:	
  8229                           
  8230                           ;usb_device.c: 2807: };usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          811: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  8231  0ACE  0020               	movlb	0	; select bank0
  8232  0ACF  0852               	movf	82,w	;volatile
  8233  0AD0  1D03               	btfss	3,2
  8234  0AD1  0008               	return
  8235  0AD2  0850               	movf	80,w	;volatile
  8236  0AD3  391F               	andlw	31
  8237  0AD4  3A02               	xorlw	2
  8238  0AD5  1D03               	skipz
  8239  0AD6  0008               	return
  8240  0AD7  0854               	movf	84,w	;volatile
  8241  0AD8  390F               	andlw	15
  8242  0AD9  1903               	skipnz
  8243  0ADA  0008               	return
  8244  0ADB  0854               	movf	84,w	;volatile
  8245  0ADC  390F               	andlw	15
  8246  0ADD  00FB               	movwf	??_USBStdFeatureReqHandler
  8247  0ADE  3003               	movlw	3
  8248  0ADF  027B               	subwf	??_USBStdFeatureReqHandler,w
  8249  0AE0  1803               	skipnc
  8250  0AE1  0008               	return
  8251  0AE2  3020               	movlw	32
  8252  0AE3  066F               	xorwf	_USBDeviceState,w	;volatile
  8253  0AE4  1D03               	btfss	3,2
  8254  0AE5  0008               	return
  8255                           
  8256                           ;usb_device.c: 2814: {;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  8257  0AE6  0023               	movlb	3	; select bank3
  8258  0AE7  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
  8259                           
  8260                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  8261  0AE8  0020               	movlb	0	; select bank0
  8262  0AE9  1BD4               	btfsc	84,7	;volatile
  8263  0AEA  2AFA               	goto	i1l4003
  8264                           
  8265                           ;usb_device.c: 2821: {;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8266  0AEB  0854               	movf	84,w	;volatile
  8267  0AEC  390F               	andlw	15
  8268  0AED  0709               	addwf	9,w
  8269  0AEE  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8270  0AEF  0086               	movwf	6
  8271  0AF0  3001               	movlw	1	; select bank3/4
  8272  0AF1  0087               	movwf	7
  8273  0AF2  3F40               	moviw [0]fsr1
  8274  0AF3  00E9               	movwf	USBStdFeatureReqHandler@p
  8275  0AF4  3F41               	moviw [1]fsr1
  8276  0AF5  00EA               	movwf	USBStdFeatureReqHandler@p+1
  8277                           
  8278                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  8279  0AF6  0854               	movf	84,w	;volatile
  8280  0AF7  390F               	andlw	15
  8281  0AF8  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8282  0AF9  2B08               	goto	L9
  8283  0AFA                     i1l4003:	
  8284                           ;usb_device.c: 2824: }
  8285                           
  8286                           
  8287                           ;usb_device.c: 2825: else;usb_device.c: 2826: {;usb_device.c: 2827: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
  8288  0AFA  0854               	movf	84,w	;volatile
  8289  0AFB  390F               	andlw	15
  8290  0AFC  0709               	addwf	9,w
  8291  0AFD  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8292  0AFE  0086               	movwf	6
  8293  0AFF  3001               	movlw	1	; select bank3/4
  8294  0B00  0087               	movwf	7
  8295  0B01  3F40               	moviw [0]fsr1
  8296  0B02  00E9               	movwf	USBStdFeatureReqHandler@p
  8297  0B03  3F41               	moviw [1]fsr1
  8298  0B04  00EA               	movwf	USBStdFeatureReqHandler@p+1
  8299                           
  8300                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  8301  0B05  0854               	movf	84,w	;volatile
  8302  0B06  390F               	andlw	15
  8303  0B07  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8304  0B08                     L9:	
  8305  0B08  0086               	movwf	6
  8306  0B09  0801               	movf	1,w
  8307  0B0A  00E8               	movwf	USBStdFeatureReqHandler@current_ep_data
  8308                           
  8309                           ;usb_device.c: 2829: };usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  8310  0B0B  1868               	btfsc	USBStdFeatureReqHandler@current_ep_data,0
  8311  0B0C  2B18               	goto	i1l4009
  8312                           
  8313                           ;usb_device.c: 2836: {;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  8314  0B0D  30FB               	movlw	251
  8315  0B0E  00FB               	movwf	??_USBStdFeatureReqHandler
  8316  0B0F  30FF               	movlw	255
  8317  0B10  00FC               	movwf	??_USBStdFeatureReqHandler+1
  8318  0B11  0869               	movf	USBStdFeatureReqHandler@p,w
  8319  0B12  057B               	andwf	??_USBStdFeatureReqHandler,w
  8320  0B13  00E9               	movwf	USBStdFeatureReqHandler@p
  8321  0B14  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8322  0B15  057C               	andwf	??_USBStdFeatureReqHandler+1,w
  8323  0B16  00EA               	movwf	USBStdFeatureReqHandler@p+1
  8324                           
  8325                           ;usb_device.c: 2838: }
  8326  0B17  2B1B               	goto	i1l4011
  8327  0B18                     i1l4009:	
  8328                           
  8329                           ;usb_device.c: 2839: else;usb_device.c: 2840: {;usb_device.c: 2841: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
  8330  0B18  3004               	movlw	4
  8331  0B19  0469               	iorwf	USBStdFeatureReqHandler@p,w
  8332  0B1A  00E9               	movwf	USBStdFeatureReqHandler@p
  8333  0B1B                     i1l4011:	
  8334                           
  8335                           ;usb_device.c: 2842: };usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  8336  0B1B  1BD4               	btfsc	84,7	;volatile
  8337  0B1C  2B29               	goto	i1l4015
  8338                           
  8339                           ;usb_device.c: 2848: {;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
  8340  0B1D  0854               	movf	84,w	;volatile
  8341  0B1E  390F               	andlw	15
  8342  0B1F  0709               	addwf	9,w
  8343  0B20  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
  8344  0B21  0086               	movwf	6
  8345  0B22  3001               	movlw	1	; select bank3/4
  8346  0B23  0087               	movwf	7
  8347  0B24  0869               	movf	USBStdFeatureReqHandler@p,w
  8348  0B25  3FC0               	movwi [0]fsr1
  8349  0B26  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8350  0B27  3FC1               	movwi [1]fsr1
  8351                           
  8352                           ;usb_device.c: 2850: }
  8353  0B28  2B34               	goto	i1l4017
  8354  0B29                     i1l4015:	
  8355                           
  8356                           ;usb_device.c: 2851: else;usb_device.c: 2852: {;usb_device.c: 2853: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
  8357  0B29  0854               	movf	84,w	;volatile
  8358  0B2A  390F               	andlw	15
  8359  0B2B  0709               	addwf	9,w
  8360  0B2C  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
  8361  0B2D  0086               	movwf	6
  8362  0B2E  3001               	movlw	1	; select bank3/4
  8363  0B2F  0087               	movwf	7
  8364  0B30  0869               	movf	USBStdFeatureReqHandler@p,w
  8365  0B31  3FC0               	movwi [0]fsr1
  8366  0B32  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8367  0B33  3FC1               	movwi [1]fsr1
  8368  0B34                     i1l4017:	
  8369                           
  8370                           ;usb_device.c: 2854: };usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  8371  0B34  3003               	movlw	3
  8372  0B35  0651               	xorwf	81,w	;volatile
  8373  0B36  1D03               	btfss	3,2
  8374  0B37  2B56               	goto	i1l4031
  8375                           
  8376                           ;usb_device.c: 2858: {;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  8377  0B38  0869               	movf	USBStdFeatureReqHandler@p,w
  8378  0B39  0086               	movwf	6
  8379  0B3A  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8380  0B3B  0087               	movwf	7
  8381  0B3C  1F81               	btfss	1,7
  8382  0B3D  2B4B               	goto	i1l4027
  8383                           
  8384                           ;usb_device.c: 2860: {;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  8385  0B3E  1BD4               	btfsc	84,7	;volatile
  8386  0B3F  2B44               	goto	i1l4025
  8387                           
  8388                           ;usb_device.c: 2864: {;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
  8389  0B40  0854               	movf	84,w	;volatile
  8390  0B41  390F               	andlw	15
  8391  0B42  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8392  0B43  2B47               	goto	L10
  8393  0B44                     i1l4025:	
  8394                           ;usb_device.c: 2866: }
  8395                           
  8396                           
  8397                           ;usb_device.c: 2867: else;usb_device.c: 2868: {;usb_device.c: 2869: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
  8398  0B44  0854               	movf	84,w	;volatile
  8399  0B45  390F               	andlw	15
  8400  0B46  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8401  0B47                     L10:	
  8402  0B47  0086               	movwf	6
  8403  0B48  3001               	movlw	1	; select bank3/4
  8404  0B49  0087               	movwf	7
  8405  0B4A  1481               	bsf	1,1
  8406  0B4B                     i1l4027:	
  8407                           
  8408                           ;usb_device.c: 2870: };usb_device.c: 2871: };usb_device.c: 2874: p->STAT.Val |= 0x04;
  8409  0B4B  0869               	movf	USBStdFeatureReqHandler@p,w
  8410  0B4C  0086               	movwf	6
  8411  0B4D  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8412  0B4E  0087               	movwf	7
  8413  0B4F  1501               	bsf	1,2
  8414                           
  8415                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  8416  0B50  0869               	movf	USBStdFeatureReqHandler@p,w
  8417  0B51  0086               	movwf	6
  8418  0B52  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8419  0B53  0087               	movwf	7
  8420  0B54  1781               	bsf	1,7
  8421                           
  8422                           ;usb_device.c: 2876: }
  8423  0B55  0008               	return
  8424  0B56                     i1l4031:	
  8425                           
  8426                           ;usb_device.c: 2877: else;usb_device.c: 2878: {;usb_device.c: 2882: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
  8427  0B56  3004               	movlw	4
  8428  0B57  0669               	xorwf	USBStdFeatureReqHandler@p,w
  8429  0B58  00E9               	movwf	USBStdFeatureReqHandler@p
  8430                           
  8431                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  8432  0B59  0086               	movwf	6
  8433  0B5A  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8434  0B5B  0087               	movwf	7
  8435                           
  8436                           ;usb_device.c: 2885: {;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  8437  0B5C  0869               	movf	USBStdFeatureReqHandler@p,w
  8438  0B5D  1F81               	btfss	1,7
  8439  0B5E  2B75               	goto	L12
  8440  0B5F  0086               	movwf	6
  8441  0B60  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8442  0B61  0087               	movwf	7
  8443  0B62  1381               	bcf	1,7
  8444                           
  8445                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  8446  0B63  0869               	movf	USBStdFeatureReqHandler@p,w
  8447  0B64  0086               	movwf	6
  8448  0B65  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8449  0B66  0087               	movwf	7
  8450  0B67  3005               	movlw	5
  8451  0B68  1701               	bsf	1,6
  8452                           
  8453                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8454  0B69  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8455  0B6A  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8456  0B6B  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8457  0B6C  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8458  0B6D  0869               	movf	USBStdFeatureReqHandler@p,w
  8459  0B6E  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8460  0B6F  3002               	movlw	2
  8461  0B70  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8462  0B71  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8463  0B72  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8464                           
  8465                           ;usb_device.c: 2891: }
  8466  0B74  2B79               	goto	i1l4041
  8467  0B75                     L12:	
  8468                           ;usb_device.c: 2892: else;usb_device.c: 2893: {;usb_device.c: 2895: p->STAT.Val |= 0x40;
  8469                           
  8470  0B75  0086               	movwf	6
  8471  0B76  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8472  0B77  0087               	movwf	7
  8473  0B78  1701               	bsf	1,6
  8474  0B79                     i1l4041:	
  8475                           
  8476                           ;usb_device.c: 2896: };usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  8477  0B79  3004               	movlw	4
  8478  0B7A  0020               	movlb	0	; select bank0
  8479  0B7B  0669               	xorwf	USBStdFeatureReqHandler@p,w
  8480  0B7C  00E9               	movwf	USBStdFeatureReqHandler@p
  8481                           
  8482                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  8483  0B7D  18E8               	btfsc	USBStdFeatureReqHandler@current_ep_data,1
  8484  0B7E  2B85               	goto	i1l487
  8485  0B7F  0869               	movf	USBStdFeatureReqHandler@p,w
  8486  0B80  0086               	movwf	6
  8487  0B81  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8488  0B82  0087               	movwf	7
  8489  0B83  1F81               	btfss	1,7
  8490  0B84  2BA5               	goto	i1l4053
  8491  0B85                     i1l487:	
  8492                           
  8493                           ;usb_device.c: 2907: {;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  8494  0B85  1BD4               	btfsc	84,7	;volatile
  8495  0B86  2B8B               	goto	i1l4049
  8496                           
  8497                           ;usb_device.c: 2909: {;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
  8498  0B87  0854               	movf	84,w	;volatile
  8499  0B88  390F               	andlw	15
  8500  0B89  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8501  0B8A  2B8E               	goto	L11
  8502  0B8B                     i1l4049:	
  8503                           ;usb_device.c: 2911: }
  8504                           
  8505                           
  8506                           ;usb_device.c: 2912: else;usb_device.c: 2913: {;usb_device.c: 2914: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
  8507  0B8B  0854               	movf	84,w	;volatile
  8508  0B8C  390F               	andlw	15
  8509  0B8D  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8510  0B8E                     L11:	
  8511  0B8E  0086               	movwf	6
  8512  0B8F  3001               	movlw	1	; select bank3/4
  8513  0B90  0087               	movwf	7
  8514  0B91  1081               	bcf	1,1
  8515                           
  8516                           ;usb_device.c: 2915: };usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  8517  0B92  0869               	movf	USBStdFeatureReqHandler@p,w
  8518  0B93  0086               	movwf	6
  8519  0B94  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8520  0B95  0087               	movwf	7
  8521  0B96  303B               	movlw	59
  8522  0B97  0581               	andwf	1,f
  8523                           
  8524                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  8525  0B98  3005               	movlw	5
  8526  0B99  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8527  0B9A  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8528  0B9B  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8529  0B9C  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8530  0B9D  0869               	movf	USBStdFeatureReqHandler@p,w
  8531  0B9E  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8532  0B9F  3002               	movlw	2
  8533  0BA0  00E4               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8534  0BA1  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8535  0BA2  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8536                           
  8537                           ;usb_device.c: 2921: }
  8538  0BA4  2BAB               	goto	i1l4055
  8539  0BA5                     i1l4053:	
  8540                           
  8541                           ;usb_device.c: 2922: else;usb_device.c: 2923: {;usb_device.c: 2925: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
  8542  0BA5  0869               	movf	USBStdFeatureReqHandler@p,w
  8543  0BA6  0086               	movwf	6
  8544  0BA7  086A               	movf	USBStdFeatureReqHandler@p+1,w
  8545  0BA8  0087               	movwf	7
  8546  0BA9  303B               	movlw	59
  8547  0BAA  0581               	andwf	1,f
  8548  0BAB                     i1l4055:	
  8549                           
  8550                           ;usb_device.c: 2926: };usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
  8551  0BAB  0020               	movlb	0	; select bank0
  8552  0BAC  0854               	movf	84,w	;volatile
  8553  0BAD  390F               	andlw	15
  8554  0BAE  3E98               	addlw	152
  8555  0BAF  00FB               	movwf	??_USBStdFeatureReqHandler
  8556  0BB0  300E               	movlw	14
  8557  0BB1  01FC               	clrf	??_USBStdFeatureReqHandler+1
  8558  0BB2  3DFC               	addwfc	??_USBStdFeatureReqHandler+1,f
  8559  0BB3  087B               	movf	??_USBStdFeatureReqHandler,w
  8560  0BB4  00E6               	movwf	USBStdFeatureReqHandler@pUEP
  8561  0BB5  087C               	movf	??_USBStdFeatureReqHandler+1,w
  8562  0BB6  00E7               	movwf	USBStdFeatureReqHandler@pUEP+1
  8563                           
  8564                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  8565  0BB7  0866               	movf	USBStdFeatureReqHandler@pUEP,w
  8566  0BB8  0086               	movwf	6
  8567  0BB9  0867               	movf	USBStdFeatureReqHandler@pUEP+1,w
  8568  0BBA  0087               	movwf	7
  8569  0BBB  1001               	bcf	1,0
  8570  0BBC  0008               	return
  8571  0BBD                     __end_of_USBStdFeatureReqHandler:	
  8572  0BBD                     __ptext19:	
  8573 ;; *************** function _USBDeviceTasks *****************
  8574 ;; Defined at:
  8575 ;;		line 477 in file "usb/usb_device.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  i               1   14[BANK0 ] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 1F/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;Total ram usage:        2 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:    8
  8596 ;; This function calls:
  8597 ;;		_USBCtrlEPAllowStatusStage
  8598 ;;		_USBCtrlEPService
  8599 ;;		_USBIncrement1msInternalTimers
  8600 ;;		_USBStallHandler
  8601 ;;		_USBSuspend
  8602 ;;		_USBWakeFromSuspend
  8603 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8604 ;;		i1_USBDeviceInit
  8605 ;; This function is called by:
  8606 ;;		_SYS_InterruptHigh
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           
  8610                           
  8611                           ;psect for function _USBDeviceTasks
  8612  0BBD                     _USBDeviceTasks:	
  8613                           
  8614                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  8615                           
  8616                           ;incstack = 0
  8617                           ; Regs used in _USBDeviceTasks: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8618  0BBD  0020               	movlb	0	; select bank0
  8619  0BBE  036F               	decf	_USBDeviceState,w	;volatile
  8620  0BBF  1D03               	btfss	3,2
  8621  0BC0  2BCA               	goto	i1l5543
  8622                           
  8623                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
  8624  0BC1  003D               	movlb	29	; select bank29
  8625  0BC2  1A8E               	btfsc	14,5	;volatile
  8626  0BC3  2BCA               	goto	i1l5543
  8627                           
  8628                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
  8629  0BC4  0190               	clrf	16	;volatile
  8630                           
  8631                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  8632  0BC5  1412               	bsf	18,0	;volatile
  8633                           
  8634                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  8635  0BC6  1612               	bsf	18,4	;volatile
  8636                           
  8637                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  8638  0BC7  3002               	movlw	2
  8639  0BC8  0020               	movlb	0	; select bank0
  8640  0BC9  00EF               	movwf	_USBDeviceState	;volatile
  8641  0BCA                     i1l5543:	
  8642                           
  8643                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
  8644  0BCA  003D               	movlb	29	; select bank29
  8645  0BCB  1910               	btfsc	16,2	;volatile
  8646  0BCC  1D12               	btfss	18,2	;volatile
  8647  0BCD  2BD1               	goto	i1l5551
  8648                           
  8649                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
  8650  0BCE  1110               	bcf	16,2	;volatile
  8651                           
  8652                           ;usb_device.c: 640: USBWakeFromSuspend();
  8653  0BCF  2620  3188         	fcall	_USBWakeFromSuspend
  8654  0BD1                     i1l5551:	
  8655                           
  8656                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
  8657  0BD1  003D               	movlb	29	; select bank29
  8658  0BD2  1C8E               	btfss	14,1	;volatile
  8659  0BD3  2BD7               	goto	i1l252
  8660                           
  8661                           ;usb_device.c: 648: {;usb_device.c: 649: PIR2bits.USBIF = 0;;
  8662  0BD4  0020               	movlb	0	; select bank0
  8663  0BD5  1112               	bcf	18,2	;volatile
  8664                           
  8665                           ;usb_device.c: 650: return;
  8666  0BD6  0008               	return
  8667  0BD7                     i1l252:	
  8668                           
  8669                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  8670  0BD7  1810               	btfsc	16,0	;volatile
  8671  0BD8  1C12               	btfss	18,0	;volatile
  8672  0BD9  2BE3               	goto	i1l5565
  8673                           
  8674                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
  8675  0BDA  2719  3188         	fcall	i1_USBDeviceInit
  8676                           
  8677                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
  8678  0BDC  0021               	movlb	1	; select bank1
  8679  0BDD  1512               	bsf	18,2	;volatile
  8680                           
  8681                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  8682  0BDE  3004               	movlw	4
  8683  0BDF  0020               	movlb	0	; select bank0
  8684  0BE0  00EF               	movwf	_USBDeviceState	;volatile
  8685                           
  8686                           ;usb_device.c: 681: (UIR &= 0xFE);
  8687  0BE1  003D               	movlb	29	; select bank29
  8688  0BE2  1010               	bcf	16,0	;volatile
  8689  0BE3                     i1l5565:	
  8690                           
  8691                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  8692  0BE3  1A10               	btfsc	16,4	;volatile
  8693  0BE4  1E12               	btfss	18,4	;volatile
  8694  0BE5  2BE8               	goto	i1l5571
  8695                           
  8696                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
  8697  0BE6  2610  3188         	fcall	_USBSuspend
  8698  0BE8                     i1l5571:	
  8699                           
  8700                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
  8701  0BE8  003D               	movlb	29	; select bank29
  8702  0BE9  1F10               	btfss	16,6	;volatile
  8703  0BEA  2C04               	goto	i1l5589
  8704                           
  8705                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
  8706  0BEB  1F12               	btfss	18,6	;volatile
  8707  0BEC  2BF8               	goto	i1l5577
  8708                           
  8709                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  8710  0BED  3073               	movlw	115
  8711  0BEE  0020               	movlb	0	; select bank0
  8712  0BEF  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8713  0BF0  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8714  0BF1  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8715  0BF2  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8716  0BF3  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8717  0BF4  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  8718  0BF5  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8719  0BF6  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8720  0BF8                     i1l5577:	
  8721                           
  8722                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
  8723  0BF8  003D               	movlb	29	; select bank29
  8724  0BF9  1310               	bcf	16,6	;volatile
  8725                           
  8726                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  8727  0BFA  25E0  3188         	fcall	_USBIncrement1msInternalTimers
  8728                           
  8729                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  8730  0BFC  085F               	movf	_USBStatusStageTimeoutCounter^(0+384),w
  8731  0BFD  1D03               	btfss	3,2
  8732                           
  8733                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  8734  0BFE  03DF               	decf	_USBStatusStageTimeoutCounter^(0+384),f	;volatile
  8735                           
  8736                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  8737  0BFF  085F               	movf	_USBStatusStageTimeoutCounter^(0+384),w	;volatile
  8738  0C00  1D03               	btfss	3,2
  8739  0C01  2C04               	goto	i1l5589
  8740                           
  8741                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  8742  0C02  2501  3188         	fcall	_USBCtrlEPAllowStatusStage
  8743  0C04                     i1l5589:	
  8744                           
  8745                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
  8746  0C04  003D               	movlb	29	; select bank29
  8747  0C05  1A90               	btfsc	16,5	;volatile
  8748  0C06  1E92               	btfss	18,5	;volatile
  8749  0C07  2C0A               	goto	i1l5595
  8750                           
  8751                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
  8752  0C08  25F2  3188         	fcall	_USBStallHandler
  8753  0C0A                     i1l5595:	
  8754                           
  8755                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  8756  0C0A  1890               	btfsc	16,1	;volatile
  8757  0C0B  1C92               	btfss	18,1	;volatile
  8758  0C0C  2C1B               	goto	i1l5603
  8759                           
  8760                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
  8761  0C0D  30FF               	movlw	255
  8762  0C0E  0020               	movlb	0	; select bank0
  8763  0C0F  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8764  0C10  307F               	movlw	127
  8765  0C11  00E1               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8766  0C12  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8767  0C13  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8768  0C14  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8769  0C15  0AE4               	incf	USER_USB_CALLBACK_EVENT_HANDLER@size,f
  8770  0C16  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8771  0C17  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8772                           
  8773                           ;usb_device.c: 759: {UEIR = 0;};
  8774  0C19  003D               	movlb	29	; select bank29
  8775  0C1A  0193               	clrf	19	;volatile
  8776  0C1B                     i1l5603:	
  8777                           
  8778                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  8779  0C1B  3004               	movlw	4
  8780  0C1C  0020               	movlb	0	; select bank0
  8781  0C1D  026F               	subwf	_USBDeviceState,w	;volatile
  8782  0C1E  1803               	skipnc
  8783  0C1F  2C22               	goto	i1l262
  8784                           
  8785                           ;usb_device.c: 775: {;usb_device.c: 776: PIR2bits.USBIF = 0;;
  8786  0C20  1112               	bcf	18,2	;volatile
  8787                           
  8788                           ;usb_device.c: 777: return;
  8789  0C21  0008               	return
  8790  0C22                     i1l262:	
  8791                           
  8792                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
  8793  0C22  003D               	movlb	29	; select bank29
  8794  0C23  1D92               	btfss	18,3	;volatile
  8795  0C24  2C5A               	goto	i1l263
  8796                           
  8797                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
  8798  0C25  0020               	movlb	0	; select bank0
  8799  0C26  01EE               	clrf	USBDeviceTasks@i
  8800  0C27  2C57               	goto	i1l264
  8801  0C28                     i1l5613:	
  8802                           
  8803                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
  8804  0C28  080F               	movf	15,w	;volatile
  8805  0C29  0023               	movlb	3	; select bank3
  8806  0C2A  00EA               	movwf	_USTATcopy^(0+384)	;volatile
  8807                           
  8808                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  8809  0C2B  0C6A               	rrf	_USTATcopy^(0+384),w	;volatile
  8810  0C2C  00FD               	movwf	??_USBDeviceTasks
  8811  0C2D  0CFD               	rrf	??_USBDeviceTasks,f
  8812  0C2E  0C7D               	rrf	??_USBDeviceTasks,w
  8813  0C2F  390F               	andlw	15
  8814  0C30  00E1               	movwf	_endpoint_number^(0+384)	;volatile
  8815                           
  8816                           ;usb_device.c: 793: (UIR &= 0xF7);
  8817  0C31  003D               	movlb	29	; select bank29
  8818  0C32  1190               	bcf	16,3	;volatile
  8819                           
  8820                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  8821  0C33  0023               	movlb	3	; select bank3
  8822  0C34  196A               	btfsc	_USTATcopy^(0+384),2	;volatile
  8823  0C35  2C39               	goto	i1l5623
  8824                           
  8825                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
  8826  0C36  0861               	movf	_endpoint_number^(0+384),w	;volatile
  8827  0C37  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
  8828  0C38  2C3B               	goto	L7
  8829  0C39                     i1l5623:	
  8830                           ;usb_device.c: 801: }
  8831                           
  8832                           
  8833                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
  8834  0C39  0861               	movf	_endpoint_number^(0+384),w	;volatile
  8835  0C3A  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
  8836  0C3B                     L7:	
  8837  0C3B  0086               	movwf	6
  8838  0C3C  3001               	movlw	1	; select bank3/4
  8839  0C3D  0087               	movwf	7
  8840  0C3E  0681               	xorwf	1,f
  8841                           
  8842                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
  8843  0C3F  0861               	movf	_endpoint_number^(0+384),w	;volatile
  8844  0C40  1D03               	btfss	3,2
  8845  0C41  2C45               	goto	i1l5629
  8846                           
  8847                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
  8848  0C42  25A0  3188         	fcall	_USBCtrlEPService
  8849                           
  8850                           ;usb_device.c: 813: }
  8851  0C44  2C51               	goto	i1l5631
  8852  0C45                     i1l5629:	
  8853                           
  8854                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
  8855  0C45  3072               	movlw	114
  8856  0C46  0020               	movlb	0	; select bank0
  8857  0C47  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
  8858  0C48  30EA               	movlw	low _USTATcopy
  8859  0C49  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
  8860  0C4A  00E2               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
  8861  0C4B  3001               	movlw	high _USTATcopy
  8862  0C4C  00E3               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  8863  0C4D  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
  8864  0C4E  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
  8865  0C4F  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
  8866  0C51                     i1l5631:	
  8867  0C51  0020               	movlb	0	; select bank0
  8868  0C52  3004               	movlw	4
  8869  0C53  0AEE               	incf	USBDeviceTasks@i,f
  8870  0C54  026E               	subwf	USBDeviceTasks@i,w
  8871  0C55  1803               	btfsc	3,0
  8872  0C56  2C5A               	goto	i1l263
  8873  0C57                     i1l264:	
  8874                           
  8875                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
  8876  0C57  003D               	movlb	29	; select bank29
  8877  0C58  1990               	btfsc	16,3	;volatile
  8878  0C59  2C28               	goto	i1l5613
  8879  0C5A                     i1l263:	
  8880                           
  8881                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: PIR2b
      +                          its.USBIF = 0;;
  8882  0C5A  0020               	movlb	0	; select bank0
  8883  0C5B  1112               	bcf	18,2	;volatile
  8884  0C5C  0008               	return
  8885  0C5D                     __end_of_USBDeviceTasks:	
  8886  0C5D                     __ptext35:	
  8887 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  8888 ;; Defined at:
  8889 ;;		line 51 in file "demo_src/usb_events.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  event           2    0[BANK0 ] enum E2233
  8892 ;;  pdata           2    2[BANK0 ] PTR void 
  8893 ;;		 -> RAM(4096), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  8894 ;;		 -> BDT(48), 
  8895 ;;  size            2    4[BANK0 ] unsigned int 
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;		None
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      unsigned char 
  8900 ;; Registers used:
  8901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 1F/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:        6 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    3
  8914 ;; This function calls:
  8915 ;;		_APP_DeviceCDCBasicDemoInitialize
  8916 ;;		_APP_LEDUpdateUSBStatus
  8917 ;;		_APP_UpdateTimers
  8918 ;;		_BUTTON_UpdateStates
  8919 ;;		_CDCInitEP
  8920 ;;		_USBCheckCDCRequest
  8921 ;;		i1_SYSTEM_Initialize
  8922 ;; This function is called by:
  8923 ;;		_USBDeviceTasks
  8924 ;;		_USBStdSetCfgHandler
  8925 ;;		_USBSuspend
  8926 ;;		_USBWakeFromSuspend
  8927 ;;		_USBCtrlTrfSetupHandler
  8928 ;;		_USBCheckStdRequest
  8929 ;;		_USBStdFeatureReqHandler
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function _USER_USB_CALLBACK_EVENT_HANDLER
  8935  0C5D                     _USER_USB_CALLBACK_EVENT_HANDLER:	
  8936  0C5D                     i1l3721:	
  8937                           ;incstack = 0
  8938                           ; Regs used in _USER_USB_CALLBACK_EVENT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8939                           
  8940                           
  8941                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  8942                           ; Switch size 1, requested type "speed"
  8943                           ; Number of cases is 2, Range of values is 0 to 127
  8944                           ; switch strategies available:
  8945                           ; Name         Instructions Cycles
  8946                           ; simple_byte            7     4 (average)
  8947                           ; direct_byte          262     6 (fixed)
  8948                           ; jumptable            260     6 (fixed)
  8949                           ;	Chosen strategy is simple_byte
  8950                           
  8951                           ;usb_events.c: 104: break;
  8952                           
  8953                           ;usb_events.c: 53: switch( (int) event )
  8954  0C5D  0861               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,w
  8955  0C5E  3A00               	xorlw	0	; case 0
  8956  0C5F  1903               	skipnz
  8957  0C60  2C79               	goto	i1l5903
  8958  0C61  3A7F               	xorlw	127	; case 127
  8959  0C62  1903               	skipnz
  8960  0C63  2C86               	goto	i1l5905
  8961  0C64  2C8B               	goto	i1l662
  8962  0C65                     i1l3723:	
  8963                           
  8964                           ;usb_events.c: 61: APP_LEDUpdateUSBStatus();
  8965  0C65  248C  3188         	fcall	_APP_LEDUpdateUSBStatus
  8966                           
  8967                           ;usb_events.c: 62: BUTTON_UpdateStates ();
  8968  0C67  255C  3188         	fcall	_BUTTON_UpdateStates
  8969                           
  8970                           ;usb_events.c: 63: APP_UpdateTimers ();
  8971  0C69  2E67               	ljmp	i1l3693
  8972  0C6A                     i1l3727:	
  8973                           ;usb_events.c: 64: break;
  8974                           
  8975                           
  8976                           ;usb_events.c: 68: APP_LEDUpdateUSBStatus();
  8977  0C6A  248C  3188         	fcall	_APP_LEDUpdateUSBStatus
  8978                           
  8979                           ;usb_events.c: 76: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
  8980  0C6C  3001               	movlw	1
  8981  0C6D  2276               	fcall	i1_SYSTEM_Initialize
  8982                           
  8983                           ;usb_events.c: 77: break;
  8984  0C6E  0008               	return
  8985  0C6F                     i1l3729:	
  8986                           
  8987                           ;usb_events.c: 81: APP_LEDUpdateUSBStatus();
  8988  0C6F  248C  3188         	fcall	_APP_LEDUpdateUSBStatus
  8989                           
  8990                           ;usb_events.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
  8991  0C71  3002               	movlw	2
  8992  0C72  2276               	fcall	i1_SYSTEM_Initialize
  8993                           
  8994                           ;usb_events.c: 88: break;
  8995  0C73  0008               	return
  8996  0C74                     i1l3731:	
  8997                           
  8998                           ;usb_events.c: 93: CDCInitEP();
  8999  0C74  3185  255D  3188   	fcall	_CDCInitEP
  9000                           
  9001                           ;usb_events.c: 94: APP_DeviceCDCBasicDemoInitialize();
  9002  0C77  2F94               	ljmp	i1l3697
  9003  0C78                     i1l3735:	
  9004                           ;usb_events.c: 95: break;
  9005                           
  9006                           
  9007                           ;usb_events.c: 103: USBCheckCDCRequest();
  9008  0C78  2FA0               	ljmp	i1l3589
  9009  0C79                     i1l5903:	
  9010                           
  9011                           ; Switch size 1, requested type "speed"
  9012                           ; Number of cases is 8, Range of values is 1 to 117
  9013                           ; switch strategies available:
  9014                           ; Name         Instructions Cycles
  9015                           ; direct_byte          243     9 (fixed)
  9016                           ; simple_byte           25    13 (average)
  9017                           ; jumptable            263     9 (fixed)
  9018                           ;	Chosen strategy is direct_byte
  9019  0C79  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  9020  0C7A  3EFF               	addlw	-1
  9021  0C7B  1C03               	skipc
  9022  0C7C  0008               	return
  9023  0C7D  0084               	movwf	4
  9024  0C7E  3075               	movlw	117
  9025  0C7F  0204               	subwf	4,w
  9026  0C80  1803               	skipnc
  9027  0C81  0008               	return
  9028  0C82  3187               	movlp	high i1S5907
  9029  0C83  3504               	lslf	4,w
  9030  0C84  3E00               	addlw	low i1S5907
  9031  0C85  0082               	movwf	2
  9032  0C86                     i1l5905:	
  9033                           
  9034                           ; Switch size 1, requested type "speed"
  9035                           ; Number of cases is 1, Range of values is 255 to 255
  9036                           ; switch strategies available:
  9037                           ; Name         Instructions Cycles
  9038                           ; simple_byte            4     3 (average)
  9039                           ; direct_byte            7     5 (fixed)
  9040                           ; jumptable            263     9 (fixed)
  9041                           ;	Chosen strategy is simple_byte
  9042  0C86  0860               	movf	USER_USB_CALLBACK_EVENT_HANDLER@event,w
  9043  0C87  3AFF               	xorlw	255	; case 255
  9044  0C88  1903               	skipnz
  9045  0C89  2C8B               	goto	i1l662
  9046  0C8A  2C8B               	goto	i1l662
  9047  0C8B                     i1l662:	
  9048  0C8B  0008               	return
  9049  0C8C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:	
  9050  0C8C                     __ptext46:	
  9051 ;; *************** function _APP_LEDUpdateUSBStatus *****************
  9052 ;; Defined at:
  9053 ;;		line 50 in file "demo_src/app_led_usb_status.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;		None
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 1F/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9071 ;;Total ram usage:        0 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    1
  9074 ;; This function calls:
  9075 ;;		_LED_On
  9076 ;;		i1_LED_Off
  9077 ;; This function is called by:
  9078 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _APP_LEDUpdateUSBStatus
  9084  0C8C                     _APP_LEDUpdateUSBStatus:	
  9085                           
  9086                           ;app_led_usb_status.c: 52: static uint16_t ledCount = 0;;app_led_usb_status.c: 54: if(UC
      +                          ONbits.SUSPND == 1)
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _APP_LEDUpdateUSBStatus: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9090  0C8C  003D               	movlb	29	; select bank29
  9091  0C8D  1C8E               	btfss	14,1	;volatile
  9092  0C8E  2CC4               	goto	i1l3689
  9093                           
  9094                           ;app_led_usb_status.c: 55: {;app_led_usb_status.c: 56: LED_Off(LED_D4);
  9095  0C8F  3004               	movlw	4
  9096  0C90  24CF               	fcall	i1_LED_Off
  9097  0C91  0008               	return
  9098  0C92                     i1l3663:	
  9099                           
  9100                           ;app_led_usb_status.c: 65: if(ledCount == 1)
  9101  0C92  0023               	movlb	3	; select bank3
  9102  0C93  0341               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  9103  0C94  0442               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  9104  0C95  1D03               	btfss	3,2
  9105  0C96  2C9B               	goto	i1l3667
  9106                           
  9107                           ;app_led_usb_status.c: 66: {;app_led_usb_status.c: 67: LED_On(LED_D4);
  9108  0C97  3004               	movlw	4
  9109  0C98  24E8  3188         	fcall	_LED_On
  9110                           
  9111                           ;app_led_usb_status.c: 68: }
  9112  0C9A  2CCA               	goto	i1l3691
  9113  0C9B                     i1l3667:	
  9114                           
  9115                           ;app_led_usb_status.c: 69: else if(ledCount == 75)
  9116  0C9B  304B               	movlw	75
  9117  0C9C  0641               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  9118  0C9D  0442               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  9119  0C9E  1D03               	btfss	3,2
  9120  0C9F  2CA4               	goto	i1l3671
  9121                           
  9122                           ;app_led_usb_status.c: 70: {;app_led_usb_status.c: 71: LED_Off(LED_D4);
  9123  0CA0  3004               	movlw	4
  9124  0CA1  24CF  3188         	fcall	i1_LED_Off
  9125                           
  9126                           ;app_led_usb_status.c: 72: }
  9127  0CA3  2CCA               	goto	i1l3691
  9128  0CA4                     i1l3671:	
  9129                           
  9130                           ;app_led_usb_status.c: 73: else if(ledCount > 150)
  9131  0CA4  3000               	movlw	0
  9132  0CA5  0242               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  9133  0CA6  3097               	movlw	151
  9134  0CA7                     L14:	
  9135  0CA7  1903               	skipnz
  9136  0CA8  0241               	subwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  9137  0CA9  1C03               	skipc
  9138  0CAA  2CCA               	goto	i1l3691
  9139                           
  9140                           ;app_led_usb_status.c: 74: {;app_led_usb_status.c: 75: ledCount = 0;
  9141  0CAB  01C1               	clrf	APP_LEDUpdateUSBStatus@ledCount^(0+384)
  9142  0CAC  01C2               	clrf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384)
  9143                           
  9144                           ;app_led_usb_status.c: 76: };app_led_usb_status.c: 77: break;
  9145  0CAD  2CCA               	goto	i1l3691
  9146  0CAE                     i1l3675:	
  9147                           
  9148                           ;app_led_usb_status.c: 82: if(ledCount == 1)
  9149  0CAE  0023               	movlb	3	; select bank3
  9150  0CAF  0341               	decf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  9151  0CB0  0442               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  9152  0CB1  1D03               	btfss	3,2
  9153  0CB2  2CB7               	goto	i1l3679
  9154                           
  9155                           ;app_led_usb_status.c: 83: {;app_led_usb_status.c: 84: LED_On(LED_D4);
  9156  0CB3  3004               	movlw	4
  9157  0CB4  24E8  3188         	fcall	_LED_On
  9158                           
  9159                           ;app_led_usb_status.c: 85: }
  9160  0CB6  2CCA               	goto	i1l3691
  9161  0CB7                     i1l3679:	
  9162                           
  9163                           ;app_led_usb_status.c: 86: else if(ledCount == 50)
  9164  0CB7  3032               	movlw	50
  9165  0CB8  0641               	xorwf	APP_LEDUpdateUSBStatus@ledCount^(0+384),w
  9166  0CB9  0442               	iorwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  9167  0CBA  1D03               	btfss	3,2
  9168  0CBB  2CC0               	goto	i1l3683
  9169                           
  9170                           ;app_led_usb_status.c: 87: {;app_led_usb_status.c: 88: LED_Off(LED_D4);
  9171  0CBC  3004               	movlw	4
  9172  0CBD  24CF  3188         	fcall	i1_LED_Off
  9173                           
  9174                           ;app_led_usb_status.c: 89: }
  9175  0CBF  2CCA               	goto	i1l3691
  9176  0CC0                     i1l3683:	
  9177                           
  9178                           ;app_led_usb_status.c: 90: else if(ledCount > 950)
  9179  0CC0  3003               	movlw	3
  9180  0CC1  0242               	subwf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),w
  9181  0CC2  30B7               	movlw	183
  9182  0CC3  2CA7               	goto	L14
  9183  0CC4                     i1l3689:	
  9184  0CC4  0020               	movlb	0	; select bank0
  9185  0CC5  086F               	movf	_USBDeviceState,w	;volatile
  9186                           
  9187                           ; Switch size 1, requested type "speed"
  9188                           ; Number of cases is 1, Range of values is 32 to 32
  9189                           ; switch strategies available:
  9190                           ; Name         Instructions Cycles
  9191                           ; simple_byte            4     3 (average)
  9192                           ; direct_byte           11     9 (fixed)
  9193                           ; jumptable            263     9 (fixed)
  9194                           ;	Chosen strategy is simple_byte
  9195  0CC6  3A20               	xorlw	32	; case 32
  9196  0CC7  1903               	skipnz
  9197  0CC8  2C92               	goto	i1l3663
  9198  0CC9  2CAE               	goto	i1l3675
  9199  0CCA                     i1l3691:	
  9200                           
  9201                           ;app_led_usb_status.c: 98: ledCount++;
  9202  0CCA  0023               	movlb	3	; select bank3
  9203  0CCB  0AC1               	incf	APP_LEDUpdateUSBStatus@ledCount^(0+384),f
  9204  0CCC  1903               	skipnz
  9205  0CCD  0AC2               	incf	(APP_LEDUpdateUSBStatus@ledCount+1)^(0+384),f
  9206  0CCE  0008               	return
  9207  0CCF                     __end_of_APP_LEDUpdateUSBStatus:	
  9208  0CCF                     __ptext47:	
  9209 ;; *************** function i1_LED_Off *****************
  9210 ;; Defined at:
  9211 ;;		line 100 in file "bsp/leds.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  led             1    wreg     enum E2
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  led             1    0[COMMON] enum E2
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/7
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:        1 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_APP_LEDUpdateUSBStatus
  9235 ;;		i1_LED_Enable
  9236 ;; This function uses a non-reentrant model
  9237 ;;
  9238                           
  9239                           
  9240                           ;psect for function i1_LED_Off
  9241  0CCF                     i1_LED_Off:	
  9242                           
  9243                           ;incstack = 0
  9244                           ; Regs used in i1_LED_Off: [wreg-fsr0h+status,2+status,0]
  9245                           ;i1LED_Off@led stored from wreg
  9246  0CCF  00F0               	movwf	i1LED_Off@led
  9247                           
  9248                           ;leds.c: 102: switch(led)
  9249  0CD0  2CDD               	goto	i1l3467
  9250  0CD1                     i1l18:	
  9251                           ;leds.c: 103: {;leds.c: 104: case LED_D1:
  9252                           
  9253                           
  9254                           ;leds.c: 105: LATCbits.LATC3 = 1;
  9255  0CD1  0022               	movlb	2	; select bank2
  9256  0CD2  158E               	bsf	14,3	;volatile
  9257                           
  9258                           ;leds.c: 106: break;
  9259  0CD3  0008               	return
  9260  0CD4                     i1l20:	
  9261                           ;leds.c: 108: case LED_D2:
  9262                           
  9263                           
  9264                           ;leds.c: 109: LATCbits.LATC4 = 1;
  9265  0CD4  0022               	movlb	2	; select bank2
  9266  0CD5  160E               	bsf	14,4	;volatile
  9267                           
  9268                           ;leds.c: 110: break;
  9269  0CD6  0008               	return
  9270  0CD7                     i1l21:	
  9271                           ;leds.c: 112: case LED_D3:
  9272                           
  9273                           
  9274                           ;leds.c: 113: LATCbits.LATC5 = 1;
  9275  0CD7  0022               	movlb	2	; select bank2
  9276  0CD8  168E               	bsf	14,5	;volatile
  9277                           
  9278                           ;leds.c: 114: break;
  9279  0CD9  0008               	return
  9280  0CDA                     i1l22:	
  9281                           ;leds.c: 116: case LED_D4:
  9282                           
  9283                           
  9284                           ;leds.c: 117: LATCbits.LATC6 = 1;
  9285  0CDA  0022               	movlb	2	; select bank2
  9286  0CDB  170E               	bsf	14,6	;volatile
  9287                           
  9288                           ;leds.c: 118: break;
  9289  0CDC  0008               	return
  9290  0CDD                     i1l3467:	
  9291  0CDD  0870               	movf	i1LED_Off@led,w
  9292                           
  9293                           ; Switch size 1, requested type "speed"
  9294                           ; Number of cases is 5, Range of values is 0 to 4
  9295                           ; switch strategies available:
  9296                           ; Name         Instructions Cycles
  9297                           ; direct_byte           16     6 (fixed)
  9298                           ; simple_byte           16     9 (average)
  9299                           ; jumptable            260     6 (fixed)
  9300                           ;	Chosen strategy is direct_byte
  9301  0CDE  0084               	movwf	4
  9302  0CDF  3005               	movlw	5
  9303  0CE0  0204               	subwf	4,w
  9304  0CE1  1803               	skipnc
  9305  0CE2  0008               	return
  9306  0CE3  3191               	movlp	high i1S5917
  9307  0CE4  3504               	lslf	4,w
  9308  0CE5  3E5A               	addlw	low i1S5917
  9309  0CE6  0082               	movwf	2
  9310  0CE7                     i1l24:	
  9311  0CE7  0008               	return
  9312  0CE8                     __end_ofi1_LED_Off:	
  9313  0CE8                     __ptext48:	
  9314 ;; *************** function _LED_On *****************
  9315 ;; Defined at:
  9316 ;;		line 59 in file "bsp/leds.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;  led             1    wreg     enum E2
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;  led             1    0[COMMON] enum E2
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9325 ;; Tracked objects:
  9326 ;;		On entry : 1F/3
  9327 ;;		On exit  : 1E/2
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;Total ram usage:        1 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; This function calls:
  9337 ;;		Nothing
  9338 ;; This function is called by:
  9339 ;;		_APP_LEDUpdateUSBStatus
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           
  9344                           ;psect for function _LED_On
  9345  0CE8                     _LED_On:	
  9346                           
  9347                           ;incstack = 0
  9348                           ; Regs used in _LED_On: [wreg-fsr0h+status,2+status,0]
  9349                           ;LED_On@led stored from wreg
  9350  0CE8  00F0               	movwf	LED_On@led
  9351                           
  9352                           ;leds.c: 61: switch(led)
  9353  0CE9  2CF6               	goto	i1l3477
  9354  0CEA                     i1l8:	
  9355                           ;leds.c: 62: {;leds.c: 63: case LED_D1:
  9356                           
  9357                           
  9358                           ;leds.c: 64: LATCbits.LATC3 = 0;
  9359  0CEA  0022               	movlb	2	; select bank2
  9360  0CEB  118E               	bcf	14,3	;volatile
  9361                           
  9362                           ;leds.c: 65: break;
  9363  0CEC  0008               	return
  9364  0CED                     i1l10:	
  9365                           ;leds.c: 67: case LED_D2:
  9366                           
  9367                           
  9368                           ;leds.c: 68: LATCbits.LATC4 = 0;
  9369  0CED  0022               	movlb	2	; select bank2
  9370  0CEE  120E               	bcf	14,4	;volatile
  9371                           
  9372                           ;leds.c: 69: break;
  9373  0CEF  0008               	return
  9374  0CF0                     i1l11:	
  9375                           ;leds.c: 71: case LED_D3:
  9376                           
  9377                           
  9378                           ;leds.c: 72: LATCbits.LATC5 = 0;
  9379  0CF0  0022               	movlb	2	; select bank2
  9380  0CF1  128E               	bcf	14,5	;volatile
  9381                           
  9382                           ;leds.c: 73: break;
  9383  0CF2  0008               	return
  9384  0CF3                     i1l12:	
  9385                           ;leds.c: 75: case LED_D4:
  9386                           
  9387                           
  9388                           ;leds.c: 76: LATCbits.LATC6 = 0;
  9389  0CF3  0022               	movlb	2	; select bank2
  9390  0CF4  130E               	bcf	14,6	;volatile
  9391                           
  9392                           ;leds.c: 77: break;
  9393  0CF5  0008               	return
  9394  0CF6                     i1l3477:	
  9395  0CF6  0870               	movf	LED_On@led,w
  9396                           
  9397                           ; Switch size 1, requested type "speed"
  9398                           ; Number of cases is 5, Range of values is 0 to 4
  9399                           ; switch strategies available:
  9400                           ; Name         Instructions Cycles
  9401                           ; direct_byte           16     6 (fixed)
  9402                           ; simple_byte           16     9 (average)
  9403                           ; jumptable            260     6 (fixed)
  9404                           ;	Chosen strategy is direct_byte
  9405  0CF7  0084               	movwf	4
  9406  0CF8  3005               	movlw	5
  9407  0CF9  0204               	subwf	4,w
  9408  0CFA  1803               	skipnc
  9409  0CFB  0008               	return
  9410  0CFC  3191               	movlp	high i1S5919
  9411  0CFD  3504               	lslf	4,w
  9412  0CFE  3E64               	addlw	low i1S5919
  9413  0CFF  0082               	movwf	2
  9414  0D00                     i1l14:	
  9415  0D00  0008               	return
  9416  0D01                     __end_of_LED_On:	
  9417  0D01                     __ptext52:	
  9418 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  9419 ;; Defined at:
  9420 ;;		line 1416 in file "usb/usb_device.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/3
  9431 ;;		On exit  : 1F/3
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;Total ram usage:        2 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; This function calls:
  9441 ;;		Nothing
  9442 ;; This function is called by:
  9443 ;;		_USBDeviceTasks
  9444 ;;		_USBCtrlEPServiceComplete
  9445 ;;		_USBCtrlTrfRxService
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449                           
  9450                           ;psect for function _USBCtrlEPAllowStatusStage
  9451  0D01                     _USBCtrlEPAllowStatusStage:	
  9452  0D01                     i1l3807:	
  9453                           ;incstack = 0
  9454                           ; Regs used in _USBCtrlEPAllowStatusStage: [wreg+fsr1l+fsr1h+status,2+status,0]
  9455                           
  9456                           
  9457                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  9458  0D01  0023               	movlb	3	; select bank3
  9459  0D02  085D               	movf	_USBStatusStageEnabledFlag1^(0+384),w	;volatile
  9460  0D03  1D03               	btfss	3,2
  9461  0D04  0008               	return
  9462                           
  9463                           ;usb_device.c: 1424: {;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  9464  0D05  3001               	movlw	1
  9465  0D06  00DD               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
  9466                           
  9467                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  9468  0D07  085C               	movf	_USBStatusStageEnabledFlag2^(0+384),w	;volatile
  9469  0D08  1D03               	btfss	3,2
  9470  0D09  0008               	return
  9471                           
  9472                           ;usb_device.c: 1427: {;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  9473  0D0A  3001               	movlw	1
  9474  0D0B  00DC               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
  9475                           
  9476                           ;usb_device.c: 1432: if(controlTransferState == 2)
  9477  0D0C  3002               	movlw	2
  9478  0D0D  0665               	xorwf	_controlTransferState^(0+384),w	;volatile
  9479  0D0E  1D03               	btfss	3,2
  9480  0D0F  2D22               	goto	i1l3823
  9481                           
  9482                           ;usb_device.c: 1433: {;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  9483  0D10  0827               	movf	_pBDTEntryIn^(0+384),w
  9484  0D11  0086               	movwf	6
  9485  0D12  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9486  0D13  0087               	movwf	7
  9487  0D14  3141               	addfsr 1,1
  9488  0D15  0181               	clrf	1
  9489                           
  9490                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9491  0D16  0827               	movf	_pBDTEntryIn^(0+384),w
  9492  0D17  0086               	movwf	6
  9493  0D18  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9494  0D19  0087               	movwf	7
  9495  0D1A  3048               	movlw	72
  9496  0D1B  0081               	movwf	1
  9497                           
  9498                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9499  0D1C  0827               	movf	_pBDTEntryIn^(0+384),w
  9500  0D1D  0086               	movwf	6
  9501  0D1E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9502  0D1F  0087               	movwf	7
  9503  0D20  1781               	bsf	1,7
  9504                           
  9505                           ;usb_device.c: 1437: }
  9506  0D21  0008               	return
  9507  0D22                     i1l3823:	
  9508                           
  9509                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  9510  0D22  0B65               	decfsz	_controlTransferState^(0+384),w	;volatile
  9511  0D23  0008               	return
  9512                           
  9513                           ;usb_device.c: 1439: {;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  9514  0D24  01E0               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9515                           
  9516                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  9517  0D25  0A67               	incf	_pBDTEntryEP0OutCurrent^(0+384),w
  9518  0D26  0086               	movwf	6
  9519  0D27  3008               	movlw	8
  9520  0D28  0187               	clrf	7
  9521  0D29  0081               	movwf	1
  9522                           
  9523                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9524  0D2A  3050               	movlw	80
  9525  0D2B  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9526  0D2C  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  9527  0D2D  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9528  0D2E  3E02               	addlw	2
  9529  0D2F  0086               	movwf	6
  9530  0D30  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9531  0D31  3FC0               	movwi [0]fsr1
  9532  0D32  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9533  0D33  3FC1               	movwi [1]fsr1
  9534                           
  9535                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  9536  0D34  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9537  0D35  0086               	movwf	6
  9538  0D36  3004               	movlw	4
  9539  0D37  0081               	movwf	1
  9540                           
  9541                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  9542  0D38  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9543  0D39  0086               	movwf	6
  9544  0D3A  3001               	movlw	1
  9545  0D3B  1781               	bsf	1,7
  9546                           
  9547                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  9548  0D3C  00E0               	movwf	_BothEP0OutUOWNsSet^(0+384)	;volatile
  9549                           
  9550                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  9551  0D3D  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  9552  0D3E  3E01               	addlw	1
  9553  0D3F  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9554  0D40  3000               	movlw	0
  9555  0D41  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
  9556  0D42  00F1               	movwf	??_USBCtrlEPAllowStatusStage+1
  9557  0D43  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9558  0D44  0086               	movwf	6
  9559  0D45  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9560  0D46  0087               	movwf	7
  9561  0D47  3008               	movlw	8
  9562  0D48  0081               	movwf	1
  9563                           
  9564                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
  9565  0D49  3050               	movlw	80
  9566  0D4A  00F0               	movwf	??_USBCtrlEPAllowStatusStage
  9567  0D4B  01F1               	clrf	??_USBCtrlEPAllowStatusStage+1
  9568  0D4C  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  9569  0D4D  0086               	movwf	6
  9570  0D4E  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  9571  0D4F  0087               	movwf	7
  9572  0D50  3142               	addfsr 1,2
  9573  0D51  0870               	movf	??_USBCtrlEPAllowStatusStage,w
  9574  0D52  3FC0               	movwi [0]fsr1
  9575  0D53  0871               	movf	??_USBCtrlEPAllowStatusStage+1,w
  9576  0D54  3FC1               	movwi [1]fsr1
  9577                           
  9578                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  9579  0D55  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
  9580  0D56  0086               	movwf	6
  9581  0D57  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
  9582  0D58  0087               	movwf	7
  9583  0D59  3080               	movlw	128
  9584  0D5A  0081               	movwf	1
  9585  0D5B  0008               	return
  9586  0D5C                     __end_of_USBCtrlEPAllowStatusStage:	
  9587  0D5C                     __ptext44:	
  9588 ;; *************** function _BUTTON_UpdateStates *****************
  9589 ;; Defined at:
  9590 ;;		line 58 in file "bsp/buttons.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;		None
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;		None
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  1    wreg      void 
  9597 ;; Registers used:
  9598 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 1F/3
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9608 ;;Total ram usage:        1 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; This function calls:
  9611 ;;		Nothing
  9612 ;; This function is called by:
  9613 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           
  9618                           ;psect for function _BUTTON_UpdateStates
  9619  0D5C                     _BUTTON_UpdateStates:	
  9620                           
  9621                           ;buttons.c: 61: if (timer < 9) {
  9622                           
  9623                           ;incstack = 0
  9624                           ; Regs used in _BUTTON_UpdateStates: [wreg-fsr0h+status,2+status,0]
  9625  0D5C  0023               	movlb	3	; select bank3
  9626  0D5D  084E               	movf	(_timer+1)^(0+384),w
  9627  0D5E  3A80               	xorlw	128
  9628  0D5F  00F0               	movwf	??_BUTTON_UpdateStates
  9629  0D60  3080               	movlw	128
  9630  0D61  0270               	subwf	??_BUTTON_UpdateStates,w
  9631  0D62  1D03               	skipz
  9632  0D63  2D66               	goto	u203_25
  9633  0D64  3009               	movlw	9
  9634  0D65  024D               	subwf	_timer^(0+384),w
  9635  0D66                     u203_25:	
  9636  0D66  1803               	skipnc
  9637  0D67  2D6D               	goto	i1l3561
  9638                           
  9639                           ;buttons.c: 62: timer++;
  9640  0D68  0023               	movlb	3	; select bank3
  9641  0D69  0ACD               	incf	_timer^(0+384),f
  9642  0D6A  1903               	skipnz
  9643  0D6B  0ACE               	incf	(_timer+1)^(0+384),f
  9644                           
  9645                           ;buttons.c: 63: } else {
  9646  0D6C  0008               	return
  9647  0D6D                     i1l3561:	
  9648                           
  9649                           ;buttons.c: 64: timer = 0;
  9650  0D6D  0023               	movlb	3	; select bank3
  9651  0D6E  01CD               	clrf	_timer^(0+384)
  9652  0D6F  01CE               	clrf	(_timer+1)^(0+384)
  9653                           
  9654                           ;buttons.c: 67: switch (state1) {
  9655  0D70  2D90               	goto	i1l3579
  9656  0D71                     i1l3563:	
  9657                           
  9658                           ;buttons.c: 69: state1 = (PORTBbits.RB6 == 0) ? 1 : 0;
  9659  0D71  1003               	clrc
  9660  0D72  0020               	movlb	0	; select bank0
  9661  0D73  1F0D               	btfss	13,6	;volatile
  9662  0D74  1403               	setc
  9663  0D75  3000               	movlw	0
  9664  0D76  3D09               	addwfc	9,w
  9665  0D77  0023               	movlb	3	; select bank3
  9666  0D78  00CF               	movwf	_state1^(0+384)
  9667  0D79  01D0               	clrf	(_state1+1)^(0+384)
  9668                           
  9669                           ;buttons.c: 70: break;
  9670  0D7A  0008               	return
  9671  0D7B                     i1l74:	
  9672                           ;buttons.c: 71: case 1:
  9673                           
  9674                           
  9675                           ;buttons.c: 72: state1 = (PORTBbits.RB6 == 0) ? 2 : 0;
  9676  0D7B  0020               	movlb	0	; select bank0
  9677  0D7C  1F0D               	btfss	13,6	;volatile
  9678  0D7D  2D82               	goto	i1l3567
  9679  0D7E  0023               	movlb	3	; select bank3
  9680  0D7F  01CF               	clrf	_state1^(0+384)
  9681  0D80  01D0               	clrf	(_state1+1)^(0+384)
  9682  0D81  0008               	return
  9683  0D82                     i1l3567:	
  9684  0D82  3002               	movlw	2
  9685  0D83  0023               	movlb	3	; select bank3
  9686  0D84  00CF               	movwf	_state1^(0+384)
  9687  0D85  01D0               	clrf	(_state1+1)^(0+384)
  9688  0D86  0008               	return
  9689  0D87                     i1l79:	
  9690                           ;buttons.c: 74: case 2:
  9691                           
  9692                           
  9693                           ;buttons.c: 75: state1 = (PORTBbits.RB6 == 0) ? 2 : 3;
  9694  0D87  0020               	movlb	0	; select bank0
  9695  0D88  1F0D               	btfss	13,6	;volatile
  9696  0D89  2D82               	goto	i1l3567
  9697  0D8A  3003               	movlw	3
  9698  0D8B  0023               	movlb	3	; select bank3
  9699  0D8C  00CF               	movwf	_state1^(0+384)
  9700  0D8D  01D0               	clrf	(_state1+1)^(0+384)
  9701  0D8E  0008               	return
  9702  0D8F                     i1l84:	
  9703                           ;buttons.c: 77: case 3:
  9704                           
  9705  0D8F  2D7B               	goto	i1l74
  9706  0D90                     i1l3579:	
  9707                           ;buttons.c: 78: state1 = (PORTBbits.RB6 == 0) ? 2 : 0;
  9708                           
  9709                           
  9710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9711                           ; Switch size 1, requested type "speed"
  9712                           ; Number of cases is 1, Range of values is 0 to 0
  9713                           ; switch strategies available:
  9714                           ; Name         Instructions Cycles
  9715                           ; simple_byte            4     3 (average)
  9716                           ; direct_byte            8     6 (fixed)
  9717                           ; jumptable            260     6 (fixed)
  9718                           ;	Chosen strategy is simple_byte
  9719  0D90  0850               	movf	(_state1+1)^(0+384),w
  9720  0D91  3A00               	xorlw	0	; case 0
  9721  0D92  1903               	skipnz
  9722  0D93  2D95               	goto	i1l5913
  9723  0D94  2D9F               	goto	i1l89
  9724  0D95                     i1l5913:	
  9725                           
  9726                           ; Switch size 1, requested type "speed"
  9727                           ; Number of cases is 4, Range of values is 0 to 3
  9728                           ; switch strategies available:
  9729                           ; Name         Instructions Cycles
  9730                           ; direct_byte           14     6 (fixed)
  9731                           ; simple_byte           13     7 (average)
  9732                           ; jumptable            260     6 (fixed)
  9733                           ;	Chosen strategy is direct_byte
  9734  0D95  084F               	movf	_state1^(0+384),w
  9735  0D96  0084               	movwf	4
  9736  0D97  3004               	movlw	4
  9737  0D98  0204               	subwf	4,w
  9738  0D99  1803               	skipnc
  9739  0D9A  0008               	return
  9740  0D9B  3191               	movlp	high i1S5915
  9741  0D9C  3504               	lslf	4,w
  9742  0D9D  3E6E               	addlw	low i1S5915
  9743  0D9E  0082               	movwf	2
  9744  0D9F                     i1l89:	
  9745  0D9F  0008               	return
  9746  0DA0                     __end_of_BUTTON_UpdateStates:	
  9747  0DA0                     __ptext25:	
  9748 ;; *************** function _USBCtrlEPService *****************
  9749 ;; Defined at:
  9750 ;;		line 2372 in file "usb/usb_device.c"
  9751 ;; Parameters:    Size  Location     Type
  9752 ;;		None
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      void 
  9757 ;; Registers used:
  9758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 1F/3
  9761 ;;		On exit  : 1C/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9766 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9767 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;Total ram usage:        3 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:    7
  9771 ;; This function calls:
  9772 ;;		_USBCtrlTrfInHandler
  9773 ;;		_USBCtrlTrfOutHandler
  9774 ;;		_USBCtrlTrfSetupHandler
  9775 ;; This function is called by:
  9776 ;;		_USBDeviceTasks
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           
  9781                           ;psect for function _USBCtrlEPService
  9782  0DA0                     _USBCtrlEPService:	
  9783                           
  9784                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  9785                           
  9786                           ;incstack = 0
  9787                           ; Regs used in _USBCtrlEPService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9788  0DA0  302D               	movlw	45
  9789  0DA1  00DF               	movwf	_USBStatusStageTimeoutCounter^(0+384)	;volatile
  9790                           
  9791                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  9792  0DA2  086A               	movf	_USTATcopy^(0+384),w	;volatile
  9793  0DA3  39FD               	andlw	253
  9794  0DA4  1D03               	btfss	3,2
  9795  0DA5  2DD8               	goto	i1l5527
  9796                           
  9797                           ;usb_device.c: 2383: {;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
  9798  0DA6  366A               	lsrf	_USTATcopy^(0+384),w	;volatile
  9799  0DA7  393F               	andlw	63
  9800  0DA8  0709               	addwf	9,w
  9801  0DA9  0709               	addwf	9,w
  9802  0DAA  3E20               	addlw	32
  9803  0DAB  00E7               	movwf	_pBDTEntryEP0OutCurrent^(0+384)
  9804                           
  9805                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  9806  0DAC  00CB               	movwf	_pBDTEntryEP0OutNext^(0+384)
  9807  0DAD  39FF               	andlw	255
  9808  0DAE  1D03               	skipz
  9809  0DAF  3000               	movlw	0
  9810  0DB0  00CC               	movwf	(_pBDTEntryEP0OutNext+1)^(0+384)
  9811                           
  9812                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  9813  0DB1  3004               	movlw	4
  9814  0DB2  064B               	xorwf	_pBDTEntryEP0OutNext^(0+384),w
  9815  0DB3  00CB               	movwf	_pBDTEntryEP0OutNext^(0+384)
  9816                           
  9817                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  9818  0DB4  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9819  0DB5  0086               	movwf	6
  9820  0DB6  0187               	clrf	7
  9821  0DB7  0C01               	rrf	1,w
  9822  0DB8  0C89               	rrf	9,f
  9823  0DB9  390F               	andlw	15
  9824  0DBA  3A0D               	xorlw	13
  9825  0DBB  1D03               	skipz
  9826  0DBC  2DD7               	goto	i1l5525
  9827                           
  9828                           ;usb_device.c: 2400: {;usb_device.c: 2405: __builtin_memcpy((uint8_t*)&SetupPkt,(uint8_t
      +                          *)((void *)(pBDTEntryEP0OutCurrent->ADR)),8);
  9829  0DBD  3050               	movlw	80
  9830  0DBE  0086               	movwf	6
  9831  0DBF  0023               	movlb	3	; select bank3
  9832  0DC0  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9833  0DC1  3E02               	addlw	2
  9834  0DC2  0084               	movwf	4
  9835  0DC3  0185               	clrf	5
  9836  0DC4  3F00               	moviw [0]fsr0
  9837  0DC5  0020               	movlb	0	; select bank0
  9838  0DC6  00EB               	movwf	??_USBCtrlEPService
  9839  0DC7  3F01               	moviw [1]fsr0
  9840  0DC8  00EC               	movwf	??_USBCtrlEPService+1
  9841  0DC9  086B               	movf	??_USBCtrlEPService,w
  9842  0DCA  0084               	movwf	4
  9843  0DCB  086C               	movf	??_USBCtrlEPService+1,w
  9844  0DCC  0085               	movwf	5
  9845  0DCD  3008               	movlw	8
  9846  0DCE  00ED               	movwf	??_USBCtrlEPService+2
  9847  0DCF  086D               	movf	??_USBCtrlEPService+2,w
  9848  0DD0  1903               	skipnz
  9849  0DD1  2DD6               	goto	i1l5523
  9850  0DD2                     u400_2m0:	
  9851  0DD2  0012               	moviw fsr0++
  9852  0DD3  001E               	movwi fsr1++
  9853  0DD4  0BED               	decfsz	??_USBCtrlEPService+2,f
  9854  0DD5  2DD2               	goto	u400_2m0
  9855  0DD6                     i1l5523:	
  9856                           
  9857                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  9858  0DD6  2801               	ljmp	i1l5483
  9859  0DD7                     i1l5525:	
  9860                           ;usb_device.c: 2409: }
  9861                           
  9862                           
  9863                           ;usb_device.c: 2410: else;usb_device.c: 2411: {;usb_device.c: 2413: USBCtrlTrfOutHandler
      +                          ();
  9864  0DD7  2E37               	ljmp	i1l4267
  9865  0DD8                     i1l5527:	
  9866                           
  9867                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  9868  0DD8  30FD               	movlw	253
  9869  0DD9  056A               	andwf	_USTATcopy^(0+384),w	;volatile
  9870  0DDA  0020               	movlb	0	; select bank0
  9871  0DDB  00EB               	movwf	??_USBCtrlEPService
  9872  0DDC  3A04               	xorlw	4
  9873  0DDD  1D03               	btfss	3,2
  9874  0DDE  0008               	return
  9875                           
  9876                           ;usb_device.c: 2417: {;usb_device.c: 2420: USBCtrlTrfInHandler();
  9877  0DDF  2E6B               	ljmp	i1l4285
  9878  0DE0                     __end_of_USBCtrlEPService:	
  9879  0DE0                     __ptext24:	
  9880 ;; *************** function _USBIncrement1msInternalTimers *****************
  9881 ;; Defined at:
  9882 ;;		line 3025 in file "usb/usb_device.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;		None
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg, status,2, status,0
  9891 ;; Tracked objects:
  9892 ;;		On entry : 1F/1D
  9893 ;;		On exit  : 1F/3
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9900 ;;Total ram usage:        0 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; This function calls:
  9903 ;;		Nothing
  9904 ;; This function is called by:
  9905 ;;		_USBDeviceTasks
  9906 ;; This function uses a non-reentrant model
  9907 ;;
  9908                           
  9909                           
  9910                           ;psect for function _USBIncrement1msInternalTimers
  9911  0DE0                     _USBIncrement1msInternalTimers:	
  9912                           
  9913                           ;usb_device.c: 3033: USB1msTickCount++;
  9914                           
  9915                           ;incstack = 0
  9916                           ; Regs used in _USBIncrement1msInternalTimers: [wreg+status,2+status,0]
  9917  0DE0  3001               	movlw	1
  9918  0DE1  0024               	movlb	4	; select bank4
  9919  0DE2  07A0               	addwf	_USB1msTickCount^(0+512),f	;volatile
  9920  0DE3  3000               	movlw	0
  9921  0DE4  3DA1               	addwfc	(_USB1msTickCount+1)^(0+512),f	;volatile
  9922  0DE5  3DA2               	addwfc	(_USB1msTickCount+2)^(0+512),f	;volatile
  9923  0DE6  3DA3               	addwfc	(_USB1msTickCount+3)^(0+512),f	;volatile
  9924                           
  9925                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  9926  0DE7  0023               	movlb	3	; select bank3
  9927  0DE8  0862               	movf	_USBBusIsSuspended^(0+384),w	;volatile
  9928  0DE9  1D03               	btfss	3,2
  9929  0DEA  0008               	return
  9930                           
  9931                           ;usb_device.c: 3035: {;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  9932  0DEB  0AD9               	incf	_USBTicksSinceSuspendEnd^(0+384),f	;volatile
  9933                           
  9934                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  9935  0DEC  0859               	movf	_USBTicksSinceSuspendEnd^(0+384),w	;volatile
  9936  0DED  1D03               	btfss	3,2
  9937  0DEE  0008               	return
  9938                           
  9939                           ;usb_device.c: 3039: {;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  9940  0DEF  30FF               	movlw	255
  9941  0DF0  00D9               	movwf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
  9942  0DF1  0008               	return
  9943  0DF2                     __end_of_USBIncrement1msInternalTimers:	
  9944  0DF2                     __ptext23:	
  9945 ;; *************** function _USBStallHandler *****************
  9946 ;; Defined at:
  9947 ;;		line 2202 in file "usb/usb_device.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 1F/1D
  9958 ;;		On exit  : 1F/1D
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; This function calls:
  9968 ;;		Nothing
  9969 ;; This function is called by:
  9970 ;;		_USBDeviceTasks
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _USBStallHandler
  9976  0DF2                     _USBStallHandler:	
  9977                           
  9978                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in _USBStallHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  9982  0DF2  1C18               	btfss	24,0	;volatile
  9983  0DF3  2E0E               	goto	i1l4459
  9984                           
  9985                           ;usb_device.c: 2215: {;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
  9986  0DF4  0023               	movlb	3	; select bank3
  9987  0DF5  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
  9988  0DF6  0086               	movwf	6
  9989  0DF7  3080               	movlw	128
  9990  0DF8  0187               	clrf	7
  9991  0DF9  0601               	xorwf	1,w
  9992  0DFA  1D03               	btfss	3,2
  9993  0DFB  2E0C               	goto	i1l4457
  9994  0DFC  0827               	movf	_pBDTEntryIn^(0+384),w
  9995  0DFD  0086               	movwf	6
  9996  0DFE  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
  9997  0DFF  0087               	movwf	7
  9998  0E00  3084               	movlw	132
  9999  0E01  0601               	xorwf	1,w
 10000  0E02  1D03               	btfss	3,2
 10001  0E03  2E0C               	goto	i1l4457
 10002                           
 10003                           ;usb_device.c: 2218: {;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 10004  0E04  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10005  0E05  0086               	movwf	6
 10006  0E06  300C               	movlw	12
 10007  0E07  0187               	clrf	7
 10008  0E08  0081               	movwf	1
 10009                           
 10010                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10011  0E09  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 10012  0E0A  0086               	movwf	6
 10013  0E0B  1781               	bsf	1,7
 10014  0E0C                     i1l4457:	
 10015                           
 10016                           ;usb_device.c: 2222: };usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 10017  0E0C  003D               	movlb	29	; select bank29
 10018  0E0D  1018               	bcf	24,0	;volatile
 10019  0E0E                     i1l4459:	
 10020                           
 10021                           ;usb_device.c: 2224: };usb_device.c: 2226: (UIR &= 0xDF);
 10022  0E0E  1290               	bcf	16,5	;volatile
 10023  0E0F  0008               	return
 10024  0E10                     __end_of_USBStallHandler:	
 10025  0E10                     __ptext22:	
 10026 ;; *************** function _USBSuspend *****************
 10027 ;; Defined at:
 10028 ;;		line 2245 in file "usb/usb_device.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;		None
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 1F/1D
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10046 ;;Total ram usage:        0 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    4
 10049 ;; This function calls:
 10050 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10051 ;; This function is called by:
 10052 ;;		_USBDeviceTasks
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056                           
 10057                           ;psect for function _USBSuspend
 10058  0E10                     _USBSuspend:	
 10059                           
 10060                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 10061                           
 10062                           ;incstack = 0
 10063                           ; Regs used in _USBSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10064  0E10  1512               	bsf	18,2	;volatile
 10065                           
 10066                           ;usb_device.c: 2271: (UIR &= 0xEF);
 10067  0E11  1210               	bcf	16,4	;volatile
 10068                           
 10069                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 10070  0E12  148E               	bsf	14,1	;volatile
 10071                           
 10072                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 10073  0E13  3001               	movlw	1
 10074  0E14  0023               	movlb	3	; select bank3
 10075  0E15  00E2               	movwf	_USBBusIsSuspended^(0+384)	;volatile
 10076                           
 10077                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
 10078  0E16  01D9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10079                           
 10080                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 10081  0E17  3075               	movlw	117
 10082  0E18  0020               	movlb	0	; select bank0
 10083  0E19  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
 10084  0E1A  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10085  0E1B  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10086  0E1C  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10087  0E1D  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
 10088  0E1E  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10089  0E1F  2C5D               	ljmp	i1l3721
 10090  0E20                     __end_of_USBSuspend:	
 10091  0E20                     __ptext21:	
 10092 ;; *************** function _USBWakeFromSuspend *****************
 10093 ;; Defined at:
 10094 ;;		line 2303 in file "usb/usb_device.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;		None
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1    wreg      void 
 10101 ;; Registers used:
 10102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10103 ;; Tracked objects:
 10104 ;;		On entry : 1F/1D
 10105 ;;		On exit  : 1F/3
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;Total ram usage:        0 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; Hardware stack levels required when called:    4
 10115 ;; This function calls:
 10116 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10117 ;; This function is called by:
 10118 ;;		_USBDeviceTasks
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           
 10123                           ;psect for function _USBWakeFromSuspend
 10124  0E20                     _USBWakeFromSuspend:	
 10125                           
 10126                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
 10127                           
 10128                           ;incstack = 0
 10129                           ; Regs used in _USBWakeFromSuspend: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10130  0E20  0023               	movlb	3	; select bank3
 10131  0E21  01E2               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 10132                           
 10133                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 10134  0E22  3074               	movlw	116
 10135  0E23  0020               	movlb	0	; select bank0
 10136  0E24  00E0               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event
 10137  0E25  3000               	movlw	0
 10138  0E26  01E1               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@event+1
 10139  0E27  01E2               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata
 10140  0E28  01E3               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 10141  0E29  01E4               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size
 10142  0E2A  01E5               	clrf	USER_USB_CALLBACK_EVENT_HANDLER@size+1
 10143  0E2B  245D  3188         	fcall	_USER_USB_CALLBACK_EVENT_HANDLER
 10144                           
 10145                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
 10146  0E2D  003D               	movlb	29	; select bank29
 10147  0E2E  108E               	bcf	14,1	;volatile
 10148                           
 10149                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
 10150  0E2F  1112               	bcf	18,2	;volatile
 10151  0E30                     i1l412:	
 10152                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
 10153                           
 10154  0E30  1D10               	btfss	16,2	;volatile
 10155  0E31  2E34               	goto	i1l4431
 10156                           
 10157                           ;usb_device.c: 2343: {;usb_device.c: 2344: (UIR &= 0xFB);
 10158  0E32  1110               	bcf	16,2	;volatile
 10159  0E33  2E30               	goto	i1l412
 10160  0E34                     i1l4431:	
 10161                           
 10162                           ;usb_device.c: 2345: };usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
 10163  0E34  0023               	movlb	3	; select bank3
 10164  0E35  01D9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10165  0E36  0008               	return
 10166  0E37                     __end_of_USBWakeFromSuspend:	
 10167  0E37                     __ptext50:	
 10168 ;; *************** function _USBCtrlTrfOutHandler *****************
 10169 ;; Defined at:
 10170 ;;		line 2538 in file "usb/usb_device.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;		None
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10179 ;; Tracked objects:
 10180 ;;		On entry : 1F/3
 10181 ;;		On exit  : 1F/3
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;Total ram usage:        2 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    2
 10191 ;; This function calls:
 10192 ;;		_USBCtrlTrfRxService
 10193 ;; This function is called by:
 10194 ;;		_USBCtrlEPService
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           
 10199                           ;psect for function _USBCtrlTrfOutHandler
 10200  0E37                     _USBCtrlTrfOutHandler:	
 10201  0E37                     i1l4267:	
 10202                           ;incstack = 0
 10203                           ; Regs used in _USBCtrlTrfOutHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10204                           
 10205                           
 10206                           ;usb_device.c: 2540: if(controlTransferState == 2)
 10207  0E37  3002               	movlw	2
 10208  0E38  0665               	xorwf	_controlTransferState^(0+384),w	;volatile
 10209  0E39  1D03               	btfss	3,2
 10210  0E3A  2E3D               	goto	i1l4271
 10211                           
 10212                           ;usb_device.c: 2541: {;usb_device.c: 2542: USBCtrlTrfRxService();
 10213  0E3B  3186  2E4B         	ljmp	i1l4115
 10214  0E3D                     i1l4271:	
 10215                           ;usb_device.c: 2543: }
 10216                           
 10217                           
 10218                           ;usb_device.c: 2544: else;usb_device.c: 2545: {;usb_device.c: 2548: controlTransferState
      +                           = 0;
 10219  0E3D  01E5               	clrf	_controlTransferState^(0+384)	;volatile
 10220                           
 10221                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
 10222  0E3E  0860               	movf	_BothEP0OutUOWNsSet^(0+384),w	;volatile
 10223  0E3F  1D03               	btfss	3,2
 10224  0E40  2E65               	goto	i1l4283
 10225                           
 10226                           ;usb_device.c: 2556: {;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
 10227  0E41  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10228  0E42  3E01               	addlw	1
 10229  0E43  00F6               	movwf	??_USBCtrlTrfOutHandler
 10230  0E44  3000               	movlw	0
 10231  0E45  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10232  0E46  00F7               	movwf	??_USBCtrlTrfOutHandler+1
 10233  0E47  0876               	movf	??_USBCtrlTrfOutHandler,w
 10234  0E48  0086               	movwf	6
 10235  0E49  0877               	movf	??_USBCtrlTrfOutHandler+1,w
 10236  0E4A  0087               	movwf	7
 10237  0E4B  3008               	movlw	8
 10238  0E4C  0081               	movwf	1
 10239                           
 10240                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10241  0E4D  3050               	movlw	80
 10242  0E4E  00F6               	movwf	??_USBCtrlTrfOutHandler
 10243  0E4F  01F7               	clrf	??_USBCtrlTrfOutHandler+1
 10244  0E50  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10245  0E51  0086               	movwf	6
 10246  0E52  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10247  0E53  0087               	movwf	7
 10248  0E54  3142               	addfsr 1,2
 10249  0E55  0876               	movf	??_USBCtrlTrfOutHandler,w
 10250  0E56  3FC0               	movwi [0]fsr1
 10251  0E57  0877               	movf	??_USBCtrlTrfOutHandler+1,w
 10252  0E58  3FC1               	movwi [1]fsr1
 10253                           
 10254                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10255  0E59  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10256  0E5A  0086               	movwf	6
 10257  0E5B  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10258  0E5C  0087               	movwf	7
 10259  0E5D  300C               	movlw	12
 10260  0E5E  0081               	movwf	1
 10261                           
 10262                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10263  0E5F  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 10264  0E60  0086               	movwf	6
 10265  0E61  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 10266  0E62  0087               	movwf	7
 10267  0E63  1781               	bsf	1,7
 10268                           
 10269                           ;usb_device.c: 2561: }
 10270  0E64  0008               	return
 10271  0E65                     i1l4283:	
 10272                           
 10273                           ;usb_device.c: 2562: else;usb_device.c: 2563: {;usb_device.c: 2564: BothEP0OutUOWNsSet =
      +                           0;
 10274  0E65  01E0               	clrf	_BothEP0OutUOWNsSet^(0+384)	;volatile
 10275  0E66  0008               	return
 10276  0E67                     __end_of_USBCtrlTrfOutHandler:	
 10277  0E67                     __ptext45:	
 10278 ;; *************** function _APP_UpdateTimers *****************
 10279 ;; Defined at:
 10280 ;;		line 59 in file "demo_src/app_device_cdc_basic.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;		None
 10283 ;; Auto vars:     Size  Location     Type
 10284 ;;		None
 10285 ;; Return value:  Size  Location     Type
 10286 ;;                  1    wreg      void 
 10287 ;; Registers used:
 10288 ;;		wreg, status,2, status,0
 10289 ;; Tracked objects:
 10290 ;;		On entry : 1F/3
 10291 ;;		On exit  : 1F/3
 10292 ;;		Unchanged: 0/0
 10293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10298 ;;Total ram usage:        0 bytes
 10299 ;; Hardware stack levels used:    1
 10300 ;; This function calls:
 10301 ;;		Nothing
 10302 ;; This function is called by:
 10303 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           
 10308                           ;psect for function _APP_UpdateTimers
 10309  0E67                     _APP_UpdateTimers:	
 10310  0E67                     i1l3693:	
 10311                           ;incstack = 0
 10312                           ; Regs used in _APP_UpdateTimers: [wreg+status,2+status,0]
 10313                           
 10314                           
 10315                           ;app_device_cdc_basic.c: 61: if (timer != 0) {
 10316  0E67  086C               	movf	app_device_cdc_basic@timer^(0+384),w
 10317  0E68  1D03               	btfss	3,2
 10318                           
 10319                           ;app_device_cdc_basic.c: 62: timer--;
 10320  0E69  03EC               	decf	app_device_cdc_basic@timer^(0+384),f
 10321  0E6A  0008               	return
 10322  0E6B                     __end_of_APP_UpdateTimers:	
 10323  0E6B                     __ptext53:	
 10324 ;; *************** function _USBCtrlTrfInHandler *****************
 10325 ;; Defined at:
 10326 ;;		line 2592 in file "usb/usb_device.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  lastDTS         1    5[COMMON] unsigned char 
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10335 ;; Tracked objects:
 10336 ;;		On entry : 1F/0
 10337 ;;		On exit  : 1F/3
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;Total ram usage:        3 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    1
 10347 ;; This function calls:
 10348 ;;		_USBCtrlTrfTxService
 10349 ;; This function is called by:
 10350 ;;		_USBCtrlEPService
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           
 10355                           ;psect for function _USBCtrlTrfInHandler
 10356  0E6B                     _USBCtrlTrfInHandler:	
 10357  0E6B                     i1l4285:	
 10358                           ;incstack = 0
 10359                           ; Regs used in _USBCtrlTrfInHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10360                           
 10361                           
 10362                           ;usb_device.c: 2594: uint8_t lastDTS;;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 10363  0E6B  0023               	movlb	3	; select bank3
 10364  0E6C  0827               	movf	_pBDTEntryIn^(0+384),w
 10365  0E6D  0086               	movwf	6
 10366  0E6E  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10367  0E6F  0087               	movwf	7
 10368  0E70  3000               	movlw	0
 10369  0E71  1B01               	btfsc	1,6
 10370  0E72  3001               	movlw	1
 10371  0E73  00F5               	movwf	USBCtrlTrfInHandler@lastDTS
 10372                           
 10373                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 10374  0E74  3004               	movlw	4
 10375  0E75  0627               	xorwf	_pBDTEntryIn^(0+384),w
 10376  0E76  00A7               	movwf	_pBDTEntryIn^(0+384)
 10377                           
 10378                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
 10379  0E77  3008               	movlw	8
 10380  0E78  0020               	movlb	0	; select bank0
 10381  0E79  066F               	xorwf	_USBDeviceState,w	;volatile
 10382  0E7A  1D03               	btfss	3,2
 10383  0E7B  2E88               	goto	i1l4299
 10384                           
 10385                           ;usb_device.c: 2605: {;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
 10386  0E7C  0852               	movf	82,w	;volatile
 10387  0E7D  397F               	andlw	127
 10388  0E7E  003D               	movlb	29	; select bank29
 10389  0E7F  0096               	movwf	22	;volatile
 10390                           
 10391                           ;usb_device.c: 2607: if(UADDR != 0u)
 10392  0E80  0816               	movf	22,w
 10393  0E81  1903               	btfsc	3,2
 10394  0E82  2E85               	goto	i1l4297
 10395                           
 10396                           ;usb_device.c: 2608: {;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
 10397  0E83  3010               	movlw	16
 10398  0E84  2E86               	goto	L16
 10399  0E85                     i1l4297:	
 10400                           ;usb_device.c: 2610: }
 10401                           
 10402                           
 10403                           ;usb_device.c: 2611: else;usb_device.c: 2612: {;usb_device.c: 2613: USBDeviceState=DEFAU
      +                          LT_STATE;
 10404  0E85  3004               	movlw	4
 10405  0E86                     L16:	
 10406  0E86  0020               	movlb	0	; select bank0
 10407  0E87  00EF               	movwf	_USBDeviceState	;volatile
 10408  0E88                     i1l4299:	
 10409                           
 10410                           ;usb_device.c: 2614: };usb_device.c: 2615: };usb_device.c: 2618: if(controlTransferState
      +                           == 1)
 10411  0E88  0023               	movlb	3	; select bank3
 10412  0E89  0B65               	decfsz	_controlTransferState^(0+384),w	;volatile
 10413  0E8A  2EC4               	goto	i1l439
 10414                           
 10415                           ;usb_device.c: 2619: {;usb_device.c: 2620: pBDTEntryIn[0]->ADR = (((uint16_t)(CtrlTrfDat
      +                          a)) & 0x7FFF);
 10416  0E8B  3058               	movlw	88
 10417  0E8C  00F3               	movwf	??_USBCtrlTrfInHandler
 10418  0E8D  01F4               	clrf	??_USBCtrlTrfInHandler+1
 10419  0E8E  0827               	movf	_pBDTEntryIn^(0+384),w
 10420  0E8F  0086               	movwf	6
 10421  0E90  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10422  0E91  0087               	movwf	7
 10423  0E92  3142               	addfsr 1,2
 10424  0E93  0873               	movf	??_USBCtrlTrfInHandler,w
 10425  0E94  3FC0               	movwi [0]fsr1
 10426  0E95  0874               	movf	??_USBCtrlTrfInHandler+1,w
 10427  0E96  3FC1               	movwi [1]fsr1
 10428                           
 10429                           ;usb_device.c: 2621: USBCtrlTrfTxService();
 10430  0E97  26CB  3188         	fcall	_USBCtrlTrfTxService
 10431                           
 10432                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
 10433  0E99  3002               	movlw	2
 10434  0E9A  0666               	xorwf	_shortPacketStatus^(0+384),w	;volatile
 10435  0E9B  1D03               	btfss	3,2
 10436  0E9C  2EA9               	goto	i1l4309
 10437                           
 10438                           ;usb_device.c: 2628: {;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
 10439  0E9D  0827               	movf	_pBDTEntryIn^(0+384),w
 10440  0E9E  0086               	movwf	6
 10441  0E9F  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10442  0EA0  0087               	movwf	7
 10443  0EA1  3004               	movlw	4
 10444  0EA2  0081               	movwf	1
 10445                           
 10446                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10447  0EA3  0827               	movf	_pBDTEntryIn^(0+384),w
 10448  0EA4  0086               	movwf	6
 10449  0EA5  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10450  0EA6  0087               	movwf	7
 10451  0EA7  1781               	bsf	1,7
 10452                           
 10453                           ;usb_device.c: 2633: }
 10454  0EA8  0008               	return
 10455  0EA9                     i1l4309:	
 10456                           
 10457                           ;usb_device.c: 2634: else;usb_device.c: 2635: {;usb_device.c: 2636: if(lastDTS == 0)
 10458  0EA9  0875               	movf	USBCtrlTrfInHandler@lastDTS,w
 10459  0EAA  1D03               	btfss	3,2
 10460  0EAB  2EB8               	goto	i1l4313
 10461                           
 10462                           ;usb_device.c: 2637: {;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 10463  0EAC  0827               	movf	_pBDTEntryIn^(0+384),w
 10464  0EAD  0086               	movwf	6
 10465  0EAE  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10466  0EAF  0087               	movwf	7
 10467  0EB0  3048               	movlw	72
 10468  0EB1  0081               	movwf	1
 10469                           
 10470                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10471  0EB2  0827               	movf	_pBDTEntryIn^(0+384),w
 10472  0EB3  0086               	movwf	6
 10473  0EB4  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10474  0EB5  0087               	movwf	7
 10475  0EB6  1781               	bsf	1,7
 10476                           
 10477                           ;usb_device.c: 2640: }
 10478  0EB7  0008               	return
 10479  0EB8                     i1l4313:	
 10480                           
 10481                           ;usb_device.c: 2641: else;usb_device.c: 2642: {;usb_device.c: 2643: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 10482  0EB8  0827               	movf	_pBDTEntryIn^(0+384),w
 10483  0EB9  0086               	movwf	6
 10484  0EBA  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10485  0EBB  0087               	movwf	7
 10486  0EBC  3008               	movlw	8
 10487  0EBD  0081               	movwf	1
 10488                           
 10489                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10490  0EBE  0827               	movf	_pBDTEntryIn^(0+384),w
 10491  0EBF  0086               	movwf	6
 10492  0EC0  0828               	movf	(_pBDTEntryIn+1)^(0+384),w
 10493  0EC1  0087               	movwf	7
 10494  0EC2  1781               	bsf	1,7
 10495  0EC3  0008               	return
 10496  0EC4                     i1l439:	
 10497                           
 10498                           ;usb_device.c: 2648: else;usb_device.c: 2649: {;usb_device.c: 2653: if(outPipes[0].info.
      +                          bits.busy == 1)
 10499  0EC4  1FA2               	btfss	(_outPipes^(0+384)+2),7	;volatile
 10500  0EC5  2EC9               	goto	i1l4317
 10501                           
 10502                           ;usb_device.c: 2656: {;usb_device.c: 2657: outPipes[0].pFunc();
 10503  0EC6  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 10504  0EC7  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 10505                           
 10506                           ;usb_device.c: 2658: };usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
 10507  0EC8  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 10508  0EC9                     i1l4317:	
 10509                           
 10510                           ;usb_device.c: 2660: };usb_device.c: 2662: controlTransferState = 0;
 10511  0EC9  01E5               	clrf	_controlTransferState^(0+384)	;volatile
 10512  0ECA  0008               	return
 10513  0ECB                     __end_of_USBCtrlTrfInHandler:	
 10514  0ECB                     __ptext54:	
 10515 ;; *************** function _USBCtrlTrfTxService *****************
 10516 ;; Defined at:
 10517 ;;		line 1771 in file "usb/usb_device.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;  byteToSend      1    2[COMMON] unsigned char 
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10526 ;; Tracked objects:
 10527 ;;		On entry : 1C/0
 10528 ;;		On exit  : 1F/3
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;Total ram usage:        3 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; This function calls:
 10538 ;;		Nothing
 10539 ;; This function is called by:
 10540 ;;		_USBCtrlEPAllowDataStage
 10541 ;;		_USBCtrlTrfInHandler
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           
 10546                           ;psect for function _USBCtrlTrfTxService
 10547  0ECB                     _USBCtrlTrfTxService:	
 10548                           
 10549                           ;usb_device.c: 1773: uint8_t byteToSend;;usb_device.c: 1777: byteToSend = 8;
 10550                           
 10551                           ;incstack = 0
 10552                           ; Regs used in _USBCtrlTrfTxService: [wreg-fsr1h+status,2+status,0+pclath]
 10553  0ECB  3008               	movlw	8
 10554  0ECC  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10555                           
 10556                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 10557  0ECD  3000               	movlw	0
 10558  0ECE  0023               	movlb	3	; select bank3
 10559  0ECF  0237               	subwf	((_inPipes+1)^(0+384)+3),w	;volatile
 10560  0ED0  3008               	movlw	8
 10561  0ED1  1903               	skipnz
 10562  0ED2  0236               	subwf	(_inPipes^(0+384)+3),w	;volatile
 10563  0ED3  1803               	skipnc
 10564  0ED4  2EE0               	goto	i1l339
 10565                           
 10566                           ;usb_device.c: 1779: {;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 10567  0ED5  0836               	movf	(_inPipes^(0+384)+3),w	;volatile
 10568  0ED6  00F2               	movwf	USBCtrlTrfTxService@byteToSend
 10569                           
 10570                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 10571  0ED7  0866               	movf	_shortPacketStatus^(0+384),w	;volatile
 10572  0ED8  1D03               	btfss	3,2
 10573  0ED9  2EDC               	goto	i1l3767
 10574                           
 10575                           ;usb_device.c: 1788: {;usb_device.c: 1789: shortPacketStatus = 1;
 10576  0EDA  3001               	movlw	1
 10577  0EDB  2EDF               	goto	L17
 10578  0EDC                     i1l3767:	
 10579                           ;usb_device.c: 1790: }
 10580                           
 10581                           
 10582                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 10583  0EDC  0B66               	decfsz	_shortPacketStatus^(0+384),w	;volatile
 10584  0EDD  2EE0               	goto	i1l339
 10585                           
 10586                           ;usb_device.c: 1792: {;usb_device.c: 1793: shortPacketStatus = 2;
 10587  0EDE  3002               	movlw	2
 10588  0EDF                     L17:	
 10589  0EDF  00E6               	movwf	_shortPacketStatus^(0+384)	;volatile
 10590  0EE0                     i1l339:	
 10591                           
 10592                           ;usb_device.c: 1794: };usb_device.c: 1795: };usb_device.c: 1799: inPipes[0].wCount.Val -
      +                          = byteToSend;
 10593  0EE0  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10594  0EE1  02B6               	subwf	(_inPipes^(0+384)+3),f	;volatile
 10595  0EE2  1C03               	skipc
 10596  0EE3  03B7               	decf	((_inPipes+1)^(0+384)+3),f	;volatile
 10597                           
 10598                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 10599  0EE4  0827               	movf	_pBDTEntryIn^(0+384),w
 10600  0EE5  3E01               	addlw	1
 10601  0EE6  00F0               	movwf	??_USBCtrlTrfTxService
 10602  0EE7  3000               	movlw	0
 10603  0EE8  3D28               	addwfc	(_pBDTEntryIn+1)^(0+384),w
 10604  0EE9  00F1               	movwf	??_USBCtrlTrfTxService+1
 10605  0EEA  0870               	movf	??_USBCtrlTrfTxService,w
 10606  0EEB  0086               	movwf	6
 10607  0EEC  0871               	movf	??_USBCtrlTrfTxService+1,w
 10608  0EED  0087               	movwf	7
 10609  0EEE  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10610  0EEF  0081               	movwf	1
 10611                           
 10612                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 10613  0EF0  3058               	movlw	88
 10614  0EF1  00E4               	movwf	_pDst^(0+384)
 10615                           
 10616                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 10617  0EF2  1C35               	btfss	(_inPipes^(0+384)+2),0	;volatile
 10618  0EF3  2F03               	goto	i1l3787
 10619  0EF4  2F15               	goto	i1l3797
 10620  0EF5                     i1l3779:	
 10621                           
 10622                           ;usb_device.c: 1812: {;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 10623  0EF5  0864               	movf	_pDst^(0+384),w
 10624  0EF6  0086               	movwf	6
 10625  0EF7  0187               	clrf	7
 10626  0EF8  0833               	movf	_inPipes^(0+384),w	;volatile
 10627  0EF9  0084               	movwf	4
 10628  0EFA  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
 10629  0EFB  0085               	movwf	5
 10630  0EFC  0800               	movf	0,w	;code access
 10631  0EFD  0081               	movwf	1
 10632  0EFE  0AB3               	incf	_inPipes^(0+384),f	;volatile
 10633  0EFF  1903               	skipnz
 10634  0F00  0AB4               	incf	(_inPipes+1)^(0+384),f	;volatile
 10635  0F01  0AE4               	incf	_pDst^(0+384),f
 10636                           
 10637                           ;usb_device.c: 1814: byteToSend--;
 10638  0F02  03F2               	decf	USBCtrlTrfTxService@byteToSend,f
 10639  0F03                     i1l3787:	
 10640  0F03  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10641  0F04  1903               	btfsc	3,2
 10642  0F05  0008               	return
 10643  0F06  2EF5               	goto	i1l3779
 10644  0F07                     i1l3789:	
 10645                           
 10646                           ;usb_device.c: 1820: {;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 10647  0F07  0864               	movf	_pDst^(0+384),w
 10648  0F08  0086               	movwf	6
 10649  0F09  0187               	clrf	7
 10650  0F0A  0833               	movf	_inPipes^(0+384),w	;volatile
 10651  0F0B  0084               	movwf	4
 10652  0F0C  0834               	movf	(_inPipes+1)^(0+384),w	;volatile
 10653  0F0D  0085               	movwf	5
 10654  0F0E  0800               	movf	0,w	;code access
 10655  0F0F  0081               	movwf	1
 10656  0F10  0AB3               	incf	_inPipes^(0+384),f	;volatile
 10657  0F11  1903               	skipnz
 10658  0F12  0AB4               	incf	(_inPipes+1)^(0+384),f	;volatile
 10659  0F13  0AE4               	incf	_pDst^(0+384),f
 10660                           
 10661                           ;usb_device.c: 1822: byteToSend--;
 10662  0F14  03F2               	decf	USBCtrlTrfTxService@byteToSend,f
 10663  0F15                     i1l3797:	
 10664  0F15  0872               	movf	USBCtrlTrfTxService@byteToSend,w
 10665  0F16  1903               	btfsc	3,2
 10666  0F17  0008               	return
 10667  0F18  2F07               	goto	i1l3789
 10668  0F19                     __end_of_USBCtrlTrfTxService:	
 10669  007E                     btemp	set	126	;btemp
 10670  007E                     int$flags	set	126
 10671  007E                     wtemp0	set	126
 10672  0F19                     __ptext20:	
 10673 ;; *************** function i1_USBDeviceInit *****************
 10674 ;; Defined at:
 10675 ;;		line 277 in file "usb/usb_device.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;		None
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  USBDeviceIni    2    0[COMMON] PTR unsigned char 
 10680 ;;		 -> UEP1(1), 
 10681 ;;  USBDeviceIni    1    3[COMMON] unsigned char 
 10682 ;;  USBDeviceIni    1    2[COMMON] unsigned char 
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10687 ;; Tracked objects:
 10688 ;;		On entry : 1F/1D
 10689 ;;		On exit  : 1F/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10693 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;Total ram usage:        4 bytes
 10697 ;; Hardware stack levels used:    1
 10698 ;; This function calls:
 10699 ;;		Nothing
 10700 ;; This function is called by:
 10701 ;;		_USBDeviceTasks
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           
 10706                           ;psect for function i1_USBDeviceInit
 10707  0F19                     i1_USBDeviceInit:	
 10708                           
 10709                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 10710                           
 10711                           ;incstack = 0
 10712                           ; Regs used in i1_USBDeviceInit: [wreg+fsr1l+fsr1h+status,2+status,0]
 10713  0F19  0021               	movlb	1	; select bank1
 10714  0F1A  1112               	bcf	18,2	;volatile
 10715                           
 10716                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 10717  0F1B  003D               	movlb	29	; select bank29
 10718  0F1C  0193               	clrf	19	;volatile
 10719                           
 10720                           ;usb_device.c: 291: {UIR = 0;};
 10721  0F1D  0190               	clrf	16	;volatile
 10722                           
 10723                           ;usb_device.c: 294: UEP0 = 0;
 10724  0F1E  0198               	clrf	24	;volatile
 10725                           
 10726                           ;usb_device.c: 296: { uint8_t i; uint8_t* p = (uint8_t*)&UEP1; for(i=0;i<2;i++) *p++ = 0
      +                          ; };
 10727  0F1F  300E               	movlw	14
 10728  0F20  00F1               	movwf	i1USBDeviceInit@p+1
 10729  0F21  3099               	movlw	153
 10730  0F22  00F0               	movwf	i1USBDeviceInit@p
 10731  0F23  01F2               	clrf	i1USBDeviceInit@i_868
 10732  0F24                     i1l4681:	
 10733  0F24  0870               	movf	i1USBDeviceInit@p,w
 10734  0F25  0086               	movwf	6
 10735  0F26  0871               	movf	i1USBDeviceInit@p+1,w
 10736  0F27  0087               	movwf	7
 10737  0F28  0181               	clrf	1
 10738  0F29  0AF0               	incf	i1USBDeviceInit@p,f
 10739  0F2A  1903               	skipnz
 10740  0F2B  0AF1               	incf	i1USBDeviceInit@p+1,f
 10741  0F2C  3002               	movlw	2
 10742  0F2D  0AF2               	incf	i1USBDeviceInit@i_868,f
 10743  0F2E  0272               	subwf	i1USBDeviceInit@i_868,w
 10744  0F2F  1C03               	skipc
 10745  0F30  2F24               	goto	i1l4681
 10746                           
 10747                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10748  0F31  3016               	movlw	22
 10749  0F32  0091               	movwf	17	;volatile
 10750  0F33  309F               	movlw	159
 10751  0F34  0097               	movwf	23	;volatile
 10752  0F35  307B               	movlw	123
 10753  0F36  0092               	movwf	18	;volatile
 10754                           
 10755                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 10756  0F37  01F3               	clrf	i1USBDeviceInit@i
 10757  0F38                     i1l4697:	
 10758                           
 10759                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 10760  0F38  0873               	movf	i1USBDeviceInit@i,w
 10761  0F39  0709               	addwf	9,w
 10762  0F3A  0709               	addwf	9,w
 10763  0F3B  3E20               	addlw	32
 10764  0F3C  0086               	movwf	6
 10765  0F3D  3000               	movlw	0
 10766  0F3E  0187               	clrf	7
 10767  0F3F  3FC0               	movwi [0]fsr1
 10768  0F40  3FC1               	movwi [1]fsr1
 10769  0F41  3FC2               	movwi [2]fsr1
 10770  0F42  3FC3               	movwi [3]fsr1
 10771  0F43  300C               	movlw	12
 10772  0F44  0AF3               	incf	i1USBDeviceInit@i,f
 10773  0F45  0273               	subwf	i1USBDeviceInit@i,w
 10774  0F46  1C03               	skipc
 10775  0F47  2F38               	goto	i1l4697
 10776                           
 10777                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 10778  0F48  170E               	bsf	14,6	;volatile
 10779                           
 10780                           ;usb_device.c: 316: UADDR = 0x00;
 10781  0F49  0196               	clrf	22	;volatile
 10782                           
 10783                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 10784  0F4A  120E               	bcf	14,4	;volatile
 10785                           
 10786                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 10787  0F4B  130E               	bcf	14,6	;volatile
 10788  0F4C                     i1l4709:	
 10789                           
 10790                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 10791  0F4C  1190               	bcf	16,3	;volatile
 10792                           
 10793                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 10794  0F4D  0023               	movlb	3	; select bank3
 10795  0F4E  01B5               	clrf	(_inPipes^(0+384)+2)	;volatile
 10796                           
 10797                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 10798  0F4F  01A2               	clrf	(_outPipes^(0+384)+2)	;volatile
 10799                           
 10800                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 10801  0F50  01A3               	clrf	(_outPipes^(0+384)+3)	;volatile
 10802  0F51  01A4               	clrf	((_outPipes+1)^(0+384)+3)	;volatile
 10803                           
 10804                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 10805  0F52  003D               	movlb	29	; select bank29
 10806  0F53  1990               	btfsc	16,3	;volatile
 10807  0F54  2F4C               	goto	i1l4709
 10808                           
 10809                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 10810  0F55  3001               	movlw	1
 10811  0F56  0023               	movlb	3	; select bank3
 10812  0F57  00DD               	movwf	_USBStatusStageEnabledFlag1^(0+384)	;volatile
 10813                           
 10814                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 10815  0F58  00DC               	movwf	_USBStatusStageEnabledFlag2^(0+384)	;volatile
 10816                           
 10817                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 10818  0F59  01DB               	clrf	_USBDeferINDataStagePackets^(0+384)	;volatile
 10819                           
 10820                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 10821  0F5A  01DA               	clrf	_USBDeferOUTDataStagePackets^(0+384)	;volatile
 10822                           
 10823                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 10824  0F5B  01E2               	clrf	_USBBusIsSuspended^(0+384)	;volatile
 10825                           
 10826                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 10827  0F5C  01F3               	clrf	i1USBDeviceInit@i
 10828  0F5D                     i1l4725:	
 10829                           
 10830                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 10831  0F5D  3573               	lslf	i1USBDeviceInit@i,w
 10832  0F5E  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 10833  0F5F  0086               	movwf	6
 10834  0F60  3001               	movlw	1	; select bank3/4
 10835  0F61  0087               	movwf	7
 10836  0F62  3000               	movlw	0
 10837  0F63  3FC0               	movwi [0]fsr1
 10838  0F64  3FC1               	movwi [1]fsr1
 10839                           
 10840                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 10841  0F65  3573               	lslf	i1USBDeviceInit@i,w
 10842  0F66  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 10843  0F67  0086               	movwf	6
 10844  0F68  3000               	movlw	0
 10845  0F69  3FC0               	movwi [0]fsr1
 10846  0F6A  3FC1               	movwi [1]fsr1
 10847                           
 10848                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 10849  0F6B  0873               	movf	i1USBDeviceInit@i,w
 10850  0F6C  3EBE               	addlw	(low (_ep_data_in| (0+256)))& (0+255)
 10851  0F6D  0086               	movwf	6
 10852  0F6E  0181               	clrf	1
 10853                           
 10854                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 10855  0F6F  0873               	movf	i1USBDeviceInit@i,w
 10856  0F70  3EBB               	addlw	(low (_ep_data_out| (0+256)))& (0+255)
 10857  0F71  0086               	movwf	6
 10858  0F72  3003               	movlw	3
 10859  0F73  0181               	clrf	1
 10860  0F74  0AF3               	incf	i1USBDeviceInit@i,f
 10861  0F75  0273               	subwf	i1USBDeviceInit@i,w
 10862  0F76  1C03               	skipc
 10863  0F77  2F5D               	goto	i1l4725
 10864                           
 10865                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10866  0F78  3028               	movlw	40
 10867  0F79  0023               	movlb	3	; select bank3
 10868  0F7A  00A7               	movwf	_pBDTEntryIn^(0+384)
 10869  0F7B  3016               	movlw	22
 10870  0F7C  01A8               	clrf	(_pBDTEntryIn+1)^(0+384)
 10871                           
 10872                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 10873  0F7D  003D               	movlb	29	; select bank29
 10874  0F7E  0098               	movwf	24	;volatile
 10875                           
 10876                           ;usb_device.c: 358: BDT[0].ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 10877  0F7F  0020               	movlb	0	; select bank0
 10878  0F80  01A3               	clrf	35	;volatile
 10879  0F81  3050               	movlw	80
 10880  0F82  00A2               	movwf	34	;volatile
 10881                           
 10882                           ;usb_device.c: 359: BDT[0].CNT = 8;
 10883  0F83  3008               	movlw	8
 10884  0F84  00A1               	movwf	33	;volatile
 10885                           
 10886                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 10887  0F85  3004               	movlw	4
 10888  0F86  00A0               	movwf	32	;volatile
 10889                           
 10890                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 10891  0F87  17A0               	bsf	32,7	;volatile
 10892                           
 10893                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 10894  0F88  0023               	movlb	3	; select bank3
 10895  0F89  01EB               	clrf	_USBActiveConfiguration^(0+384)	;volatile
 10896                           
 10897                           ;usb_device.c: 366: USB1msTickCount = 0;
 10898  0F8A  0024               	movlb	4	; select bank4
 10899  0F8B  01A0               	clrf	_USB1msTickCount^(0+512)	;volatile
 10900  0F8C  01A1               	clrf	(_USB1msTickCount+1)^(0+512)	;volatile
 10901  0F8D  01A2               	clrf	(_USB1msTickCount+2)^(0+512)	;volatile
 10902  0F8E  01A3               	clrf	(_USB1msTickCount+3)^(0+512)	;volatile
 10903                           
 10904                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 10905  0F8F  0023               	movlb	3	; select bank3
 10906  0F90  01D9               	clrf	_USBTicksSinceSuspendEnd^(0+384)	;volatile
 10907                           
 10908                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 10909  0F91  0020               	movlb	0	; select bank0
 10910  0F92  01EF               	clrf	_USBDeviceState	;volatile
 10911  0F93  0008               	return
 10912  0F94                     __end_ofi1_USBDeviceInit:	
 10913  0F94                     __ptext49:	
 10914 ;; *************** function _APP_DeviceCDCBasicDemoInitialize *****************
 10915 ;; Defined at:
 10916 ;;		line 79 in file "demo_src/app_device_cdc_basic.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;		None
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2
 10925 ;; Tracked objects:
 10926 ;;		On entry : 1F/3
 10927 ;;		On exit  : 1F/4
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;Total ram usage:        0 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           
 10944                           ;psect for function _APP_DeviceCDCBasicDemoInitialize
 10945  0F94                     _APP_DeviceCDCBasicDemoInitialize:	
 10946  0F94                     i1l3697:	
 10947                           ;incstack = 0
 10948                           ; Regs used in _APP_DeviceCDCBasicDemoInitialize: [wreg+status,2]
 10949                           
 10950                           
 10951                           ;app_device_cdc_basic.c: 81: line_coding.bCharFormat = 0;
 10952  0F94  0024               	movlb	4	; select bank4
 10953  0F95  3008               	movlw	8
 10954  0F96  01B0               	clrf	(_line_coding^(0+512)+4)
 10955                           
 10956                           ;app_device_cdc_basic.c: 82: line_coding.bDataBits = 8;
 10957  0F97  00B2               	movwf	(_line_coding^(0+512)+6)
 10958  0F98  3025               	movlw	37
 10959                           
 10960                           ;app_device_cdc_basic.c: 83: line_coding.bParityType = 0;
 10961  0F99  01B1               	clrf	(_line_coding^(0+512)+5)
 10962                           
 10963                           ;app_device_cdc_basic.c: 84: line_coding.dwDTERate = 9600;
 10964  0F9A  01AF               	clrf	(_line_coding+3)^(0+512)
 10965  0F9B  01AE               	clrf	(_line_coding+2)^(0+512)
 10966  0F9C  00AD               	movwf	(_line_coding+1)^(0+512)
 10967  0F9D  3080               	movlw	128
 10968  0F9E  00AC               	movwf	_line_coding^(0+512)
 10969  0F9F  0008               	return
 10970  0FA0                     __end_of_APP_DeviceCDCBasicDemoInitialize:	
 10971  0FA0                     __ptext39:	
 10972 ;; *************** function _USBCheckCDCRequest *****************
 10973 ;; Defined at:
 10974 ;;		line 147 in file "usb/usb_device_cdc.c"
 10975 ;; Parameters:    Size  Location     Type
 10976 ;;		None
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;		None
 10979 ;; Return value:  Size  Location     Type
 10980 ;;                  1    wreg      void 
 10981 ;; Registers used:
 10982 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10983 ;; Tracked objects:
 10984 ;;		On entry : 1F/0
 10985 ;;		On exit  : 1C/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;Total ram usage:        0 bytes
 10993 ;; Hardware stack levels used:    1
 10994 ;; This function calls:
 10995 ;;		Nothing
 10996 ;; This function is called by:
 10997 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           
 11002                           ;psect for function _USBCheckCDCRequest
 11003  0FA0                     _USBCheckCDCRequest:	
 11004  0FA0                     i1l3589:	
 11005                           ;incstack = 0
 11006                           ; Regs used in _USBCheckCDCRequest: [wreg-fsr0h+status,2+status,0]
 11007                           
 11008                           
 11009                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
 11010  0FA0  0850               	movf	80,w	;volatile
 11011  0FA1  391F               	andlw	31
 11012  0FA2  3A01               	xorlw	1
 11013  0FA3  1D03               	btfss	3,2
 11014  0FA4  0008               	return
 11015                           
 11016                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
 11017  0FA5  0E50               	swapf	80,w	;volatile
 11018  0FA6  0C89               	rrf	9,f
 11019  0FA7  3903               	andlw	3
 11020  0FA8  3A01               	xorlw	1
 11021  0FA9  1D03               	btfss	3,2
 11022  0FAA  0008               	return
 11023                           
 11024                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&;usb_device_cdc.c: 164: (SetupPkt.
      +                          bIntfID != 0x01)) return;
 11025  0FAB  0854               	movf	84,w	;volatile
 11026  0FAC  1903               	btfsc	3,2
 11027  0FAD  2FE0               	goto	i1l3633
 11028  0FAE  0354               	decf	84,w	;volatile
 11029  0FAF  1D03               	btfss	3,2
 11030  0FB0  0008               	return
 11031  0FB1  2FE0               	goto	i1l3633
 11032  0FB2                     i1l3603:	
 11033                           
 11034                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11035  0FB2  3024               	movlw	low _dummy_encapsulated_cmd_response
 11036  0FB3  0023               	movlb	3	; select bank3
 11037  0FB4  00B3               	movwf	_inPipes^(0+384)	;volatile
 11038  0FB5  3002               	movlw	high _dummy_encapsulated_cmd_response
 11039  0FB6  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
 11040                           
 11041                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
 11042  0FB7  3008               	movlw	8
 11043  0FB8  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
 11044  0FB9  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
 11045                           
 11046                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 11047  0FBA  1435               	bsf	(_inPipes^(0+384)+2),0	;volatile
 11048                           
 11049                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
 11050  0FBB  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
 11051                           
 11052                           ;usb_device_cdc.c: 175: break;
 11053  0FBC  0008               	return
 11054  0FBD                     i1l3611:	
 11055                           
 11056                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 11057  0FBD  3024               	movlw	low _dummy_encapsulated_cmd_response
 11058  0FBE  0023               	movlb	3	; select bank3
 11059  0FBF  00B3               	movwf	_inPipes^(0+384)	;volatile
 11060  0FC0  3002               	movlw	high _dummy_encapsulated_cmd_response
 11061  0FC1  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
 11062                           
 11063                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
 11064  0FC2  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
 11065                           
 11066                           ;usb_device_cdc.c: 180: break;
 11067  0FC3  0008               	return
 11068  0FC4                     i1l3615:	
 11069                           
 11070                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
 11071  0FC4  0857               	movf	87,w	;volatile
 11072  0FC5  0023               	movlb	3	; select bank3
 11073  0FC6  00A4               	movwf	((_outPipes+1)^(0+384)+3)	;volatile
 11074  0FC7  0020               	movlb	0	; select bank0
 11075  0FC8  0856               	movf	86,w	;volatile
 11076  0FC9  0023               	movlb	3	; select bank3
 11077  0FCA  00A3               	movwf	(_outPipes^(0+384)+3)	;volatile
 11078                           
 11079                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 11080  0FCB  302C               	movlw	(low (_line_coding| (0+512)))& (0+255)
 11081  0FCC  00A0               	movwf	_outPipes^(0+384)	;volatile
 11082                           
 11083                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
 11084  0FCD  01A5               	clrf	(low ((_outPipes| (0+256)+5)))^(0+128)	;volatile
 11085  0FCE  01A6               	clrf	((low ((_outPipes| (0+256)+5))+1))^(0+128)	;volatile
 11086                           
 11087                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
 11088  0FCF  17A2               	bsf	(_outPipes^(0+384)+2),7	;volatile
 11089                           
 11090                           ;usb_device_cdc.c: 189: break;
 11091  0FD0  0008               	return
 11092  0FD1                     i1l3621:	
 11093                           
 11094                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 11095  0FD1  302C               	movlw	low _line_coding
 11096  0FD2  0023               	movlb	3	; select bank3
 11097  0FD3  00B3               	movwf	_inPipes^(0+384)	;volatile
 11098  0FD4  3002               	movlw	high _line_coding
 11099  0FD5  00B4               	movwf	(_inPipes+1)^(0+384)	;volatile
 11100  0FD6  3007               	movlw	7
 11101  0FD7  00B6               	movwf	(_inPipes^(0+384)+3)	;volatile
 11102  0FD8  01B7               	clrf	((_inPipes+1)^(0+384)+3)	;volatile
 11103  0FD9  30C1               	movlw	193
 11104  0FDA  00B5               	movwf	(_inPipes^(0+384)+2)	;volatile
 11105                           
 11106                           ;usb_device_cdc.c: 196: break;
 11107  0FDB  0008               	return
 11108  0FDC                     i1l3627:	
 11109                           
 11110                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 11111  0FDC  0852               	movf	82,w	;volatile
 11112                           
 11113                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
 11114  0FDD  0023               	movlb	3	; select bank3
 11115  0FDE  17B5               	bsf	(_inPipes^(0+384)+2),7	;volatile
 11116                           
 11117                           ;usb_device_cdc.c: 232: break;
 11118  0FDF  0008               	return
 11119  0FE0                     i1l3633:	
 11120  0FE0  0851               	movf	81,w	;volatile
 11121                           
 11122                           ; Switch size 1, requested type "speed"
 11123                           ; Number of cases is 5, Range of values is 0 to 34
 11124                           ; switch strategies available:
 11125                           ; Name         Instructions Cycles
 11126                           ; direct_byte           76     6 (fixed)
 11127                           ; simple_byte           16     9 (average)
 11128                           ; jumptable            260     6 (fixed)
 11129                           ;	Chosen strategy is direct_byte
 11130  0FE1  0084               	movwf	4
 11131  0FE2  3023               	movlw	35
 11132  0FE3  0204               	subwf	4,w
 11133  0FE4  1803               	skipnc
 11134  0FE5  0008               	return
 11135  0FE6  3191               	movlp	high i1S5911
 11136  0FE7  3504               	lslf	4,w
 11137  0FE8  3E00               	addlw	low i1S5911
 11138  0FE9  0082               	movwf	2
 11139  0FEA                     i1l547:	
 11140  0FEA  0008               	return
 11141  0FEB                     __end_of_USBCheckCDCRequest:	
 11142  0FEB                     __ptext38:	
 11143 ;; *************** function i1_BUTTON_Enable *****************
 11144 ;; Defined at:
 11145 ;;		line 115 in file "bsp/buttons.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;  button          1    wreg     enum E2159
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;  button          1    0[COMMON] enum E2159
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/7
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11163 ;;Total ram usage:        1 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		i1_SYSTEM_Initialize
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172                           
 11173                           ;psect for function i1_BUTTON_Enable
 11174  0FEB                     i1_BUTTON_Enable:	
 11175                           
 11176                           ;incstack = 0
 11177                           ; Regs used in i1_BUTTON_Enable: [wreg-fsr0h+status,2+status,0]
 11178                           ;i1BUTTON_Enable@button stored from wreg
 11179  0FEB  00F0               	movwf	i1BUTTON_Enable@button
 11180                           
 11181                           ;buttons.c: 117: switch(button)
 11182  0FEC  2FF7               	goto	i1l3527
 11183  0FED                     i1l100:	
 11184                           ;buttons.c: 118: {;buttons.c: 119: case BUTTON_S1:
 11185                           
 11186                           
 11187                           ;buttons.c: 120: TRISBbits.TRISB5 = 1;
 11188  0FED  0021               	movlb	1	; select bank1
 11189  0FEE  168D               	bsf	13,5	;volatile
 11190                           
 11191                           ;buttons.c: 121: ANSELBbits.ANSB5 = 0;
 11192  0FEF  0023               	movlb	3	; select bank3
 11193  0FF0  128D               	bcf	13,5	;volatile
 11194                           
 11195                           ;buttons.c: 122: WPUBbits.WPUB5 = 1;
 11196  0FF1  0024               	movlb	4	; select bank4
 11197  0FF2  168D               	bsf	13,5	;volatile
 11198                           
 11199                           ;buttons.c: 123: state1 = 0;
 11200  0FF3  0023               	movlb	3	; select bank3
 11201  0FF4  01CF               	clrf	_state1^(0+384)
 11202  0FF5  01D0               	clrf	(_state1+1)^(0+384)
 11203                           
 11204                           ;buttons.c: 124: break;
 11205  0FF6  0008               	return
 11206  0FF7                     i1l3527:	
 11207  0FF7  0870               	movf	i1BUTTON_Enable@button,w
 11208                           
 11209                           ; Switch size 1, requested type "speed"
 11210                           ; Number of cases is 2, Range of values is 0 to 1
 11211                           ; switch strategies available:
 11212                           ; Name         Instructions Cycles
 11213                           ; simple_byte            7     4 (average)
 11214                           ; direct_byte           10     6 (fixed)
 11215                           ; jumptable            260     6 (fixed)
 11216                           ;	Chosen strategy is simple_byte
 11217  0FF8  3A00               	xorlw	0	; case 0
 11218  0FF9  1903               	skipnz
 11219  0FFA  2FFF               	goto	i1l103
 11220  0FFB  3A01               	xorlw	1	; case 1
 11221  0FFC  1903               	skipnz
 11222  0FFD  2FED               	goto	i1l100
 11223  0FFE  2FFF               	goto	i1l103
 11224  0FFF                     i1l103:	
 11225  0FFF  0008               	return
 11226  1000                     __end_ofi1_BUTTON_Enable:	
 11227                           
 11228                           	psect	swtext3
 11229  06D5                     __pswtext3:	
 11230  06D5                     i1S5901:	
 11231  06D5  3188  2852         	ljmp	i1l5457
 11232  06D7  3188  2853         	ljmp	i1l5459
 11233  06D9  3188  283F         	ljmp	i1l451
 11234  06DB  3188  2853         	ljmp	i1l5459
 11235  06DD  3188  283F         	ljmp	i1l451
 11236  06DF  3188  2840         	ljmp	i1l453
 11237  06E1  3188  2846         	ljmp	i1l5445
 11238  06E3  3188  2869         	ljmp	i1l5471
 11239  06E5  3188  2848         	ljmp	i1l5449
 11240  06E7  3188  2847         	ljmp	i1l5447
 11241  06E9  3188  2854         	ljmp	i1l5461
 11242  06EB  3188  285E         	ljmp	i1l462
 11243  06ED  3188  283F         	ljmp	i1l451
 11244                           
 11245                           	psect	swtext4
 11246  0700                     __pswtext4:	
 11247  0700                     i1S5907:	
 11248  0700  318C  2C74         	ljmp	i1l3731
 11249  0702  318C  2C8B         	ljmp	i1l662
 11250  0704  318C  2C78         	ljmp	i1l3735
 11251  0706  318C  2C8B         	ljmp	i1l662
 11252  0708  318C  2C8B         	ljmp	i1l662
 11253  070A  318C  2C8B         	ljmp	i1l662
 11254  070C  318C  2C8B         	ljmp	i1l662
 11255  070E  318C  2C8B         	ljmp	i1l662
 11256  0710  318C  2C8B         	ljmp	i1l662
 11257  0712  318C  2C8B         	ljmp	i1l662
 11258  0714  318C  2C8B         	ljmp	i1l662
 11259  0716  318C  2C8B         	ljmp	i1l662
 11260  0718  318C  2C8B         	ljmp	i1l662
 11261  071A  318C  2C8B         	ljmp	i1l662
 11262  071C  318C  2C8B         	ljmp	i1l662
 11263  071E  318C  2C8B         	ljmp	i1l662
 11264  0720  318C  2C8B         	ljmp	i1l662
 11265  0722  318C  2C8B         	ljmp	i1l662
 11266  0724  318C  2C8B         	ljmp	i1l662
 11267  0726  318C  2C8B         	ljmp	i1l662
 11268  0728  318C  2C8B         	ljmp	i1l662
 11269  072A  318C  2C8B         	ljmp	i1l662
 11270  072C  318C  2C8B         	ljmp	i1l662
 11271  072E  318C  2C8B         	ljmp	i1l662
 11272  0730  318C  2C8B         	ljmp	i1l662
 11273  0732  318C  2C8B         	ljmp	i1l662
 11274  0734  318C  2C8B         	ljmp	i1l662
 11275  0736  318C  2C8B         	ljmp	i1l662
 11276  0738  318C  2C8B         	ljmp	i1l662
 11277  073A  318C  2C8B         	ljmp	i1l662
 11278  073C  318C  2C8B         	ljmp	i1l662
 11279  073E  318C  2C8B         	ljmp	i1l662
 11280  0740  318C  2C8B         	ljmp	i1l662
 11281  0742  318C  2C8B         	ljmp	i1l662
 11282  0744  318C  2C8B         	ljmp	i1l662
 11283  0746  318C  2C8B         	ljmp	i1l662
 11284  0748  318C  2C8B         	ljmp	i1l662
 11285  074A  318C  2C8B         	ljmp	i1l662
 11286  074C  318C  2C8B         	ljmp	i1l662
 11287  074E  318C  2C8B         	ljmp	i1l662
 11288  0750  318C  2C8B         	ljmp	i1l662
 11289  0752  318C  2C8B         	ljmp	i1l662
 11290  0754  318C  2C8B         	ljmp	i1l662
 11291  0756  318C  2C8B         	ljmp	i1l662
 11292  0758  318C  2C8B         	ljmp	i1l662
 11293  075A  318C  2C8B         	ljmp	i1l662
 11294  075C  318C  2C8B         	ljmp	i1l662
 11295  075E  318C  2C8B         	ljmp	i1l662
 11296  0760  318C  2C8B         	ljmp	i1l662
 11297  0762  318C  2C8B         	ljmp	i1l662
 11298  0764  318C  2C8B         	ljmp	i1l662
 11299  0766  318C  2C8B         	ljmp	i1l662
 11300  0768  318C  2C8B         	ljmp	i1l662
 11301  076A  318C  2C8B         	ljmp	i1l662
 11302  076C  318C  2C8B         	ljmp	i1l662
 11303  076E  318C  2C8B         	ljmp	i1l662
 11304  0770  318C  2C8B         	ljmp	i1l662
 11305  0772  318C  2C8B         	ljmp	i1l662
 11306  0774  318C  2C8B         	ljmp	i1l662
 11307  0776  318C  2C8B         	ljmp	i1l662
 11308  0778  318C  2C8B         	ljmp	i1l662
 11309  077A  318C  2C8B         	ljmp	i1l662
 11310  077C  318C  2C8B         	ljmp	i1l662
 11311  077E  318C  2C8B         	ljmp	i1l662
 11312  0780  318C  2C8B         	ljmp	i1l662
 11313  0782  318C  2C8B         	ljmp	i1l662
 11314  0784  318C  2C8B         	ljmp	i1l662
 11315  0786  318C  2C8B         	ljmp	i1l662
 11316  0788  318C  2C8B         	ljmp	i1l662
 11317  078A  318C  2C8B         	ljmp	i1l662
 11318  078C  318C  2C8B         	ljmp	i1l662
 11319  078E  318C  2C8B         	ljmp	i1l662
 11320  0790  318C  2C8B         	ljmp	i1l662
 11321  0792  318C  2C8B         	ljmp	i1l662
 11322  0794  318C  2C8B         	ljmp	i1l662
 11323  0796  318C  2C8B         	ljmp	i1l662
 11324  0798  318C  2C8B         	ljmp	i1l662
 11325  079A  318C  2C8B         	ljmp	i1l662
 11326  079C  318C  2C8B         	ljmp	i1l662
 11327  079E  318C  2C8B         	ljmp	i1l662
 11328  07A0  318C  2C8B         	ljmp	i1l662
 11329  07A2  318C  2C8B         	ljmp	i1l662
 11330  07A4  318C  2C8B         	ljmp	i1l662
 11331  07A6  318C  2C8B         	ljmp	i1l662
 11332  07A8  318C  2C8B         	ljmp	i1l662
 11333  07AA  318C  2C8B         	ljmp	i1l662
 11334  07AC  318C  2C8B         	ljmp	i1l662
 11335  07AE  318C  2C8B         	ljmp	i1l662
 11336  07B0  318C  2C8B         	ljmp	i1l662
 11337  07B2  318C  2C8B         	ljmp	i1l662
 11338  07B4  318C  2C8B         	ljmp	i1l662
 11339  07B6  318C  2C8B         	ljmp	i1l662
 11340  07B8  318C  2C8B         	ljmp	i1l662
 11341  07BA  318C  2C8B         	ljmp	i1l662
 11342  07BC  318C  2C8B         	ljmp	i1l662
 11343  07BE  318C  2C8B         	ljmp	i1l662
 11344  07C0  318C  2C8B         	ljmp	i1l662
 11345  07C2  318C  2C8B         	ljmp	i1l662
 11346  07C4  318C  2C8B         	ljmp	i1l662
 11347  07C6  318C  2C8B         	ljmp	i1l662
 11348  07C8  318C  2C8B         	ljmp	i1l662
 11349  07CA  318C  2C8B         	ljmp	i1l662
 11350  07CC  318C  2C8B         	ljmp	i1l662
 11351  07CE  318C  2C8B         	ljmp	i1l662
 11352  07D0  318C  2C8B         	ljmp	i1l662
 11353  07D2  318C  2C8B         	ljmp	i1l662
 11354  07D4  318C  2C8B         	ljmp	i1l662
 11355  07D6  318C  2C8B         	ljmp	i1l662
 11356  07D8  318C  2C8B         	ljmp	i1l662
 11357  07DA  318C  2C8B         	ljmp	i1l662
 11358  07DC  318C  2C8B         	ljmp	i1l662
 11359  07DE  318C  2C8B         	ljmp	i1l662
 11360  07E0  318C  2C8B         	ljmp	i1l662
 11361  07E2  318C  2C8B         	ljmp	i1l662
 11362  07E4  318C  2C65         	ljmp	i1l3723
 11363  07E6  318C  2C6F         	ljmp	i1l3729
 11364  07E8  318C  2C6A         	ljmp	i1l3727
 11365                           
 11366                           	psect	swtext5
 11367  1150                     __pswtext5:	
 11368  1150                     i1S5909:	
 11369  1150  318A  2AB9         	ljmp	i1l54
 11370  1152  318A  2A9B         	ljmp	i1l3497
 11371  1154  318A  2AA0         	ljmp	i1l3501
 11372  1156  318A  2AA5         	ljmp	i1l3505
 11373  1158  318A  2AAA         	ljmp	i1l3509
 11374                           
 11375                           	psect	swtext6
 11376  1100                     __pswtext6:	
 11377  1100                     i1S5911:	
 11378  1100  318F  2FB2         	ljmp	i1l3603
 11379  1102  318F  2FBD         	ljmp	i1l3611
 11380  1104  318F  2FEA         	ljmp	i1l547
 11381  1106  318F  2FEA         	ljmp	i1l547
 11382  1108  318F  2FEA         	ljmp	i1l547
 11383  110A  318F  2FEA         	ljmp	i1l547
 11384  110C  318F  2FEA         	ljmp	i1l547
 11385  110E  318F  2FEA         	ljmp	i1l547
 11386  1110  318F  2FEA         	ljmp	i1l547
 11387  1112  318F  2FEA         	ljmp	i1l547
 11388  1114  318F  2FEA         	ljmp	i1l547
 11389  1116  318F  2FEA         	ljmp	i1l547
 11390  1118  318F  2FEA         	ljmp	i1l547
 11391  111A  318F  2FEA         	ljmp	i1l547
 11392  111C  318F  2FEA         	ljmp	i1l547
 11393  111E  318F  2FEA         	ljmp	i1l547
 11394  1120  318F  2FEA         	ljmp	i1l547
 11395  1122  318F  2FEA         	ljmp	i1l547
 11396  1124  318F  2FEA         	ljmp	i1l547
 11397  1126  318F  2FEA         	ljmp	i1l547
 11398  1128  318F  2FEA         	ljmp	i1l547
 11399  112A  318F  2FEA         	ljmp	i1l547
 11400  112C  318F  2FEA         	ljmp	i1l547
 11401  112E  318F  2FEA         	ljmp	i1l547
 11402  1130  318F  2FEA         	ljmp	i1l547
 11403  1132  318F  2FEA         	ljmp	i1l547
 11404  1134  318F  2FEA         	ljmp	i1l547
 11405  1136  318F  2FEA         	ljmp	i1l547
 11406  1138  318F  2FEA         	ljmp	i1l547
 11407  113A  318F  2FEA         	ljmp	i1l547
 11408  113C  318F  2FEA         	ljmp	i1l547
 11409  113E  318F  2FEA         	ljmp	i1l547
 11410  1140  318F  2FC4         	ljmp	i1l3615
 11411  1142  318F  2FD1         	ljmp	i1l3621
 11412  1144  318F  2FDC         	ljmp	i1l3627
 11413                           
 11414                           	psect	text40
 11415  055D                     __ptext40:	
 11416 ;; *************** function _CDCInitEP *****************
 11417 ;; Defined at:
 11418 ;;		line 294 in file "usb/usb_device_cdc.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;		None
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  1    wreg      void 
 11425 ;; Registers used:
 11426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11427 ;; Tracked objects:
 11428 ;;		On entry : 1F/0
 11429 ;;		On exit  : 1F/3
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11436 ;;Total ram usage:        0 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; Hardware stack levels required when called:    2
 11439 ;; This function calls:
 11440 ;;		_USBEnableEndpoint
 11441 ;;		i1_USBTransferOnePacket
 11442 ;; This function is called by:
 11443 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11444 ;; This function uses a non-reentrant model
 11445 ;;
 11446                           
 11447                           
 11448                           ;psect for function _CDCInitEP
 11449  055D                     _CDCInitEP:	
 11450                           
 11451                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
 11452                           
 11453                           ;incstack = 0
 11454                           ; Regs used in _CDCInitEP: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11455  055D  0024               	movlb	4	; select bank4
 11456  055E  304B               	movlw	75
 11457  055F  01AF               	clrf	(_line_coding+3)^(0+512)
 11458  0560  01AE               	clrf	(_line_coding+2)^(0+512)
 11459  0561  00AD               	movwf	(_line_coding+1)^(0+512)
 11460  0562  3008               	movlw	8
 11461  0563  01AC               	clrf	_line_coding^(0+512)
 11462                           
 11463                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
 11464  0564  01B0               	clrf	(_line_coding^(0+512)+4)
 11465  0565  01B1               	clrf	(_line_coding^(0+512)+5)
 11466                           
 11467                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
 11468  0566  00B2               	movwf	(_line_coding^(0+512)+6)
 11469                           
 11470                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
 11471  0567  0023               	movlb	3	; select bank3
 11472  0568  301A               	movlw	26
 11473  0569  01D8               	clrf	_cdc_rx_len^(0+384)
 11474                           
 11475                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
 11476  056A  00F4               	movwf	USBEnableEndpoint@options
 11477  056B  3001               	movlw	1
 11478  056C  2585  3185         	fcall	_USBEnableEndpoint
 11479                           
 11480                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 11481  056E  301E               	movlw	30
 11482  056F  00F4               	movwf	USBEnableEndpoint@options
 11483  0570  3002               	movlw	2
 11484  0571  2585  3185         	fcall	_USBEnableEndpoint
 11485  0573  3020               	movlw	32
 11486                           
 11487                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 11488  0574  01F0               	clrf	i1USBTransferOnePacket@dir
 11489  0575  00F1               	movwf	i1USBTransferOnePacket@data
 11490  0576  3001               	movlw	1
 11491  0577  00F2               	movwf	i1USBTransferOnePacket@data+1
 11492  0578  3040               	movlw	64
 11493  0579  00F3               	movwf	i1USBTransferOnePacket@len
 11494  057A  3002               	movlw	2
 11495  057B  25D2               	fcall	i1_USBTransferOnePacket
 11496  057C  0871               	movf	?i1_USBTransferOnePacket+1,w
 11497  057D  0023               	movlb	3	; select bank3
 11498  057E  00C6               	movwf	(_CDCDataOutHandle+1)^(0+384)
 11499  057F  0870               	movf	?i1_USBTransferOnePacket,w
 11500  0580  00C5               	movwf	_CDCDataOutHandle^(0+384)
 11501                           
 11502                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
 11503  0581  01C3               	clrf	_CDCDataInHandle^(0+384)
 11504  0582  01C4               	clrf	(_CDCDataInHandle+1)^(0+384)
 11505                           
 11506                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
 11507  0583  01D7               	clrf	_cdc_trf_state^(0+384)
 11508  0584  0008               	return
 11509  0585                     __end_of_CDCInitEP:	
 11510  0585                     __ptext42:	
 11511 ;; *************** function _USBEnableEndpoint *****************
 11512 ;; Defined at:
 11513 ;;		line 878 in file "usb/usb_device.c"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;  ep              1    wreg     unsigned char 
 11516 ;;  options         1    4[COMMON] unsigned char 
 11517 ;; Auto vars:     Size  Location     Type
 11518 ;;  ep              1    9[COMMON] unsigned char 
 11519 ;;  p               2    7[COMMON] PTR unsigned char 
 11520 ;;		 -> UEP0(1), 
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  1    wreg      void 
 11523 ;; Registers used:
 11524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/3
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11530 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11533 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11534 ;;Total ram usage:        6 bytes
 11535 ;; Hardware stack levels used:    1
 11536 ;; Hardware stack levels required when called:    1
 11537 ;; This function calls:
 11538 ;;		_USBConfigureEndpoint
 11539 ;; This function is called by:
 11540 ;;		_CDCInitEP
 11541 ;; This function uses a non-reentrant model
 11542 ;;
 11543                           
 11544                           
 11545                           ;psect for function _USBEnableEndpoint
 11546  0585                     _USBEnableEndpoint:	
 11547                           
 11548                           ;incstack = 0
 11549                           ; Regs used in _USBEnableEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11550                           ;USBEnableEndpoint@ep stored from wreg
 11551  0585  00F9               	movwf	USBEnableEndpoint@ep
 11552                           
 11553                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 11554  0586  1D74               	btfss	USBEnableEndpoint@options,2
 11555  0587  2D8B               	goto	i1l3487
 11556                           
 11557                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 11558  0588  01F0               	clrf	USBConfigureEndpoint@direction
 11559  0589  25A2  3185         	fcall	_USBConfigureEndpoint
 11560  058B                     i1l3487:	
 11561                           
 11562                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 11563  058B  1CF4               	btfss	USBEnableEndpoint@options,1
 11564  058C  2D91               	goto	i1l3491
 11565                           
 11566                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 11567  058D  01F0               	clrf	USBConfigureEndpoint@direction
 11568  058E  0AF0               	incf	USBConfigureEndpoint@direction,f
 11569  058F  0879               	movf	USBEnableEndpoint@ep,w
 11570  0590  25A2               	fcall	_USBConfigureEndpoint
 11571  0591                     i1l3491:	
 11572                           
 11573                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 11574  0591  0879               	movf	USBEnableEndpoint@ep,w
 11575  0592  3E98               	addlw	152
 11576  0593  00F5               	movwf	??_USBEnableEndpoint
 11577  0594  300E               	movlw	14
 11578  0595  01F6               	clrf	??_USBEnableEndpoint+1
 11579  0596  3DF6               	addwfc	??_USBEnableEndpoint+1,f
 11580  0597  0875               	movf	??_USBEnableEndpoint,w
 11581  0598  00F7               	movwf	USBEnableEndpoint@p
 11582  0599  0876               	movf	??_USBEnableEndpoint+1,w
 11583  059A  00F8               	movwf	USBEnableEndpoint@p+1
 11584                           
 11585                           ;usb_device.c: 901: *p = options;
 11586  059B  0877               	movf	USBEnableEndpoint@p,w
 11587  059C  0086               	movwf	6
 11588  059D  0878               	movf	USBEnableEndpoint@p+1,w
 11589  059E  0087               	movwf	7
 11590  059F  0874               	movf	USBEnableEndpoint@options,w
 11591  05A0  0081               	movwf	1
 11592  05A1  0008               	return
 11593  05A2                     __end_of_USBEnableEndpoint:	
 11594  05A2                     __ptext43:	
 11595 ;; *************** function _USBConfigureEndpoint *****************
 11596 ;; Defined at:
 11597 ;;		line 1543 in file "usb/usb_device.c"
 11598 ;; Parameters:    Size  Location     Type
 11599 ;;  EPNum           1    wreg     unsigned char 
 11600 ;;  direction       1    0[COMMON] unsigned char 
 11601 ;; Auto vars:     Size  Location     Type
 11602 ;;  EPNum           1    2[COMMON] unsigned char 
 11603 ;;  handle          1    3[COMMON] PTR volatile struct __BD
 11604 ;;		 -> BDT(48), 
 11605 ;; Return value:  Size  Location     Type
 11606 ;;                  1    wreg      void 
 11607 ;; Registers used:
 11608 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11609 ;; Tracked objects:
 11610 ;;		On entry : 0/3
 11611 ;;		On exit  : 0/0
 11612 ;;		Unchanged: 0/0
 11613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11614 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;Total ram usage:        4 bytes
 11619 ;; Hardware stack levels used:    1
 11620 ;; This function calls:
 11621 ;;		Nothing
 11622 ;; This function is called by:
 11623 ;;		_USBEnableEndpoint
 11624 ;; This function uses a non-reentrant model
 11625 ;;
 11626                           
 11627                           
 11628                           ;psect for function _USBConfigureEndpoint
 11629  05A2                     _USBConfigureEndpoint:	
 11630                           
 11631                           ;incstack = 0
 11632                           ; Regs used in _USBConfigureEndpoint: [wreg+fsr1l+fsr1h+status,2+status,0]
 11633                           ;USBConfigureEndpoint@EPNum stored from wreg
 11634  05A2  00F2               	movwf	USBConfigureEndpoint@EPNum
 11635                           
 11636                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;;usb_device.c: 1549: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 11637  05A3  3020               	movlw	32
 11638  05A4  00F3               	movwf	USBConfigureEndpoint@handle
 11639                           
 11640                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 11641  05A5  0870               	movf	USBConfigureEndpoint@direction,w
 11642  05A6  00F1               	movwf	??_USBConfigureEndpoint
 11643  05A7  35F1               	lslf	??_USBConfigureEndpoint,f
 11644  05A8  0872               	movf	USBConfigureEndpoint@EPNum,w
 11645  05A9  0709               	addwf	9,w
 11646  05AA  0709               	addwf	9,w
 11647  05AB  0771               	addwf	??_USBConfigureEndpoint,w
 11648  05AC  0709               	addwf	9,w
 11649  05AD  0709               	addwf	9,w
 11650  05AE  07F3               	addwf	USBConfigureEndpoint@handle,f
 11651                           
 11652                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 11653  05AF  0873               	movf	USBConfigureEndpoint@handle,w
 11654  05B0  0086               	movwf	6
 11655  05B1  0187               	clrf	7
 11656  05B2  1381               	bcf	1,7
 11657                           
 11658                           ;usb_device.c: 1557: if(direction == 0)
 11659  05B3  0870               	movf	USBConfigureEndpoint@direction,w
 11660  05B4  1D03               	btfss	3,2
 11661  05B5  2DC0               	goto	i1l3457
 11662                           
 11663                           ;usb_device.c: 1558: {;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 11664  05B6  3572               	lslf	USBConfigureEndpoint@EPNum,w
 11665  05B7  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11666  05B8  0086               	movwf	6
 11667  05B9  3001               	movlw	1	; select bank3/4
 11668  05BA  0087               	movwf	7
 11669  05BB  0873               	movf	USBConfigureEndpoint@handle,w
 11670  05BC  3FC0               	movwi [0]fsr1
 11671  05BD  3000               	movlw	0
 11672  05BE  3FC1               	movwi [1]fsr1
 11673                           
 11674                           ;usb_device.c: 1560: }
 11675  05BF  2DC9               	goto	i1l3459
 11676  05C0                     i1l3457:	
 11677                           
 11678                           ;usb_device.c: 1561: else;usb_device.c: 1562: {;usb_device.c: 1563: pBDTEntryIn[EPNum] =
      +                           handle;
 11679  05C0  3572               	lslf	USBConfigureEndpoint@EPNum,w
 11680  05C1  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11681  05C2  0086               	movwf	6
 11682  05C3  3001               	movlw	1	; select bank3/4
 11683  05C4  0087               	movwf	7
 11684  05C5  0873               	movf	USBConfigureEndpoint@handle,w
 11685  05C6  3FC0               	movwi [0]fsr1
 11686  05C7  3000               	movlw	0
 11687  05C8  3FC1               	movwi [1]fsr1
 11688  05C9                     i1l3459:	
 11689                           
 11690                           ;usb_device.c: 1564: };usb_device.c: 1567: handle->STAT.DTS = 0;
 11691  05C9  0873               	movf	USBConfigureEndpoint@handle,w
 11692  05CA  0086               	movwf	6
 11693  05CB  0187               	clrf	7
 11694  05CC  1301               	bcf	1,6
 11695                           
 11696                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 11697  05CD  0873               	movf	USBConfigureEndpoint@handle,w
 11698  05CE  3E04               	addlw	4
 11699  05CF  0086               	movwf	6
 11700  05D0  1701               	bsf	1,6
 11701  05D1  0008               	return
 11702  05D2                     __end_of_USBConfigureEndpoint:	
 11703  05D2                     __ptext41:	
 11704 ;; *************** function i1_USBTransferOnePacket *****************
 11705 ;; Defined at:
 11706 ;;		line 995 in file "usb/usb_device.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;  ep              1    wreg     unsigned char 
 11709 ;;  dir             1    0[COMMON] unsigned char 
 11710 ;;  data            2    1[COMMON] PTR unsigned char 
 11711 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 11712 ;;  len             1    3[COMMON] unsigned char 
 11713 ;; Auto vars:     Size  Location     Type
 11714 ;;  ep              1    8[COMMON] unsigned char 
 11715 ;;  USBTransferO    2    9[COMMON] PTR volatile struct __BD
 11716 ;;		 -> RAM(4096), NULL(0), BDT(48), 
 11717 ;; Return value:  Size  Location     Type
 11718 ;;                  2    0[COMMON] PTR void 
 11719 ;; Registers used:
 11720 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11721 ;; Tracked objects:
 11722 ;;		On entry : 0/3
 11723 ;;		On exit  : 0/0
 11724 ;;		Unchanged: 0/0
 11725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11730 ;;Total ram usage:       11 bytes
 11731 ;; Hardware stack levels used:    1
 11732 ;; This function calls:
 11733 ;;		Nothing
 11734 ;; This function is called by:
 11735 ;;		_CDCInitEP
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           
 11739                           
 11740                           ;psect for function i1_USBTransferOnePacket
 11741  05D2                     i1_USBTransferOnePacket:	
 11742                           
 11743                           ;incstack = 0
 11744                           ; Regs used in i1_USBTransferOnePacket: [wreg+fsr1l+fsr1h+status,2+status,0]
 11745                           ;i1USBTransferOnePacket@ep stored from wreg
 11746  05D2  00F8               	movwf	i1USBTransferOnePacket@ep
 11747                           
 11748                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 11749  05D3  0870               	movf	i1USBTransferOnePacket@dir,w
 11750  05D4  1903               	btfsc	3,2
 11751  05D5  2DDF               	goto	i1l3533
 11752                           
 11753                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 11754  05D6  3578               	lslf	i1USBTransferOnePacket@ep,w
 11755  05D7  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11756  05D8  0086               	movwf	6
 11757  05D9  3001               	movlw	1	; select bank3/4
 11758  05DA  0087               	movwf	7
 11759  05DB  3F40               	moviw [0]fsr1
 11760  05DC  00F9               	movwf	i1USBTransferOnePacket@handle
 11761  05DD  3F41               	moviw [1]fsr1
 11762  05DE  2DE7               	goto	L13
 11763  05DF                     i1l3533:	
 11764                           ;usb_device.c: 1004: }
 11765                           
 11766                           
 11767                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 11768  05DF  3578               	lslf	i1USBTransferOnePacket@ep,w
 11769  05E0  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11770  05E1  0086               	movwf	6
 11771  05E2  3001               	movlw	1	; select bank3/4
 11772  05E3  0087               	movwf	7
 11773  05E4  3F40               	moviw [0]fsr1
 11774  05E5  00F9               	movwf	i1USBTransferOnePacket@handle
 11775  05E6  3F41               	moviw [1]fsr1
 11776  05E7                     L13:	
 11777  05E7  00FA               	movwf	i1USBTransferOnePacket@handle+1
 11778                           
 11779                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 11780  05E8  0479               	iorwf	i1USBTransferOnePacket@handle,w
 11781  05E9  1D03               	btfss	3,2
 11782  05EA  2DEE               	goto	i1l3541
 11783                           
 11784                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 11785  05EB  01F0               	clrf	?i1_USBTransferOnePacket
 11786  05EC  01F1               	clrf	?i1_USBTransferOnePacket+1
 11787  05ED  0008               	return
 11788  05EE                     i1l3541:	
 11789                           
 11790                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = (((uint16_t)(data)) & 0x7FFF);
 11791  05EE  0871               	movf	i1USBTransferOnePacket@data,w
 11792  05EF  00F4               	movwf	??i1_USBTransferOnePacket
 11793  05F0  307F               	movlw	127
 11794  05F1  0572               	andwf	i1USBTransferOnePacket@data+1,w
 11795  05F2  00F5               	movwf	??i1_USBTransferOnePacket+1
 11796  05F3  0879               	movf	i1USBTransferOnePacket@handle,w
 11797  05F4  0086               	movwf	6
 11798  05F5  087A               	movf	i1USBTransferOnePacket@handle+1,w
 11799  05F6  0087               	movwf	7
 11800  05F7  3142               	addfsr 1,2
 11801  05F8  0874               	movf	??i1_USBTransferOnePacket,w
 11802  05F9  3FC0               	movwi [0]fsr1
 11803  05FA  0875               	movf	??i1_USBTransferOnePacket+1,w
 11804  05FB  3FC1               	movwi [1]fsr1
 11805                           
 11806                           ;usb_device.c: 1030: handle->CNT = len;
 11807  05FC  0879               	movf	i1USBTransferOnePacket@handle,w
 11808  05FD  3E01               	addlw	1
 11809  05FE  00F4               	movwf	??i1_USBTransferOnePacket
 11810  05FF  3000               	movlw	0
 11811  0600  3D7A               	addwfc	i1USBTransferOnePacket@handle+1,w
 11812  0601  00F5               	movwf	??i1_USBTransferOnePacket+1
 11813  0602  0874               	movf	??i1_USBTransferOnePacket,w
 11814  0603  0086               	movwf	6
 11815  0604  0875               	movf	??i1_USBTransferOnePacket+1,w
 11816  0605  0087               	movwf	7
 11817  0606  0873               	movf	i1USBTransferOnePacket@len,w
 11818  0607  0081               	movwf	1
 11819                           
 11820                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 11821  0608  0879               	movf	i1USBTransferOnePacket@handle,w
 11822  0609  0086               	movwf	6
 11823  060A  087A               	movf	i1USBTransferOnePacket@handle+1,w
 11824  060B  0087               	movwf	7
 11825  060C  3040               	movlw	64
 11826  060D  0581               	andwf	1,f
 11827                           
 11828                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 11829  060E  0879               	movf	i1USBTransferOnePacket@handle,w
 11830  060F  0086               	movwf	6
 11831  0610  087A               	movf	i1USBTransferOnePacket@handle+1,w
 11832  0611  0087               	movwf	7
 11833  0612  1581               	bsf	1,3
 11834                           
 11835                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 11836  0613  0879               	movf	i1USBTransferOnePacket@handle,w
 11837  0614  0086               	movwf	6
 11838  0615  087A               	movf	i1USBTransferOnePacket@handle+1,w
 11839  0616  0087               	movwf	7
 11840  0617  1781               	bsf	1,7
 11841                           
 11842                           ;usb_device.c: 1036: if(dir != 0)
 11843  0618  0870               	movf	i1USBTransferOnePacket@dir,w
 11844  0619  1903               	btfsc	3,2
 11845  061A  2E31               	goto	i1l3551
 11846                           
 11847                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 11848  061B  3578               	lslf	i1USBTransferOnePacket@ep,w
 11849  061C  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11850  061D  0086               	movwf	6
 11851  061E  3001               	movlw	1	; select bank3/4
 11852  061F  0087               	movwf	7
 11853  0620  3F40               	moviw [0]fsr1
 11854  0621  00F4               	movwf	??i1_USBTransferOnePacket
 11855  0622  3F41               	moviw [1]fsr1
 11856  0623  00F5               	movwf	??i1_USBTransferOnePacket+1
 11857  0624  3004               	movlw	4
 11858  0625  0674               	xorwf	??i1_USBTransferOnePacket,w
 11859  0626  00F6               	movwf	??i1_USBTransferOnePacket+2
 11860  0627  0875               	movf	??i1_USBTransferOnePacket+1,w
 11861  0628  00F7               	movwf	??i1_USBTransferOnePacket+3
 11862  0629  3578               	lslf	i1USBTransferOnePacket@ep,w
 11863  062A  3EA7               	addlw	(low (_pBDTEntryIn| (0+256)))& (0+255)
 11864  062B  0086               	movwf	6
 11865  062C  0876               	movf	??i1_USBTransferOnePacket+2,w
 11866  062D  3FC0               	movwi [0]fsr1
 11867  062E  0877               	movf	??i1_USBTransferOnePacket+3,w
 11868  062F  3FC1               	movwi [1]fsr1
 11869                           
 11870                           ;usb_device.c: 1040: }
 11871  0630  2E46               	goto	i1l3553
 11872  0631                     i1l3551:	
 11873                           
 11874                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 11875  0631  3578               	lslf	i1USBTransferOnePacket@ep,w
 11876  0632  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11877  0633  0086               	movwf	6
 11878  0634  3001               	movlw	1	; select bank3/4
 11879  0635  0087               	movwf	7
 11880  0636  3F40               	moviw [0]fsr1
 11881  0637  00F4               	movwf	??i1_USBTransferOnePacket
 11882  0638  3F41               	moviw [1]fsr1
 11883  0639  00F5               	movwf	??i1_USBTransferOnePacket+1
 11884  063A  3004               	movlw	4
 11885  063B  0674               	xorwf	??i1_USBTransferOnePacket,w
 11886  063C  00F6               	movwf	??i1_USBTransferOnePacket+2
 11887  063D  0875               	movf	??i1_USBTransferOnePacket+1,w
 11888  063E  00F7               	movwf	??i1_USBTransferOnePacket+3
 11889  063F  3578               	lslf	i1USBTransferOnePacket@ep,w
 11890  0640  3EAD               	addlw	(low (_pBDTEntryOut| (0+256)))& (0+255)
 11891  0641  0086               	movwf	6
 11892  0642  0876               	movf	??i1_USBTransferOnePacket+2,w
 11893  0643  3FC0               	movwi [0]fsr1
 11894  0644  0877               	movf	??i1_USBTransferOnePacket+3,w
 11895  0645  3FC1               	movwi [1]fsr1
 11896  0646                     i1l3553:	
 11897                           
 11898                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 11899  0646  087A               	movf	i1USBTransferOnePacket@handle+1,w
 11900  0647  00F1               	movwf	?i1_USBTransferOnePacket+1
 11901  0648  0879               	movf	i1USBTransferOnePacket@handle,w
 11902  0649  00F0               	movwf	?i1_USBTransferOnePacket
 11903  064A  0008               	return
 11904  064B                     __end_ofi1_USBTransferOnePacket:	
 11905                           
 11906                           	psect	swtext7
 11907  116E                     __pswtext7:	
 11908  116E                     i1S5915:	
 11909  116E  318D  2D71         	ljmp	i1l3563
 11910  1170  318D  2D7B         	ljmp	i1l74
 11911  1172  318D  2D87         	ljmp	i1l79
 11912  1174  318D  2D8F         	ljmp	i1l84
 11913                           
 11914                           	psect	swtext8
 11915  115A                     __pswtext8:	
 11916  115A                     i1S5917:	
 11917  115A  318C  2CE7         	ljmp	i1l24
 11918  115C  318C  2CD1         	ljmp	i1l18
 11919  115E  318C  2CD4         	ljmp	i1l20
 11920  1160  318C  2CD7         	ljmp	i1l21
 11921  1162  318C  2CDA         	ljmp	i1l22
 11922                           
 11923                           	psect	swtext9
 11924  1164                     __pswtext9:	
 11925  1164                     i1S5919:	
 11926  1164  318D  2D00         	ljmp	i1l14
 11927  1166  318C  2CEA         	ljmp	i1l8
 11928  1168  318C  2CED         	ljmp	i1l10
 11929  116A  318C  2CF0         	ljmp	i1l11
 11930  116C  318C  2CF3         	ljmp	i1l12
 11931                           
 11932                           	psect	text51
 11933  064B                     __ptext51:	
 11934 ;; *************** function _USBCtrlTrfRxService *****************
 11935 ;; Defined at:
 11936 ;;		line 1852 in file "usb/usb_device.c"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;		None
 11939 ;; Auto vars:     Size  Location     Type
 11940 ;;  byteToRead      1    5[COMMON] unsigned char 
 11941 ;;  i               1    4[COMMON] unsigned char 
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11946 ;; Tracked objects:
 11947 ;;		On entry : 1F/3
 11948 ;;		On exit  : 1F/3
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;Total ram usage:        4 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; Hardware stack levels required when called:    1
 11958 ;; This function calls:
 11959 ;;		_USBCtrlEPAllowStatusStage
 11960 ;; This function is called by:
 11961 ;;		_USBCtrlTrfOutHandler
 11962 ;; This function uses a non-reentrant model
 11963 ;;
 11964                           
 11965                           
 11966                           ;psect for function _USBCtrlTrfRxService
 11967  064B                     _USBCtrlTrfRxService:	
 11968  064B                     i1l4115:	
 11969                           ;incstack = 0
 11970                           ; Regs used in _USBCtrlTrfRxService: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11971                           
 11972                           
 11973                           ;usb_device.c: 1854: uint8_t byteToRead;;usb_device.c: 1855: uint8_t i;;usb_device.c: 18
      +                          59: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 11974  064B  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 11975  064C  0086               	movwf	6
 11976  064D  0187               	clrf	7
 11977  064E  3F41               	moviw [1]fsr1
 11978  064F  00F5               	movwf	USBCtrlTrfRxService@byteToRead
 11979                           
 11980                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 11981  0650  00F2               	movwf	??_USBCtrlTrfRxService
 11982  0651  01F3               	clrf	??_USBCtrlTrfRxService+1
 11983  0652  0873               	movf	??_USBCtrlTrfRxService+1,w
 11984  0653  0224               	subwf	((_outPipes+1)^(0+384)+3),w	;volatile
 11985  0654  1D03               	skipz
 11986  0655  2E58               	goto	u268_25
 11987  0656  0872               	movf	??_USBCtrlTrfRxService,w
 11988  0657  0223               	subwf	(_outPipes^(0+384)+3),w	;volatile
 11989  0658                     u268_25:	
 11990  0658  1803               	skipnc
 11991  0659  2E5C               	goto	i1l354
 11992                           
 11993                           ;usb_device.c: 1866: {;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 11994  065A  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
 11995  065B  00F5               	movwf	USBCtrlTrfRxService@byteToRead
 11996  065C                     i1l354:	
 11997                           
 11998                           ;usb_device.c: 1868: };usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 11999  065C  0875               	movf	USBCtrlTrfRxService@byteToRead,w
 12000  065D  02A3               	subwf	(_outPipes^(0+384)+3),f	;volatile
 12001  065E  1C03               	skipc
 12002  065F  03A4               	decf	((_outPipes+1)^(0+384)+3),f	;volatile
 12003                           
 12004                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 12005  0660  01F4               	clrf	USBCtrlTrfRxService@i
 12006  0661                     i1l4129:	
 12007  0661  0875               	movf	USBCtrlTrfRxService@byteToRead,w
 12008  0662  0274               	subwf	USBCtrlTrfRxService@i,w
 12009  0663  1803               	btfsc	3,0
 12010  0664  2E72               	goto	i1l4131
 12011                           
 12012                           ;usb_device.c: 1875: {;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 12013  0665  0820               	movf	_outPipes^(0+384),w	;volatile
 12014  0666  0086               	movwf	6
 12015  0667  3002               	movlw	2	; select bank4/5
 12016  0668  0087               	movwf	7
 12017  0669  0874               	movf	USBCtrlTrfRxService@i,w
 12018  066A  3E58               	addlw	88
 12019  066B  0084               	movwf	4
 12020  066C  0185               	clrf	5
 12021  066D  0800               	movf	0,w
 12022  066E  0081               	movwf	1
 12023  066F  0AA0               	incf	_outPipes^(0+384),f	;volatile
 12024  0670  0AF4               	incf	USBCtrlTrfRxService@i,f
 12025  0671  2E61               	goto	i1l4129
 12026  0672                     i1l4131:	
 12027                           
 12028                           ;usb_device.c: 1877: };usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 12029  0672  0823               	movf	(_outPipes^(0+384)+3),w	;volatile
 12030  0673  0424               	iorwf	((_outPipes+1)^(0+384)+3),w	;volatile
 12031  0674  1903               	btfsc	3,2
 12032  0675  2EAA               	goto	i1l4143
 12033                           
 12034                           ;usb_device.c: 1882: {;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 12035  0676  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12036  0677  3E01               	addlw	1
 12037  0678  00F2               	movwf	??_USBCtrlTrfRxService
 12038  0679  3000               	movlw	0
 12039  067A  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12040  067B  00F3               	movwf	??_USBCtrlTrfRxService+1
 12041  067C  0872               	movf	??_USBCtrlTrfRxService,w
 12042  067D  0086               	movwf	6
 12043  067E  0873               	movf	??_USBCtrlTrfRxService+1,w
 12044  067F  0087               	movwf	7
 12045  0680  3008               	movlw	8
 12046  0681  0081               	movwf	1
 12047                           
 12048                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&CtrlTrfData)) & 0x7FFF);
 12049  0682  3058               	movlw	88
 12050  0683  00F2               	movwf	??_USBCtrlTrfRxService
 12051  0684  01F3               	clrf	??_USBCtrlTrfRxService+1
 12052  0685  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12053  0686  0086               	movwf	6
 12054  0687  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12055  0688  0087               	movwf	7
 12056  0689  3142               	addfsr 1,2
 12057  068A  0872               	movf	??_USBCtrlTrfRxService,w
 12058  068B  3FC0               	movwi [0]fsr1
 12059  068C  0873               	movf	??_USBCtrlTrfRxService+1,w
 12060  068D  3FC1               	movwi [1]fsr1
 12061                           
 12062                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 12063  068E  0867               	movf	_pBDTEntryEP0OutCurrent^(0+384),w
 12064  068F  0086               	movwf	6
 12065  0690  0187               	clrf	7
 12066                           
 12067                           ;usb_device.c: 1886: {;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 12068  0691  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12069  0692  1B01               	btfsc	1,6
 12070  0693  2E9F               	goto	L15
 12071  0694  0086               	movwf	6
 12072  0695  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12073  0696  0087               	movwf	7
 12074  0697  3048               	movlw	72
 12075  0698  0081               	movwf	1
 12076                           
 12077                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12078  0699  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12079  069A  0086               	movwf	6
 12080  069B  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12081  069C  0087               	movwf	7
 12082  069D  1781               	bsf	1,7
 12083                           
 12084                           ;usb_device.c: 1889: }
 12085  069E  0008               	return
 12086  069F                     L15:	
 12087                           ;usb_device.c: 1890: else;usb_device.c: 1891: {;usb_device.c: 1892: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 12088                           
 12089  069F  0086               	movwf	6
 12090  06A0  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12091  06A1  0087               	movwf	7
 12092  06A2  3008               	movlw	8
 12093  06A3  0081               	movwf	1
 12094                           
 12095                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12096  06A4  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12097  06A5  0086               	movwf	6
 12098  06A6  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12099  06A7  0087               	movwf	7
 12100  06A8  1781               	bsf	1,7
 12101  06A9  0008               	return
 12102  06AA                     i1l4143:	
 12103                           
 12104                           ;usb_device.c: 1896: else;usb_device.c: 1897: {;usb_device.c: 1901: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12105  06AA  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12106  06AB  3E01               	addlw	1
 12107  06AC  00F2               	movwf	??_USBCtrlTrfRxService
 12108  06AD  3000               	movlw	0
 12109  06AE  3D4C               	addwfc	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12110  06AF  00F3               	movwf	??_USBCtrlTrfRxService+1
 12111  06B0  0872               	movf	??_USBCtrlTrfRxService,w
 12112  06B1  0086               	movwf	6
 12113  06B2  0873               	movf	??_USBCtrlTrfRxService+1,w
 12114  06B3  0087               	movwf	7
 12115  06B4  3008               	movlw	8
 12116  06B5  0081               	movwf	1
 12117                           
 12118                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = (((uint16_t)(&SetupPkt)) & 0x7FFF);
 12119  06B6  3050               	movlw	80
 12120  06B7  00F2               	movwf	??_USBCtrlTrfRxService
 12121  06B8  01F3               	clrf	??_USBCtrlTrfRxService+1
 12122  06B9  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12123  06BA  0086               	movwf	6
 12124  06BB  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12125  06BC  0087               	movwf	7
 12126  06BD  3142               	addfsr 1,2
 12127  06BE  0872               	movf	??_USBCtrlTrfRxService,w
 12128  06BF  3FC0               	movwi [0]fsr1
 12129  06C0  0873               	movf	??_USBCtrlTrfRxService+1,w
 12130  06C1  3FC1               	movwi [1]fsr1
 12131                           
 12132                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12133  06C2  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12134  06C3  0086               	movwf	6
 12135  06C4  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12136  06C5  0087               	movwf	7
 12137  06C6  3004               	movlw	4
 12138  06C7  0081               	movwf	1
 12139                           
 12140                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12141  06C8  084B               	movf	_pBDTEntryEP0OutNext^(0+384),w
 12142  06C9  0086               	movwf	6
 12143  06CA  084C               	movf	(_pBDTEntryEP0OutNext+1)^(0+384),w
 12144  06CB  0087               	movwf	7
 12145  06CC  1781               	bsf	1,7
 12146                           
 12147                           ;usb_device.c: 1915: {;usb_device.c: 1921: outPipes[0].pFunc();
 12148  06CD  0825               	movf	(low ((_outPipes| (0+256)+5)))^(0+128),w	;volatile
 12149  06CE  0826               	movf	((low ((_outPipes| (0+256)+5))+1))^(0+128),w	;volatile
 12150                           
 12151                           ;usb_device.c: 1926: };usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 12152  06CF  13A2               	bcf	(_outPipes^(0+384)+2),7	;volatile
 12153                           
 12154                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 12155  06D0  085E               	movf	_USBDeferStatusStagePacket^(0+384),w	;volatile
 12156  06D1  1D03               	btfss	3,2
 12157  06D2  0008               	return
 12158                           
 12159                           ;usb_device.c: 1942: {;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 12160  06D3  318D  2D01         	ljmp	i1l3807
 12161  06D5                     __end_of_USBCtrlTrfRxService:	


Data Sizes:
    Strings     0
    Constant    502
    Data        2
    BSS         296
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            16     15      16
    BANK1            16     16      16
    BANK2            16     16      16
    BANK3            80      2      80
    BANK4            80      0      19
    BANK5            80      0      64
    BANK6            80      0      72
    BANK7            80      0      64
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    __builtin_memcpy$1	PTR const void  size(2) Largest target is 4096
		 -> CtrlTrfData(BANK0[8]), RAM(DATA[4096]), SetupPkt(BANK0[8]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 8
		 -> SetupPkt(BANK0[8]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), USTATcopy(BANK3[1]), USBActiveConfiguration(BANK3[1]), NULL(NULL[0]), 
		 -> BDT(BANK0[48]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    putrsUSBUSART@data	PTR const unsigned char  size(2) Largest target is 22
		 -> cmd_prompt(CODE[6]), helloWorld(CODE[22]), 

    putrsUSBUSART@pData	PTR const unsigned char  size(2) Largest target is 22
		 -> cmd_prompt(CODE[6]), helloWorld(CODE[22]), 

    putUSBUSART@data	PTR unsigned char  size(1) Largest target is 64
		 -> writeBuffer(BANK5[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(1) Largest target is 64
		 -> readBuffer(BANK7[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S1828_POINTER$wRom	PTR const unsigned int  size(1) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S1828_POINTER$bRom	PTR const unsigned char  size(1) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S1828_POINTER$wRam	PTR unsigned int  size(1) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S1828_POINTER$bRam	PTR unsigned char  size(1) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK3[2]), BDT(BANK0[48]), 

    USBStdSetCfgHandler@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 

    pDst	PTR volatile unsigned char  size(1) Largest target is 8
		 -> CtrlTrfData(BANK0[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(1) Largest target is 48
		 -> BDT(BANK0[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(1) Largest target is 48
		 -> NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK1[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR29[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), NULL(NULL[0]), BDT(BANK0[48]), 

    S276$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S266$wRam	PTR unsigned int  size(1) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(1) Largest target is 0

    S266$bRam	PTR unsigned char  size(1) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(1) Largest target is 0

    S242$wRom	PTR const unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(1) Largest target is 0

    S242$wRam	PTR unsigned int  size(1) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(1) Largest target is 0

    S242$bRom	PTR const unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(1) Largest target is 0

    S242$bRam	PTR unsigned char  size(1) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(1) Largest target is 0

    USBDeviceInit@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP1(SFR29[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _SYS_InterruptHigh in COMMON

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBCtrlEPServiceComplete->_USBCtrlEPAllowDataStage
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    i1_SYSTEM_Initialize->i1_LED_Enable
    i1_LED_Enable->i1_LED_Off
    _CDCInitEP->i1_USBTransferOnePacket
    _USBEnableEndpoint->_USBConfigureEndpoint
    _APP_LEDUpdateUSBStatus->_LED_On
    _APP_LEDUpdateUSBStatus->i1_LED_Off
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USBCtrlEPAllowStatusStage
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    _SYS_InterruptHigh->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER

Critical Paths under _main in BANK1

    _SYSTEM_Initialize->_LED_Enable
    _LED_Enable->_LED_Off
    _getsUSBUSART->_USBTransferOnePacket
    _ProcessCommand->_hexatoi
    _CDCTxService->_USBTransferOnePacket

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _APP_DeviceCDCBasicDemoTasks->_ProcessCommand
    _ProcessCommand->_hexatoi

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_APP_DeviceCDCBasicDemoTasks

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5393
        _APP_DeviceCDCBasicDemoTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                       _WS2812b_Init
                      _WS2812b_Write
 ---------------------------------------------------------------------------------
 (1) _WS2812b_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        4     4      0     272
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    1     1      0      88
                                              2 BANK1      1     1      0
                      _BUTTON_Enable
                         _LED_Enable
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      44
                                              1 BANK1      1     1      0
                            _LED_Off
 ---------------------------------------------------------------------------------
 (3) _LED_Off                                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BUTTON_Enable                                        1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCDCBasicDemoTasks                          3     3      0    4788
                                              0 BANK3      2     2      0
                       _CDCTxService
                     _ProcessCommand
                       _getsUSBUSART
                        _putUSBUSART
                      _putrsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _putrsUSBUSART                                        8     6      2     291
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (2) _putUSBUSART                                          2     1      1     169
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         3     2      1    1786
                                             11 BANK1      3     2      1
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _ProcessCommand                                      11    11      0     654
                                              5 BANK2     11    11      0
                      _WS2812b_Write
                            _hexatoi
                         _skip_white
 ---------------------------------------------------------------------------------
 (3) _skip_white                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _hexatoi                                             21    17      4     160
                                              0 BANK1     16    12      4
                                              0 BANK2      5     5      0
 ---------------------------------------------------------------------------------
 (1) _WS2812b_Write                                        3     3      0     245
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1731
                                             11 BANK1      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1594
                                              0 BANK1     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SYS_InterruptHigh                                    0     0      0   30129
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (5) _USBDeviceTasks                                       2     2      0   30129
                                             13 COMMON     1     1      0
                                             14 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i1_USBDeviceInit
 ---------------------------------------------------------------------------------
 (6) i1_USBDeviceInit                                      4     4      0     272
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _USBWakeFromSuspend                                   0     0      0    4011
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBSuspend                                           0     0      0    4011
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USBStallHandler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlEPService                                     3     3      0   17756
                                             11 BANK0      3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfSetupHandler                               0     0      0   17527
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPServiceComplete                             2     2      0      92
                                              5 COMMON     2     2      0
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowDataStage                              2     2      0      92
                                              3 COMMON     2     2      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (8) _USBCheckStdRequest                                   0     0      0   13424
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (9) _USBStdSetCfgHandler                                  4     4      0    4885
                                              6 BANK0      4     4      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (10) _memset                                              8     2      6     639
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (9) _USBStdGetStatusHandler                               2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _USBStdGetDscHandler                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (9) _USBStdFeatureReqHandler                              7     7      0    4482
                                             11 COMMON     2     2      0
                                              6 BANK0      5     5      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (6) _USER_USB_CALLBACK_EVENT_HANDLER                      6     0      6    4011
                                              0 BANK0      6     0      6
   _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
                   _APP_UpdateTimers
                _BUTTON_UpdateStates
                          _CDCInitEP
                 _USBCheckCDCRequest
                i1_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (7) i1_SYSTEM_Initialize                                  1     1      0      88
                                              2 COMMON     1     1      0
                    i1_BUTTON_Enable
                       i1_LED_Enable
 ---------------------------------------------------------------------------------
 (8) i1_LED_Enable                                         1     1      0      44
                                              1 COMMON     1     1      0
                          i1_LED_Off
 ---------------------------------------------------------------------------------
 (8) i1_BUTTON_Enable                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CDCInitEP                                            0     0      0    1187
                  _USBEnableEndpoint
             i1_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (8) i1_USBTransferOnePacket                              11     7      4     454
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (8) _USBEnableEndpoint                                    6     5      1     733
                                              4 COMMON     6     5      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (9) _USBConfigureEndpoint                                 4     3      1     400
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _BUTTON_UpdateStates                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_UpdateTimers                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _APP_LEDUpdateUSBStatus                               0     0      0      44
                             _LED_On
                          i1_LED_Off
 ---------------------------------------------------------------------------------
 (9) i1_LED_Off                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _LED_On                                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _APP_DeviceCDCBasicDemoInitialize                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfOutHandler                                 2     2      0     114
                                              6 COMMON     2     2      0
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (8) _USBCtrlTrfRxService                                  4     4      0     114
                                              2 COMMON     4     4      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (9) _USBCtrlEPAllowStatusStage                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfInHandler                                  3     3      0     115
                                              3 COMMON     3     3      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfTxService                                 3     3      0      92
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCDCBasicDemoTasks
     _CDCTxService
       _USBTransferOnePacket
     _ProcessCommand
       _WS2812b_Write
       _hexatoi
       _skip_white
     _getsUSBUSART
       _USBTransferOnePacket
     _putUSBUSART
     _putrsUSBUSART
   _SYSTEM_Initialize
     _BUTTON_Enable
     _LED_Enable
       _LED_Off
   _USBDeviceAttach
   _USBDeviceInit
   _WS2812b_Init
   _WS2812b_Write

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_On
                 i1_LED_Off
               _APP_UpdateTimers
               _BUTTON_UpdateStates
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _USBCheckCDCRequest
               i1_SYSTEM_Initialize
                 i1_BUTTON_Enable
                 i1_LED_Enable
                   i1_LED_Off
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCDCBasicDemoInitialize
               _APP_LEDUpdateUSBStatus
                 _LED_On
                 i1_LED_Off
               _APP_UpdateTimers
               _BUTTON_UpdateStates
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i1_USBTransferOnePacket
               _USBCheckCDCRequest
               i1_SYSTEM_Initialize
                 i1_BUTTON_Enable
                 i1_LED_Enable
                   i1_LED_Off
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCDCBasicDemoInitialize
             _APP_LEDUpdateUSBStatus
               _LED_On
               i1_LED_Off
             _APP_UpdateTimers
             _BUTTON_UpdateStates
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i1_USBTransferOnePacket
             _USBCheckCDCRequest
             i1_SYSTEM_Initialize
               i1_BUTTON_Enable
               i1_LED_Enable
                 i1_LED_Off
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCDCBasicDemoInitialize
           _APP_LEDUpdateUSBStatus
             _LED_On
             i1_LED_Off
           _APP_UpdateTimers
           _BUTTON_UpdateStates
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i1_USBTransferOnePacket
           _USBCheckCDCRequest
           i1_SYSTEM_Initialize
             i1_BUTTON_Enable
             i1_LED_Enable
               i1_LED_Off
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_On
           i1_LED_Off
         _APP_UpdateTimers
         _BUTTON_UpdateStates
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _USBCheckCDCRequest
         i1_SYSTEM_Initialize
           i1_BUTTON_Enable
           i1_LED_Enable
             i1_LED_Off
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCDCBasicDemoInitialize
         _APP_LEDUpdateUSBStatus
           _LED_On
           i1_LED_Off
         _APP_UpdateTimers
         _BUTTON_UpdateStates
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i1_USBTransferOnePacket
         _USBCheckCDCRequest
         i1_SYSTEM_Initialize
           i1_BUTTON_Enable
           i1_LED_Enable
             i1_LED_Off
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCDCBasicDemoInitialize
       _APP_LEDUpdateUSBStatus
         _LED_On
         i1_LED_Off
       _APP_UpdateTimers
       _BUTTON_UpdateStates
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i1_USBTransferOnePacket
       _USBCheckCDCRequest
       i1_SYSTEM_Initialize
         i1_BUTTON_Enable
         i1_LED_Enable
           i1_LED_Off
     i1_USBDeviceInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10      F      10       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               10     10      10       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            10      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               10     10      10       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      13      13       23.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      48      17       90.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      40      19       80.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     169      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     169      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jun 27 19:18:50 2020

                               _USB_SD_Ptr 18E4                                          _p 01D1  
                                        pc 0002                                __CFG_CP$OFF 0000  
                                       l20 176D                                         l21 1770  
                                       l22 1773                                         l24 1780  
                                       l18 176A                                         l54 1767  
                              ?_LED_Enable 0070                      ??_BUTTON_UpdateStates 0070  
                            _USBDeviceInit 1781                         __size_of_CDCInitEP 0028  
     USER_USB_CALLBACK_EVENT_HANDLER@event 0060       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0062  
                                      l100 07EC                                        l103 07FD  
                                      l301 03F7                __end_of_USBStdGetDscHandler 08E1  
                                      l680 03E6                                        _BDT 0020  
                                      l960 00A6                                        l961 00B1  
                                      l970 0128                                        l962 00C0  
                                      l963 00CB                                        l964 00DA  
                                      l956 0072                                        l965 00E5  
                                      l957 007D                                        l966 00F4  
                                      l958 008C                                        l967 00FF  
                                      l959 0097                                        l968 010E  
                                      l969 0119                                        i1l8 0CEA  
                                      _UIE 0E92                                        _UIR 0E90  
                   _APP_LEDUpdateUSBStatus 0C8C                                 _USBSuspend 0E10  
                     USBStdSetCfgHandler@i 0069                       USBStdSetCfgHandler@p 0066  
              __end_ofi1_SYSTEM_Initialize 0A99                               __CFG_BORV$LO 0000  
                                      wreg 0009                             _USBDeviceTasks 0BBD  
                           _USBDeviceState 006F                              _BUTTON_Enable 07EA  
                                     S5897 06EF                                       S5899 1146  
                    ??_USBCtrlTrfRxService 0072                             ??_getsUSBUSART 00EC  
                 USBEnableEndpoint@options 0074                               __CFG_LVP$OFF 0000  
                          __end_of_LED_Off 1781                                       l5001 016C  
               USBConfigureEndpoint@handle 0073                                       l5005 0171  
                                     l4205 1776                                       l4225 0500  
                                     l4217 04F1                                       l5041 01B4  
                                     l4401 1758                                       l4235 0543  
                                     l4323 03B4                                       l5027 0197  
                                     l4237 0558                                       l4501 043E  
                                     l5053 01D0                                       l4421 07F5  
                                     l5117 0051                                       l4503 044F  
                                     l5055 01D7                                       l4407 175D  
                                     l4353 03A3                                       l4329 032A  
                                     l4611 04CD                                       l4603 04BE  
                                     l4363 0056                                       l4347 0393  
                                     l4339 0343                                       l5075 01F7  
                                     l4613 04D0                                       l4605 04C2  
                                     l4349 0395                                       l4517 1743  
                                     l4525 0228                                       l5093 021E  
                                     l4615 04E1                                       l4383 0133  
                                     l4535 0232                                       l4561 046B  
                                     l4553 0461                                       l4545 0451  
                                     l4625 025C                                       l4537 023F  
                                     l4529 022E                                       l5089 0215  
                                     l4393 174E                                       l4573 048A  
                                     l4493 0425                                       l4397 1753  
                                     l4389 1749                                       l4805 17C9  
                                     l4567 0482                                       l4647 0303  
                                     l4585 0499                                       l4593 04A9  
                                     l4489 0412                                       l4761 178C  
                                     l4595 04AE                                       l4499 0427  
                                     l4951 03FC                                       l4777 17A2  
                                     l4955 03CF                                       l4789 17B7  
                                     l4989 0156                                       u3365 0280  
                                     u3375 02DD                                       u4257 0044  
                                     i1l10 0CED                                       i1l11 0CF0  
                                     i1l12 0CF3                                       i1l20 0CD4  
                                     i1l21 0CD7                                       u2925 034C  
                                     i1l14 0D00                                       i1l22 0CDA  
                                     i1l24 0CE7                                       i1l18 0CD1  
                                     i1l54 0AB9                                       u2895 033B  
                                     i1l74 0D7B                                       i1l84 0D8F  
                                     i1l79 0D87                      ??_USBCtrlTrfTxService 0070  
                                     i1l89 0D9F                                       _UCFG 0E91  
                                     _UEP0 0E98                                       _UEP1 0E99  
                                     _UEIE 0E97                                       _UEIR 0E93  
                                     _UCON 0E8E                               __CFG_WRT$OFF 0000  
                        ?_APP_UpdateTimers 0070                            _CDCDataInHandle 01C3  
   USBStdFeatureReqHandler@current_ep_data 0068                                       _pDst 01E4  
                                     _main 003E                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                            _USBDeviceAttach 03E7  
                                     btemp 007E                              __CFG_BOREN$ON 0000  
                       ??_APP_UpdateTimers 0070                                       start 000A  
                            __CFG_IESO$OFF 0000                 __end_of_USBCheckStdRequest 0871  
                   ??_USBCtrlTrfOutHandler 0076                  ??_USBStdFeatureReqHandler 007B  
                   __size_of_putrsUSBUSART 0030                   ??_USBStdGetStatusHandler 0070  
                       __size_ofi1_LED_Off 0019                             ?_USBDeviceInit 0070  
                              _writeBuffer 02A0                                      ?_main 0070  
                            __CFG_WDTE$OFF 0000          __size_of_USBCtrlEPServiceComplete 0077  
                   __end_of_USBDeviceTasks 0C5D                  ?_USBCtrlEPServiceComplete 0070  
                                    i1l100 0FED                                      i1l103 0FFF  
                                    i1l412 0E30                                      i1l252 0BD7  
                                    i1l326 09E9                                      i1l262 0C22  
                                    i1l263 0C5A                                      i1l264 0C57  
                                    i1l354 065C                                      i1l339 0EE0  
                                    i1l451 083F                                      i1l453 0840  
                                    i1l462 085E                                      i1l439 0EC4  
                                    i1l391 08E5                                      i1l394 0924  
                                    i1l547 0FEA                                      i1l395 08EC  
                                    i1l396 08EF                                      i1l662 0C8B  
                                    i1l487 0B85                                      i1l680 0A98  
                                    _UADDR 0E96                                      _USTAT 0E8F  
       __size_of_USBCtrlEPAllowStatusStage 005B                             __CFG_FCMEN$OFF 0000  
                           ?_BUTTON_Enable 0070            __end_of_USBCtrlEPAllowDataStage 0A76  
                                    _sd000 18F0                                      _sd001 1877  
                                    _sd002 1843             ?_USBIncrement1msInternalTimers 0070  
                          __end_of_hexatoi 03B4                                      _first 01ED  
                                    _timer 01CD                                      _tohex 18D3  
                      __size_of_LED_Enable 0022                          __end_of_CDCInitEP 0585  
                                    status 0003                                      wtemp0 007E  
                          putUSBUSART@data 00E1               __size_of_USBStdSetCfgHandler 0065  
                           __CFG_MCLRE$OFF 0000                            __initialization 000C  
                             __end_of_main 0054                             __CFG_LPBOR$OFF 0000  
                __size_of_USBCtrlEPService 0040                                     ??_main 00F0  
                          ?_USBDeviceTasks 0070                                ?_USBSuspend 0070  
                                ??_LED_Off 00E0                             WS2812b_Write@a 00E1  
                           WS2812b_Write@i 00E0                        __CFG_USBLSCLK$48MHz 0000  
                          i1_USBDeviceInit 0F19                               _cdc_mem_type 01D5  
                            _putrsUSBUSART 0220                    __end_of_USBDeviceAttach 0400  
                         _CDCDataOutHandle 01C5                                     _ACTCON 039B  
                                   i1S5901 06D5                                     i1S5911 1100  
                                   i1S5915 116E                                     i1S5907 0700  
                                   i1S5917 115A                                     i1S5909 1150  
                                   i1S5919 1164                          __end_ofi1_LED_Off 0CE8  
                          getsUSBUSART@len 00EB                     SYSTEM_Initialize@state 00E2  
                    __size_of_CDCTxService 0093                              ?i1_LED_Enable 0070  
                                   i1l4011 0B1B                                     i1l4003 0AFA  
                                   i1l4031 0B56                                     i1l4015 0B29  
                                   i1l4041 0B79                                     i1l4025 0B44  
                                   i1l4017 0B34                                     i1l4009 0B18  
                                   i1l4131 0672                                     i1l4115 064B  
                                   i1l4027 0B4B                                     i1l3501 0AA0  
                                   i1l4053 0BA5                                     i1l4143 06AA  
                                   i1l4055 0BAB                                     i1l4313 0EB8  
                                   i1l4129 0661                                     i1l3505 0AA5  
                                   i1l4049 0B8B                                     i1l4073 09BA  
                                   i1l3611 0FBD                                     i1l3603 0FB2  
                                   i1l3515 0AAF                                     i1l4091 09F4  
                                   i1l4059 09AA                                     i1l4317 0EC9  
                                   i1l4309 0EA9                                     i1l3541 05EE  
                                   i1l3533 05DF                                     i1l3621 0FD1  
                                   i1l3509 0AAA                                     i1l4069 09B7  
                                   i1l4271 0E3D                                     i1l3551 0631  
                                   i1l3615 0FC4                                     i1l3527 0FF7  
                                   i1l4431 0E34                                     i1l3561 0D6D  
                                   i1l3457 05C0                                     i1l3553 0646  
                                   i1l3633 0FE0                                     i1l3705 0A78  
                                   i1l3721 0C5D                                     i1l4283 0E65  
                                   i1l4267 0E37                                     i1l3467 0CDD  
                                   i1l3563 0D71                                     i1l3459 05C9  
                                   i1l3491 0591                                     i1l3627 0FDC  
                                   i1l3731 0C74                                     i1l3723 0C65  
                                   i1l4099 09FA                                     i1l4285 0E6B  
                                   i1l3477 0CF6                                     u203_25 0D66  
                                   i1l5413 0951                                     i1l3823 0D22  
                                   i1l3807 0D01                                     i1l3671 0CA4  
                                   i1l3663 0C92                                     i1l3567 0D82  
                                   i1l3487 058B                                     i1l3719 0A8D  
                                   i1l3735 0C78                                     i1l3727 0C6A  
                                   i1l4297 0E85                                     i1l3497 0A9B  
                                   i1l3729 0C6F                                     i1l4457 0E0C  
                                   i1l4299 0E88                                     i1l3683 0CC0  
                                   i1l3675 0CAE                                     i1l3691 0CCA  
                                   i1l3667 0C9B                                     i1l3579 0D90  
                                   i1l3923 087A                                     i1l5435 0983  
                                   i1l5523 0DD6                                     i1l4459 0E0E  
                                   i1l5603 0C1B                                     i1l3693 0E67  
                                   i1l3589 0FA0                                     i1l3941 08CE  
                                   i1l3933 08AF                                     i1l3925 0883  
                                   i1l5381 09A0                                     i1l5461 0854  
                                   i1l5445 0846                                     i1l5525 0DD7  
                                   i1l4725 0F5D                                     i1l4709 0F4C  
                                   i1l5613 0C28                                     i1l3767 0EDC  
                                   i1l3679 0CB7                                     i1l3943 08D1  
                                   i1l3935 08B2                                     i1l3919 0871  
                                   i1l5471 0869                                     i1l5447 0847  
                                   i1l3855 0A4B                                     i1l5527 0DD8  
                                   i1l5631 0C51                                     i1l5623 0C39  
                                   i1l5551 0BD1                                     i1l5543 0BCA  
                                   _LED_On 0CE8                                     i1l3697 0F94  
                                   i1l3689 0CC4                                     i1l5385 0997  
                                   i1l5457 0852                                     i1l5449 0848  
                                   i1l4681 0F24                                     i1l3779 0EF5  
                                   i1l3787 0F03                                     i1l3947 08D4  
                                   i1l5395 0936                                     i1l5387 092E  
                                   i1l5459 0853                                     i1l3859 0A5D  
                                   i1l5483 0801                                     i1l5571 0BE8  
                                   i1l3789 0F07                                     i1l3797 0F15  
                                   i1l3949 08E1                                     i1l5629 0C45  
                                   i1l5565 0BE3                                     i1l5903 0C79  
                                   i1l3959 08FF                                     i1l5913 0D95  
                                   i1l5905 0C86                                     i1l3977 0ABA  
                                   i1l3969 0919                                     i1l4697 0F38  
                                   i1l5577 0BF8                                     i1l3987 0ACC  
                                   i1l5595 0C0A                                     i1l3989 0ACE  
                                   i1l5589 0C04                                     u231_25 0A54  
                                   u268_25 0658                                     _OSCCON 0099  
                          i1_BUTTON_Enable 0FEB                              CDCTxService@i 00EB  
             i1USBTransferOnePacket@handle 0079                             __CFG_PWRTE$OFF 0000  
                        _shortPacketStatus 01E6                            USBDeviceTasks@i 006E  
              USBStdFeatureReqHandler@pUEP 0066                   USBTransferOnePacket@data 00E1  
               USBCtrlTrfInHandler@lastDTS 0075                            ??_USBDeviceInit 00E0  
                             ?_putUSBUSART 00E0                             __CFG_STVREN$ON 0000  
                                   _gamma8 1000                       __end_of_getsUSBUSART 0451  
                        _USBEnableEndpoint 0585            __size_of_USBStdGetStatusHandler 004D  
                                   _memset 0993                                     _state1 01CF  
                       ?_USBEnableEndpoint 0074              __size_of_USBTransferOnePacket 0079  
                                ??_hexatoi 00E4                            ??_BUTTON_Enable 00E0  
                       ProcessCommand@arg1 016C                         ProcessCommand@argc 016B  
                             _CDCTxService 0451                              ?_WS2812b_Init 0070  
                           ?_putrsUSBUSART 00E0                        ??_USBEnableEndpoint 0075  
                              _CtrlTrfData 0058                             ??i1_LED_Enable 0071  
             ?_APP_DeviceCDCBasicDemoTasks 0070                       _controlTransferState 01E5  
                        _SYSTEM_Initialize 03C3                    __end_of__initialization 003B  
               i1USBTransferOnePacket@data 0071                         ?_SYSTEM_Initialize 0070  
                 __size_of_USBStallHandler 001E                        __size_of_USBSuspend 0010  
                     i1USBDeviceInit@i_868 0072                             __pcstackCOMMON 0070  
                __end_of_USBEnableEndpoint 05A2                              __end_of_sd000 18F4  
                            __end_of_sd001 18AB                              __end_of_sd002 1877  
                             __pidataBANK3 0000                        ??_SYSTEM_Initialize 00E2  
                                LED_On@led 0070           __size_of_USBCtrlEPAllowDataStage 0055  
                             ??_LED_Enable 00E1              __size_of_USBConfigureEndpoint 0030  
                  __end_ofi1_USBDeviceInit 0F94                              __end_of_tohex 18E4  
              __end_of_USBCtrlTrfInHandler 0ECB                    ?_APP_LEDUpdateUSBStatus 0070  
                  __size_of_ProcessCommand 00D4                             ??_WS2812b_Init 00E0  
                app_device_cdc_basic@timer 01EC                                 _cdc_rx_len 01D8  
                               _cdc_tx_len 01D6                    __end_ofi1_BUTTON_Enable 1000  
                 ??_USBCtrlTrfSetupHandler 007D                    _USBTicksSinceSuspendEnd 01D9  
                   __size_of_WS2812b_Write 00E6                           ?_USBDeviceAttach 0070  
                __end_of_SYSTEM_Initialize 03E7                     _USBStdGetStatusHandler 08E1  
                               __pbssBANK0 006F                                 __pbssBANK3 01A0  
                               __pbssBANK4 0220                                 __pbssBANK5 02A0  
                               __pbssBANK6 0320                                 __pbssBANK7 03A0  
                                  ?_LED_On 0070                               i1LED_Off@led 0070  
            ??_APP_DeviceCDCBasicDemoTasks 00F0   __end_of_APP_DeviceCDCBasicDemoInitialize 0FA0  
__size_of_APP_DeviceCDCBasicDemoInitialize 000C         ??_APP_DeviceCDCBasicDemoInitialize 0070  
        ?_APP_DeviceCDCBasicDemoInitialize 0070           _APP_DeviceCDCBasicDemoInitialize 0F94  
                       __end_of_LED_Enable 1768                __size_of_USBWakeFromSuspend 0017  
                              _pBDTEntryIn 01A7                                 _cmd_buffer 0320  
         __end_of_USBCtrlEPServiceComplete 0A21                                 _cmd_length 01D3  
              __size_of_USBCheckCDCRequest 004B                __end_of_BUTTON_UpdateStates 0DA0  
                               __pmaintext 003E                       USBCtrlTrfRxService@i 0074  
                    i1BUTTON_Enable@button 0070                                 _cmd_prompt 18EA  
                            LED_Enable@led 00E1                            __CFG_PLLMULT$3x 0000  
           __end_of_APP_LEDUpdateUSBStatus 0CCF                                 __pintentry 0004  
                __size_of_APP_UpdateTimers 0004                                    ?_memset 0070  
                               _device_dsc 18C1                           _USBCtrlEPService 0DA0  
                               _ep_data_in 01BE                __end_of_USBCtrlTrfRxService 06D5  
                       _USBCheckStdRequest 082F                          _configDescriptor1 1800  
                          ??_putrsUSBUSART 00E2                                    _LED_Off 1768  
                                  u400_2m0 0DD2                __end_of_USBCtrlTrfTxService 0F19  
                      _USBStdSetCfgHandler 092E                                 _helloWorld 18AB  
                      ?_USBCheckStdRequest 0070               __size_of_USBStdGetDscHandler 0070  
                                  _UIEbits 0E92                                    _UIRbits 0E90  
             __size_ofi1_SYSTEM_Initialize 0023                            __size_of_LED_On 0019  
                            _cdc_trf_state 01D7                   ??i1_USBTransferOnePacket 0074  
           APP_LEDUpdateUSBStatus@ledCount 01C1                                    _pCDCDst 01C7  
                                  _pCDCSrc 01C9                      __size_of_getsUSBUSART 004C  
          ??_USBIncrement1msInternalTimers 0070                       ?_USBStdSetCfgHandler 0070  
                                _CDCInitEP 055D                 __size_of_USBEnableEndpoint 001D  
                               _readBuffer 03A0                       ??_USBCheckStdRequest 007D  
                            _WS2812b_Write 0054              __size_of_USBCtrlTrfOutHandler 0030  
                         ??_USBDeviceTasks 007D                          ??_USBStallHandler 0070  
                     __end_ofi1_LED_Enable 0ABA       __size_of_APP_DeviceCDCBasicDemoTasks 00E6  
                         ?i1_USBDeviceInit 0070                       __size_of_putUSBUSART 0017  
                       getsUSBUSART@buffer 00ED                            __size_of_memset 0017  
                __end_of_configDescriptor1 1843                                    _ledData 01B8  
                                  __ptext1 0400                                    __ptext2 1781  
                                  __ptext3 03E7                                    __ptext4 03C3  
                                  __ptext5 1746                                    __ptext6 1768  
                                  __ptext7 07EA                                    __ptext8 013A  
                                  __ptext9 0220                                    _inPipes 01B3  
              _USBDeferOUTDataStagePackets 01DA                                    _hexatoi 0324  
                             ??_USBSuspend 007B                           ?i1_BUTTON_Enable 0070  
                       __end_of_USB_CD_Ptr 18F6                 __size_of_SYSTEM_Initialize 0024  
          __size_of_USBCtrlTrfSetupHandler 002E                                    clrloop0 06FA  
                     end_of_initialization 003B                               _getsUSBUSART 0405  
                       __end_of_USB_SD_Ptr 18EA                        _pBDTEntryEP0OutNext 01CB  
                                  memset@c 0072                                    memset@n 0074  
                                  memset@p 0076                            _USB1msTickCount 0220  
          _dummy_encapsulated_cmd_response 0224                                  i1_LED_Off 0CCF  
                 ?_USBStdFeatureReqHandler 0070                      ??_USBStdSetCfgHandler 007B  
                               ?_CDCInitEP 0070                       __end_of_WS2812b_Init 0405  
                       __end_of_USBSuspend 0E20                             ?_WS2812b_Write 0070  
                  _USBCtrlEPAllowDataStage 0A21                   _USBCtrlEPServiceComplete 09AA  
               _USBStatusStageEnabledFlag1 01DD                 _USBStatusStageEnabledFlag2 01DC  
                               _skip_white 03B4                         USBEnableEndpoint@p 0077  
                                _PORTBbits 000D                            i1LED_Enable@led 0071  
                           _ProcessCommand 0250                           __CFG_FOSC$INTOSC 0000  
                                _TRISBbits 008D                                  _TRISCbits 008E  
                       _BothEP0OutUOWNsSet 01E0                  USBStdSetCfgHandler@i_1618 0068  
                USBConfigureEndpoint@EPNum 0072                 ?_USBCtrlEPAllowStatusStage 0070  
      USER_USB_CALLBACK_EVENT_HANDLER@size 0064    APP_DeviceCDCBasicDemoTasks@numBytesRead 01EE  
                                _USTATcopy 01EA                   i1USBTransferOnePacket@ep 0078  
             __end_of_USBTransferOnePacket 055D                             __end_of_LED_On 0D01  
          __size_ofi1_USBTransferOnePacket 0079                                 ?i1_LED_Off 0070  
                        putUSBUSART@length 00E0                         __CFG_PLLEN$ENABLED 0000  
                       USBDeviceInit@i_868 00E2                     _USBCtrlTrfSetupHandler 0801  
                    __end_of_USBDeviceInit 1800      __end_of_USBIncrement1msInternalTimers 0DF2  
   __size_of_USBIncrement1msInternalTimers 0012              _USBIncrement1msInternalTimers 0DE0  
                         _APP_UpdateTimers 0E67                     __end_of_ProcessCommand 0324  
                               LED_Off@led 00E0                             __end_of_gamma8 1100  
                       putrsUSBUSART@pData 00E5                             __end_of_memset 09AA  
                        _USBBusIsSuspended 01E2                        start_initialization 000C  
                  ?_USBStdGetStatusHandler 0070                      __end_of_BUTTON_Enable 07FE  
            USBCtrlTrfRxService@byteToRead 0075                                _cdc_data_rx 0120  
                              _cdc_data_tx 00A0               __end_of_USBConfigureEndpoint 05D2  
          __end_of_USBStdFeatureReqHandler 0BBD                                   ??_LED_On 0070  
        __end_of_USBCtrlEPAllowStatusStage 0D5C                   __end_of_USBCtrlEPService 0DE0  
                ??_USBCtrlEPAllowDataStage 0073                            ??_WS2812b_Write 00E0  
                              ??_CDCInitEP 007B                             USBDeviceInit@i 00E3  
                           USBDeviceInit@p 00E0                      __size_ofi1_LED_Enable 0021  
                   _pBDTEntryEP0OutCurrent 01E7                    USBTransferOnePacket@dir 00E0  
                  USBTransferOnePacket@len 00E3                        _USBStdGetDscHandler 0871  
                              __pdataBANK3 01EC                            ?_ProcessCommand 0070  
                                 ??_memset 0076                        i1_SYSTEM_Initialize 0A76  
                              ?_skip_white 0070                     i1_USBTransferOnePacket 05D2  
                   _USBActiveConfiguration 01EB             __end_of_USBStdGetStatusHandler 092E  
                i1USBTransferOnePacket@dir 0070                  i1USBTransferOnePacket@len 0073  
                                 ?_LED_Off 0070                                  ___latbits 0002  
                            __pcstackBANK0 0060                              __pcstackBANK1 00E0  
                            __pcstackBANK2 0160                              __pcstackBANK3 01EE  
             __size_of_USBCtrlTrfInHandler 0060                       ?_USBStdGetDscHandler 0070  
                     ?i1_SYSTEM_Initialize 0070                               i1_LED_Enable 0A99  
               __end_of_USBWakeFromSuspend 0E37                      __size_of_WS2812b_Init 0005  
                          _USBStallHandler 0DF2                               _pBDTEntryOut 01AD  
                            _numBytesWrite 01D4                                ??i1_LED_Off 0070  
               __end_of_USBCheckCDCRequest 0FEB                   __size_of_USBDeviceAttach 0019  
                                _cmd_state 01D2               __size_of_BUTTON_UpdateStates 0044  
                                __pswtext1 06EF                                  __pswtext2 1146  
                                __pswtext3 06D5                                  __pswtext4 0700  
                                __pswtext5 1150                                  __pswtext6 1100  
                                __pswtext7 116E                                  __pswtext8 115A  
                                __pswtext9 1164                       _USBTransferOnePacket 04E4  
                                 ?_hexatoi 00E0              APP_DeviceCDCBasicDemoTasks@ch 01EF  
                    __end_of_putrsUSBUSART 0250                               _WS2812b_Init 0400  
             __end_of_USBCtrlTrfOutHandler 0E67                      ??_USBStdGetDscHandler 0070  
                              _ep_data_out 01BB        __end_of_APP_DeviceCDCBasicDemoTasks 0220  
              _APP_DeviceCDCBasicDemoTasks 013A               __size_of_USBCtrlTrfRxService 008A  
            USBConfigureEndpoint@direction 0070                      ??i1_SYSTEM_Initialize 0072  
             __size_of_USBCtrlTrfTxService 004E                                   _LATCbits 010E  
                      __size_of_skip_white 000F                 ??_USBCtrlEPServiceComplete 0075  
                                clear_ram0 06F9                                   _PIE2bits 0092  
                                 _PIR2bits 0012                              ??_putUSBUSART 00E1  
                                 _UEP0bits 0E98                 _USBDeferINDataStagePackets 01DB  
              __size_of_USBCheckStdRequest 0042                                   _UCONbits 0E8E  
                     _USBConfigureEndpoint 05A2           __size_of_USBStdFeatureReqHandler 0103  
                    ?_USBTransferOnePacket 00E0                          _SYS_InterruptHigh 0004  
                            ?_CDCTxService 0070                                   _WPUBbits 020D  
                             _RemoteWakeup 01E3                           __size_of_LED_Off 0019  
                       ?_SYS_InterruptHigh 0070                   __size_ofi1_USBDeviceInit 007B  
                  __end_of_USBStallHandler 0E10                          putrsUSBUSART@data 00E0  
              ??_USBCtrlEPAllowStatusStage 0070                         __end_of_cmd_prompt 18F0  
              __end_of_USBStdSetCfgHandler 0993                                  hexatoi@ch 0164  
                 __end_of_APP_UpdateTimers 0E6B                        ??_SYS_InterruptHigh 007E  
                 __size_ofi1_BUTTON_Enable 0015                         __end_of_device_dsc 18D3  
                 ??_APP_LEDUpdateUSBStatus 0071                    ?_USBCtrlTrfSetupHandler 0070  
                  USBStdGetStatusHandler@p 0070                     USBTransferOnePacket@ep 00E8  
                                 _SetupPkt 0050                      ?_USBConfigureEndpoint 0070  
                       __end_of_helloWorld 18C1                          ??_USBDeviceAttach 00E0  
                __end_of_SYS_InterruptHigh 000A                        __end_of_putUSBUSART 1746  
                              _line_coding 022C                                 _ANSELBbits 018D  
                           ??_CDCTxService 00EB                           __size_of_hexatoi 0090  
                  __size_of_USBDeviceTasks 00A0                                   __ptext10 172F  
                                 __ptext11 0405                                   __ptext20 0F19  
                                 __ptext12 0250                                   __ptext21 0E20  
                                 __ptext13 03B4                                   __ptext30 092E  
                                 __ptext22 0E10                                   __ptext14 0324  
                                 __ptext31 0993                                   __ptext23 0DF2  
                                 __ptext15 0054                                   __ptext40 055D  
                                 __ptext32 08E1                                   __ptext24 0DE0  
                                 __ptext16 0451                                   __ptext41 05D2  
                                 __ptext33 0871                                   __ptext25 0DA0  
                                 __ptext17 04E4                                   __ptext50 0E37  
                                 __ptext42 0585                                   __ptext34 0ABA  
                                 __ptext26 0801                                   __ptext51 064B  
                                 __ptext43 05A2                                   __ptext35 0C5D  
                                 __ptext27 09AA                                   __ptext19 0BBD  
                                 __ptext52 0D01                                   __ptext44 0D5C  
                                 __ptext36 0A76                                   __ptext28 0A21  
                                 __ptext53 0E6B                                   __ptext45 0E67  
                                 __ptext37 0A99                                   __ptext29 082F  
                                 __ptext54 0ECB                                   __ptext46 0C8C  
                                 __ptext38 0FEB                                   __ptext47 0CCF  
                                 __ptext39 0FA0                                   __ptext48 0CE8  
                                 __ptext49 0F94             __end_of_USBCtrlTrfSetupHandler 082F  
                            __size_of_main 0016                          ?_USBCtrlEPService 0070  
                       ??_USBCtrlEPService 006B                           ??_ProcessCommand 0165  
                      _USBCtrlTrfInHandler 0E6B                        BUTTON_Enable@button 00E0  
                                 _outPipes 01A0                       _USBCtrlTrfOutHandler 0E37  
                                 int$flags 007E                    ?i1_USBTransferOnePacket 0070  
                _USBCtrlEPAllowStatusStage 0D01                                 _LED_Enable 1746  
                   ??_USBTransferOnePacket 00E4                               ??_skip_white 00E0  
                         putrsUSBUSART@len 00E7                                   hexatoi@a 0160  
                _USBDeferStatusStagePacket 01DE                   CDCTxService@byte_to_send 00EC  
                         i1USBDeviceInit@i 0073                           i1USBDeviceInit@p 0070  
                               _INTCONbits 000B                   i1SYSTEM_Initialize@state 0072  
                     ?_USBCtrlTrfInHandler 0070              USBCtrlTrfTxService@byteToSend 0072  
                           __pstringtext10 18EA                             __pstringtext11 18F0  
                                 memset@p1 0070                           ?_USBStallHandler 0070  
                 USBStdFeatureReqHandler@p 0069                                   intlevel1 0000  
                   __size_of_USBDeviceInit 007F    __end_of_USER_USB_CALLBACK_EVENT_HANDLER 0C8C  
 __size_of_USER_USB_CALLBACK_EVENT_HANDLER 002F           ?_USER_USB_CALLBACK_EVENT_HANDLER 0060  
        ??_USER_USB_CALLBACK_EVENT_HANDLER 007B            _USER_USB_CALLBACK_EVENT_HANDLER 0C5D  
                        ??i1_USBDeviceInit 0070                        _BUTTON_UpdateStates 0D5C  
                        __CFG_CLKOUTEN$OFF 0000                         __end_of_skip_white 03C3  
          __size_of_APP_LEDUpdateUSBStatus 0043                      __end_of_WS2812b_Write 013A  
           __end_ofi1_USBTransferOnePacket 064B                     ??_USBConfigureEndpoint 0071  
                    ?_USBCtrlTrfOutHandler 0070                     __size_of_BUTTON_Enable 0014  
                              _putUSBUSART 172F                          ??i1_BUTTON_Enable 0070  
                     __CFG_CPUDIV$NOCLKDIV 0000                        _USBCtrlTrfRxService 064B  
                       _USBWakeFromSuspend 0E20                    _USBStdFeatureReqHandler 0ABA  
                       _USBCheckCDCRequest 0FA0                        _USBCtrlTrfTxService 0ECB  
                     ?_BUTTON_UpdateStates 0070                 __size_of_SYS_InterruptHigh 0006  
                            __pstringtext1 1000                              __pstringtext2 18D3  
                            __pstringtext3 18E4                              __pstringtext4 18F4  
                            __pstringtext5 1800                              __pstringtext6 1843  
                            __pstringtext7 1877                              __pstringtext8 18AB  
                            __pstringtext9 18C1                        ?_USBWakeFromSuspend 0070  
                    ??_USBCtrlTrfInHandler 0073                      _USBAlternateInterface 01E8  
                      ?_USBCheckCDCRequest 0070                        USBEnableEndpoint@ep 0079  
                          _endpoint_number 01E1                       ?_USBCtrlTrfRxService 0070  
                            ?_getsUSBUSART 00EB                   ?_USBCtrlEPAllowDataStage 0070  
                     ?_USBCtrlTrfTxService 0070               _USBStatusStageTimeoutCounter 01DF  
                     ??_USBWakeFromSuspend 007B                 USBTransferOnePacket@handle 00E9  
                     __end_of_CDCTxService 04E4                       ??_USBCheckCDCRequest 0070  
                               _USB_CD_Ptr 18F4  
